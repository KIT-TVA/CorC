<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:de.tu-bs.cs.isf.cbc.cbcmodel="http://www.example.org/cbcmodel">
  <de.tu-bs.cs.isf.cbc.cbcmodel:CbCFormula name="push" className="IntList">
    <statement name="statement" id="72a06e18-48f0-43b7-ad97-69540851688e">
      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SelectionStatement" id="da3b1ffc-0009-40a4-9a71-3ab579a00c11">
        <guards name="MetaVariables.FV_SORTED = TRUE"/>
        <guards name="MetaVariables.FV_SORTED = FALSE"/>
        <commands name="statement" id="5118bdf9-8e9d-429e-95ac-78e2b85ca6a3">
          <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="88550835-23de-4cfe-b26e-3cd5f6b007a3">
            <firstStatement name="statement1" id="c3fab441-ecf4-465f-87f4-f3d85a991a41">
              <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SelectionStatement" id="49ecfedf-2ce9-4a5c-933c-25b5c2f091ac">
                <guards name="MetaVariables.FV_CONS = TRUE"/>
                <guards name="MetaVariables.FV_CONS = FALSE"/>
                <commands name="statement" id="c7e22094-e9e0-42ed-8091-12978c577012">
                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SelectionStatement" id="7b31abf1-6c1b-4451-bfca-14600ca25b53">
                    <guards name="MetaVariables.FV_BASE = TRUE"/>
                    <guards name="MetaVariables.FV_BASE = FALSE"/>
                    <commands name="statement" id="dd0a6514-f8fe-4670-a056-f99f2466a74f">
                      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="820a9642-1691-4c8c-a0df-7ace18f0308f">
                        <firstStatement name="statement1" id="f0f831bb-c848-463c-a882-e152b4328231">
                          <refinement name="tmp = new int[this.data.length+1];" id="3052fcc6-9c0c-4d07-ad09-81b0427b9b34">
                            <postCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>tmp</modifiables>
                            </postCondition>
                            <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                          </refinement>
                          <postCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                          </postCondition>
                          <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                        </firstStatement>
                        <secondStatement name="statement2" id="03ef60b3-6db6-423d-b832-3215cc8042b9">
                          <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="4133e6ce-5ef8-4bcd-98d0-6fbccfc4a27f">
                            <firstStatement name="statement1" id="f3a44efd-8a7f-41ca-8dfd-8179dee7f13a">
                              <refinement name="tmp[tmp.length-1] = newTop;" id="0142bd49-203f-4980-b70e-2a344125436f">
                                <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </postCondition>
                                <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>tmp</modifiables>
                                </preCondition>
                              </refinement>
                              <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </postCondition>
                              <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>tmp</modifiables>
                              </preCondition>
                            </firstStatement>
                            <secondStatement name="statement2" id="06a2ce08-d39f-4a38-adb4-6f851d61b69d">
                              <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="bca6051b-54f9-4cb7-ae88-5aaac1e4c208">
                                <firstStatement name="statement1" id="c535e858-ff79-4af9-959d-fb84d8c779da">
                                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="69568ed0-b589-4eb7-913b-d0e68e681d31">
                                    <firstStatement name="statement1" id="a8812e55-5e69-460f-bf82-a63224c4325c">
                                      <refinement name="i = 0;" id="8091d3e3-5205-41d3-bd5d-c60d3804313c">
                                        <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </postCondition>
                                        <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </preCondition>
                                      </refinement>
                                      <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </postCondition>
                                      <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </preCondition>
                                    </firstStatement>
                                    <secondStatement name="statement2" id="730ede72-aa70-484b-93f5-25117fcbdb31">
                                      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SmallRepetitionStatement" name="repetitionStatement" id="c640eb26-ed84-4e0d-8b18-db6ad5d3b30e">
                                        <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[i]</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </postCondition>
                                        <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </preCondition>
                                        <loopStatement name="loop" id="b70f1dbe-3707-4396-b56d-f8cf28581ec5">
                                          <refinement name="tmp[i] = this.data[i];&#xD;&#xA;i++;" id="cfe585ff-da9a-43ed-8a9b-aa0025a6e38a">
                                            <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                              <modifiables>i</modifiables>
                                              <modifiables>tmp</modifiables>
                                              <modifiables>tmp[i]</modifiables>
                                              <modifiables>tmp[tmp.length-1]</modifiables>
                                            </postCondition>
                                            <preCondition name="((tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)) &amp; (i &lt; this.data.length)">
                                              <modifiables>i</modifiables>
                                              <modifiables>tmp</modifiables>
                                              <modifiables>tmp[tmp.length-1]</modifiables>
                                            </preCondition>
                                          </refinement>
                                          <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                            <modifiables>i</modifiables>
                                            <modifiables>tmp</modifiables>
                                            <modifiables>tmp[i]</modifiables>
                                            <modifiables>tmp[tmp.length-1]</modifiables>
                                          </postCondition>
                                          <preCondition name="((tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)) &amp; (i &lt; this.data.length)">
                                            <modifiables>i</modifiables>
                                            <modifiables>tmp</modifiables>
                                            <modifiables>tmp[tmp.length-1]</modifiables>
                                          </preCondition>
                                        </loopStatement>
                                        <variant name="this.data.length - i"/>
                                        <invariant name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)"/>
                                        <guard name="i &lt; this.data.length"/>
                                      </refinement>
                                      <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[i]</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </postCondition>
                                      <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </preCondition>
                                    </secondStatement>
                                    <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </intermediateCondition>
                                  </refinement>
                                  <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[i]</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </postCondition>
                                  <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </preCondition>
                                </firstStatement>
                                <secondStatement name="statement2" id="13b56bea-08a2-485f-9b79-96889ec85dd2">
                                  <refinement name="this.data = tmp;" id="e9ba0e53-8e63-44fb-a5fc-366bd744a591">
                                    <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)">
                                      <modifiables>data[*]</modifiables>
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[i]</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </postCondition>
                                    <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[i]</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </preCondition>
                                  </refinement>
                                  <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)">
                                    <modifiables>data[*]</modifiables>
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[i]</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </postCondition>
                                  <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[i]</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </preCondition>
                                </secondStatement>
                                <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>i</modifiables>
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[i]</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </intermediateCondition>
                              </refinement>
                              <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)">
                                <modifiables>data[*]</modifiables>
                                <modifiables>i</modifiables>
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[i]</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </postCondition>
                              <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </preCondition>
                            </secondStatement>
                            <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>tmp</modifiables>
                              <modifiables>tmp[tmp.length-1]</modifiables>
                            </intermediateCondition>
                          </refinement>
                          <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)">
                            <modifiables>data[*]</modifiables>
                            <modifiables>i</modifiables>
                            <modifiables>tmp</modifiables>
                            <modifiables>tmp[i]</modifiables>
                            <modifiables>tmp[tmp.length-1]</modifiables>
                          </postCondition>
                          <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                          </preCondition>
                        </secondStatement>
                        <intermediateCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                          <modifiables>tmp</modifiables>
                        </intermediateCondition>
                      </refinement>
                      <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
                      <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                    </commands>
                    <commands name="statement" id="bee145c6-344b-4d84-9c13-8ad166bf2c86">
                      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SkipStatement" name=";" id="e0bb8eca-168e-4e8d-9aff-f9665eb6382e">
                        <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
                        <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = FALSE)"/>
                      </refinement>
                      <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
                      <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = FALSE)"/>
                    </commands>
                  </refinement>
                  <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
                  <preCondition name="(((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = TRUE)"/>
                </commands>
                <commands name="statement" id="1bebf1f2-46e7-47c2-8dc9-925a853c1ecc">
                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SelectionStatement" id="7ae38baa-3896-4a3e-891e-02b12224704f">
                    <guards name="MetaVariables.FV_BASE = TRUE"/>
                    <guards name="MetaVariables.FV_BASE = FALSE"/>
                    <commands name="statement" id="e11f0c9d-f4da-4980-91aa-a16d2e87698a">
                      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="2edab6d6-5b95-4988-81a3-5fc9e30e3e09">
                        <firstStatement name="statement1" id="2f023d7a-3c72-44a1-be7f-0da3fa542a62">
                          <refinement name="tmp = new int[this.data.length+1];" id="0f862ad6-99aa-4b50-a7fb-da56622ccefc">
                            <postCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>tmp</modifiables>
                            </postCondition>
                            <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                          </refinement>
                          <postCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                          </postCondition>
                          <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                        </firstStatement>
                        <secondStatement name="statement2" id="2336948f-4957-4b7b-aace-29b195a11fe2">
                          <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="570f16e9-1b9c-4b68-b965-8c4eef75b138">
                            <firstStatement name="statement1" id="9754408e-507e-4b56-8f1e-1721edfc89dd">
                              <refinement name="tmp[tmp.length-1] = newTop;" id="2eace3a1-44c4-4215-be28-90b8bc3e5263">
                                <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </postCondition>
                                <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>tmp</modifiables>
                                </preCondition>
                              </refinement>
                              <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </postCondition>
                              <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>tmp</modifiables>
                              </preCondition>
                            </firstStatement>
                            <secondStatement name="statement2" id="4343e8a9-18d1-4670-bb2e-304ef638e60d">
                              <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="abe4d67a-c228-4ae9-a03c-393874aa5a03">
                                <firstStatement name="statement1" id="3b058686-7174-43e9-b04e-346c1fbd8e6f">
                                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="ac510613-642a-4d78-9840-46448bd56c52">
                                    <firstStatement name="statement1" id="cc1d418c-626c-4a73-b2e6-de2c7035c49b">
                                      <refinement name="i = 0;" id="42735a9b-504e-4624-9098-02981eeba323">
                                        <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </postCondition>
                                        <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </preCondition>
                                      </refinement>
                                      <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </postCondition>
                                      <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </preCondition>
                                    </firstStatement>
                                    <secondStatement name="statement2" id="36ea7dea-ca58-4393-843b-c36486721cff">
                                      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SmallRepetitionStatement" name="repetitionStatement" id="1576e9c2-2384-40b8-a79d-1ff634692f71">
                                        <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[i]</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </postCondition>
                                        <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </preCondition>
                                        <loopStatement name="loop" id="e9c2eae6-3d2f-4213-8080-e38736ebd972">
                                          <refinement name="tmp[i] = this.data[i];&#xD;&#xA;i++;" id="9586f944-d5ee-4d13-ace0-452595ce6ad3">
                                            <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                              <modifiables>i</modifiables>
                                              <modifiables>tmp</modifiables>
                                              <modifiables>tmp[i]</modifiables>
                                              <modifiables>tmp[tmp.length-1]</modifiables>
                                            </postCondition>
                                            <preCondition name="((tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)) &amp; (i &lt; this.data.length)">
                                              <modifiables>i</modifiables>
                                              <modifiables>tmp</modifiables>
                                              <modifiables>tmp[tmp.length-1]</modifiables>
                                            </preCondition>
                                          </refinement>
                                          <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                            <modifiables>i</modifiables>
                                            <modifiables>tmp</modifiables>
                                            <modifiables>tmp[i]</modifiables>
                                            <modifiables>tmp[tmp.length-1]</modifiables>
                                          </postCondition>
                                          <preCondition name="((tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)) &amp; (i &lt; this.data.length)">
                                            <modifiables>i</modifiables>
                                            <modifiables>tmp</modifiables>
                                            <modifiables>tmp[tmp.length-1]</modifiables>
                                          </preCondition>
                                        </loopStatement>
                                        <variant name="this.data.length - i"/>
                                        <invariant name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)"/>
                                        <guard name="i &lt; this.data.length"/>
                                      </refinement>
                                      <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[i]</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </postCondition>
                                      <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </preCondition>
                                    </secondStatement>
                                    <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </intermediateCondition>
                                  </refinement>
                                  <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[i]</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </postCondition>
                                  <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </preCondition>
                                </firstStatement>
                                <secondStatement name="statement2" id="e69d0ce8-98f8-4f24-9e94-84b1b0a862b5">
                                  <refinement name="this.data = tmp;" id="71cb91d8-2c35-4b80-9bdd-47b70bc55324">
                                    <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)">
                                      <modifiables>data[*]</modifiables>
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[i]</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </postCondition>
                                    <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[i]</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </preCondition>
                                  </refinement>
                                  <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)">
                                    <modifiables>data[*]</modifiables>
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[i]</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </postCondition>
                                  <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[i]</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </preCondition>
                                </secondStatement>
                                <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>i</modifiables>
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[i]</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </intermediateCondition>
                              </refinement>
                              <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)">
                                <modifiables>data[*]</modifiables>
                                <modifiables>i</modifiables>
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[i]</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </postCondition>
                              <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </preCondition>
                            </secondStatement>
                            <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>tmp</modifiables>
                              <modifiables>tmp[tmp.length-1]</modifiables>
                            </intermediateCondition>
                          </refinement>
                          <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)">
                            <modifiables>data[*]</modifiables>
                            <modifiables>i</modifiables>
                            <modifiables>tmp</modifiables>
                            <modifiables>tmp[i]</modifiables>
                            <modifiables>tmp[tmp.length-1]</modifiables>
                          </postCondition>
                          <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                          </preCondition>
                        </secondStatement>
                        <intermediateCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = TRUE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                          <modifiables>tmp</modifiables>
                        </intermediateCondition>
                      </refinement>
                      <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
                      <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                    </commands>
                    <commands name="statement" id="a6647361-b72e-4c15-9548-60b2cf24daff">
                      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SkipStatement" name=";" id="2effb3dc-cc99-471d-a4aa-886c85e494ca">
                        <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
                        <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = FALSE)"/>
                      </refinement>
                      <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
                      <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = FALSE)"/>
                    </commands>
                  </refinement>
                  <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
                  <preCondition name="(((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)) &amp; (MetaVariables.FV_CONS = FALSE)"/>
                </commands>
              </refinement>
              <postCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
              <preCondition name="((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
            </firstStatement>
            <secondStatement name="statement2" id="526a8a3c-7f08-4da9-8bcc-f95d03600aa7">
              <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:MethodStatement" name="this.sort();" id="f5456385-a036-498b-9a19-7a404d57dcd2">
                <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
                <preCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
              </refinement>
              <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
              <preCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
            </secondStatement>
            <intermediateCondition name="(((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = newTop))&amp;(\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k])))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
          </refinement>
          <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
          <preCondition name="((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = TRUE)"/>
        </commands>
        <commands name="statement" id="206ff449-88ea-4b70-aa6e-cf81ec678584">
          <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SelectionStatement" id="9f1aae52-4899-4353-9326-0b112e4ce784">
            <guards name="MetaVariables.FV_CONS = TRUE"/>
            <guards name="MetaVariables.FV_CONS = FALSE"/>
            <commands name="statement" id="9ad9b2ff-1966-4050-b87a-b4e683857b3f">
              <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SelectionStatement" id="1b54e1c0-d5cd-4f23-a6b8-aa9b8c47a07f">
                <guards name="MetaVariables.FV_BASE = TRUE"/>
                <guards name="MetaVariables.FV_BASE = FALSE"/>
                <commands name="statement" id="1d900bc1-758c-4fb0-92cf-a2cbffba45be">
                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="800a4989-0a42-4f54-8681-594ef5a9c8ab">
                    <firstStatement name="statement1" id="25a77a63-5918-4a15-8bb8-f8143c06fa40">
                      <refinement name="tmp = new int[this.data.length+1];" id="7bb1478e-c7bd-4afc-9063-c9e432d16a05">
                        <postCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                          <modifiables>tmp</modifiables>
                        </postCondition>
                        <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                      </refinement>
                      <postCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                        <modifiables>tmp</modifiables>
                      </postCondition>
                      <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                    </firstStatement>
                    <secondStatement name="statement2" id="e353c578-cde3-4d03-86ed-628ecacf01b8">
                      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="bde71a0a-c140-4683-9bf6-1ed48fffd88d">
                        <firstStatement name="statement1" id="90b18612-02e7-496a-bf5d-806e095160eb">
                          <refinement name="tmp[tmp.length-1] = newTop;" id="622966a1-712d-422d-8392-15014061a8ae">
                            <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>tmp</modifiables>
                              <modifiables>tmp[tmp.length-1]</modifiables>
                            </postCondition>
                            <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>tmp</modifiables>
                            </preCondition>
                          </refinement>
                          <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                            <modifiables>tmp[tmp.length-1]</modifiables>
                          </postCondition>
                          <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                          </preCondition>
                        </firstStatement>
                        <secondStatement name="statement2" id="db0fadc3-4abe-496d-91e7-90dd933b3c61">
                          <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="00248888-f1e1-454e-a247-5394434afe2d">
                            <firstStatement name="statement1" id="872e6175-bea1-4a67-8719-135ab270030a">
                              <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="95be5dea-43dd-4238-bd99-587d352db3b0">
                                <firstStatement name="statement1" id="f1538ea5-e63c-4d01-8899-5d8131757999">
                                  <refinement name="i = 0;" id="bb49ac55-7269-47fc-9551-610be97fc5df">
                                    <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </postCondition>
                                    <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </preCondition>
                                  </refinement>
                                  <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </postCondition>
                                  <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </preCondition>
                                </firstStatement>
                                <secondStatement name="statement2" id="e7e6d5d5-8c91-459f-a39c-92e4623cae23">
                                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SmallRepetitionStatement" name="repetitionStatement" id="09eb56d6-4933-418f-9505-ed9c6538ba28">
                                    <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[i]</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </postCondition>
                                    <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </preCondition>
                                    <loopStatement name="loop" id="7cd5f1e5-f0ff-4afa-9a95-403e2559f582">
                                      <refinement name="tmp[i] = this.data[i];&#xD;&#xA;i++;" id="fcbbb67b-9ad6-40ac-b6be-c05057463f92">
                                        <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[i]</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </postCondition>
                                        <preCondition name="((tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)) &amp; (i &lt; this.data.length)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </preCondition>
                                      </refinement>
                                      <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[i]</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </postCondition>
                                      <preCondition name="((tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)) &amp; (i &lt; this.data.length)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </preCondition>
                                    </loopStatement>
                                    <variant name="this.data.length - i"/>
                                    <invariant name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)"/>
                                    <guard name="i &lt; this.data.length"/>
                                  </refinement>
                                  <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[i]</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </postCondition>
                                  <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </preCondition>
                                </secondStatement>
                                <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>i</modifiables>
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </intermediateCondition>
                              </refinement>
                              <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>i</modifiables>
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[i]</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </postCondition>
                              <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </preCondition>
                            </firstStatement>
                            <secondStatement name="statement2" id="e0bdc1e5-78ce-499a-aac5-497b0f1e5e66">
                              <refinement name="this.data = tmp;" id="af0b2170-a33f-4900-bfd3-72b626cf1d0e">
                                <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
                                  <modifiables>data[*]</modifiables>
                                  <modifiables>i</modifiables>
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[i]</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </postCondition>
                                <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>i</modifiables>
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[i]</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </preCondition>
                              </refinement>
                              <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
                                <modifiables>data[*]</modifiables>
                                <modifiables>i</modifiables>
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[i]</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </postCondition>
                              <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>i</modifiables>
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[i]</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </preCondition>
                            </secondStatement>
                            <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>i</modifiables>
                              <modifiables>tmp</modifiables>
                              <modifiables>tmp[i]</modifiables>
                              <modifiables>tmp[tmp.length-1]</modifiables>
                            </intermediateCondition>
                          </refinement>
                          <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
                            <modifiables>data[*]</modifiables>
                            <modifiables>i</modifiables>
                            <modifiables>tmp</modifiables>
                            <modifiables>tmp[i]</modifiables>
                            <modifiables>tmp[tmp.length-1]</modifiables>
                          </postCondition>
                          <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                            <modifiables>tmp[tmp.length-1]</modifiables>
                          </preCondition>
                        </secondStatement>
                        <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                          <modifiables>tmp</modifiables>
                          <modifiables>tmp[tmp.length-1]</modifiables>
                        </intermediateCondition>
                      </refinement>
                      <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
                        <modifiables>data[*]</modifiables>
                        <modifiables>i</modifiables>
                        <modifiables>tmp</modifiables>
                        <modifiables>tmp[i]</modifiables>
                        <modifiables>tmp[tmp.length-1]</modifiables>
                      </postCondition>
                      <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                        <modifiables>tmp</modifiables>
                      </preCondition>
                    </secondStatement>
                    <intermediateCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = TRUE &amp; MetaVariables.FV_BASE = TRUE)">
                      <modifiables>tmp</modifiables>
                    </intermediateCondition>
                  </refinement>
                  <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
                  <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                </commands>
                <commands name="statement" id="5590b839-6858-43b4-b241-7867e92cbca5">
                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SkipStatement" name=";" id="d18ed3d4-8a2b-4fc6-8f99-a90245fad555">
                    <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
                    <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = FALSE)"/>
                  </refinement>
                  <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
                  <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = TRUE)) &amp; (MetaVariables.FV_BASE = FALSE)"/>
                </commands>
              </refinement>
              <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
              <preCondition name="(((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = TRUE)"/>
            </commands>
            <commands name="statement" id="9b3340a6-1491-4668-848d-83c181e35879">
              <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SelectionStatement" id="30347b0e-d721-445f-9e6a-b28fa270ac42">
                <guards name="MetaVariables.FV_BASE = TRUE"/>
                <guards name="MetaVariables.FV_BASE = FALSE"/>
                <commands name="statement" id="ce736285-fb4e-443c-8106-5ae7ac206da4">
                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="8f5cac20-4928-476a-8ac2-5b4fb6e4f0bb">
                    <firstStatement name="statement1" id="e67d6634-a9eb-4b3b-9cbc-749cda8d7a99">
                      <refinement name="tmp = new int[this.data.length+1];" id="cb83bfe1-5bd4-42c1-a988-45d908838060">
                        <postCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                          <modifiables>tmp</modifiables>
                        </postCondition>
                        <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                      </refinement>
                      <postCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                        <modifiables>tmp</modifiables>
                      </postCondition>
                      <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                    </firstStatement>
                    <secondStatement name="statement2" id="595c731b-1886-4ff6-81fb-f259c148b374">
                      <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="9fad01b8-329a-4cab-9017-bf410550c93c">
                        <firstStatement name="statement1" id="5ba859f8-915a-44eb-844f-0106cac7e32c">
                          <refinement name="tmp[tmp.length-1] = newTop;" id="6792c38f-13ca-4fad-98d7-4474d84bafcc">
                            <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>tmp</modifiables>
                              <modifiables>tmp[tmp.length-1]</modifiables>
                            </postCondition>
                            <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>tmp</modifiables>
                            </preCondition>
                          </refinement>
                          <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                            <modifiables>tmp[tmp.length-1]</modifiables>
                          </postCondition>
                          <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                          </preCondition>
                        </firstStatement>
                        <secondStatement name="statement2" id="f877d440-7cff-436d-a7b3-72b133a07889">
                          <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="2bd647fa-f8d4-461e-b199-43a4eb680040">
                            <firstStatement name="statement1" id="ec300f91-8dcd-4c6d-b8e4-dde57d9e2d3e">
                              <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:CompositionStatement" name="compositionStatement" id="dacba8f1-fd99-4387-81dc-f15ecc0aa933">
                                <firstStatement name="statement1" id="ff1d97f0-70c4-4a94-b399-b394ec20f5f8">
                                  <refinement name="i = 0;" id="ba4d569b-f18e-4eef-bceb-80db135f772a">
                                    <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </postCondition>
                                    <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </preCondition>
                                  </refinement>
                                  <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </postCondition>
                                  <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </preCondition>
                                </firstStatement>
                                <secondStatement name="statement2" id="490e3378-4cd3-4bc3-9bfb-b9cd3782840c">
                                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SmallRepetitionStatement" name="repetitionStatement" id="ece9e6ed-532f-4006-ad81-12378b45bf86">
                                    <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[i]</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </postCondition>
                                    <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                      <modifiables>i</modifiables>
                                      <modifiables>tmp</modifiables>
                                      <modifiables>tmp[tmp.length-1]</modifiables>
                                    </preCondition>
                                    <loopStatement name="loop" id="2464f356-7328-4c06-b887-5dc61e6a84db">
                                      <refinement name="tmp[i] = this.data[i];&#xD;&#xA;i++;" id="7265eb91-4f01-45ad-b63f-c2dc92661cd8">
                                        <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[i]</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </postCondition>
                                        <preCondition name="((tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)) &amp; (i &lt; this.data.length)">
                                          <modifiables>i</modifiables>
                                          <modifiables>tmp</modifiables>
                                          <modifiables>tmp[tmp.length-1]</modifiables>
                                        </preCondition>
                                      </refinement>
                                      <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[i]</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </postCondition>
                                      <preCondition name="((tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)) &amp; (i &lt; this.data.length)">
                                        <modifiables>i</modifiables>
                                        <modifiables>tmp</modifiables>
                                        <modifiables>tmp[tmp.length-1]</modifiables>
                                      </preCondition>
                                    </loopStatement>
                                    <variant name="this.data.length - i"/>
                                    <invariant name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)"/>
                                    <guard name="i &lt; this.data.length"/>
                                  </refinement>
                                  <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[i]</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </postCondition>
                                  <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                    <modifiables>i</modifiables>
                                    <modifiables>tmp</modifiables>
                                    <modifiables>tmp[tmp.length-1]</modifiables>
                                  </preCondition>
                                </secondStatement>
                                <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int j; (0 &lt;= j &amp; j &lt; i -> this.data[j] = tmp[j])) &amp; i = 0) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>i</modifiables>
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </intermediateCondition>
                              </refinement>
                              <postCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>i</modifiables>
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[i]</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </postCondition>
                              <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </preCondition>
                            </firstStatement>
                            <secondStatement name="statement2" id="43cc2c9d-ae2b-40f1-b2b4-d3d885ca8eb7">
                              <refinement name="this.data = tmp;" id="ac8062d6-13a7-47e0-aaa4-7d4ea3de3805">
                                <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
                                  <modifiables>data[*]</modifiables>
                                  <modifiables>i</modifiables>
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[i]</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </postCondition>
                                <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                  <modifiables>i</modifiables>
                                  <modifiables>tmp</modifiables>
                                  <modifiables>tmp[i]</modifiables>
                                  <modifiables>tmp[tmp.length-1]</modifiables>
                                </preCondition>
                              </refinement>
                              <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
                                <modifiables>data[*]</modifiables>
                                <modifiables>i</modifiables>
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[i]</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </postCondition>
                              <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                                <modifiables>i</modifiables>
                                <modifiables>tmp</modifiables>
                                <modifiables>tmp[i]</modifiables>
                                <modifiables>tmp[tmp.length-1]</modifiables>
                              </preCondition>
                            </secondStatement>
                            <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop&#xD;&#xA;&amp; (\forall int i; (0 &lt;= i &amp; i &lt; this.data.length -> this.data[i] = tmp[i]))) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                              <modifiables>i</modifiables>
                              <modifiables>tmp</modifiables>
                              <modifiables>tmp[i]</modifiables>
                              <modifiables>tmp[tmp.length-1]</modifiables>
                            </intermediateCondition>
                          </refinement>
                          <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
                            <modifiables>data[*]</modifiables>
                            <modifiables>i</modifiables>
                            <modifiables>tmp</modifiables>
                            <modifiables>tmp[i]</modifiables>
                            <modifiables>tmp[tmp.length-1]</modifiables>
                          </postCondition>
                          <preCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                            <modifiables>tmp</modifiables>
                            <modifiables>tmp[tmp.length-1]</modifiables>
                          </preCondition>
                        </secondStatement>
                        <intermediateCondition name="(tmp.length = this.data.length + 1&#xD;&#xA;&amp; tmp[tmp.length-1] = newTop) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                          <modifiables>tmp</modifiables>
                          <modifiables>tmp[tmp.length-1]</modifiables>
                        </intermediateCondition>
                      </refinement>
                      <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
                        <modifiables>data[*]</modifiables>
                        <modifiables>i</modifiables>
                        <modifiables>tmp</modifiables>
                        <modifiables>tmp[i]</modifiables>
                        <modifiables>tmp[tmp.length-1]</modifiables>
                      </postCondition>
                      <preCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                        <modifiables>tmp</modifiables>
                      </preCondition>
                    </secondStatement>
                    <intermediateCondition name="(tmp.length = this.data.length + 1) &amp; (MetaVariables.FV_SORTED = FALSE &amp; MetaVariables.FV_CONS = FALSE &amp; MetaVariables.FV_BASE = TRUE)">
                      <modifiables>tmp</modifiables>
                    </intermediateCondition>
                  </refinement>
                  <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
                  <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = TRUE)"/>
                </commands>
                <commands name="statement" id="73307e2b-0903-4fa7-bc41-c3ed9eedeb7c">
                  <refinement xsi:type="de.tu-bs.cs.isf.cbc.cbcmodel:SkipStatement" name=";" id="260f550a-60cc-424a-9bc1-e89ac8a6a58c">
                    <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
                    <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = FALSE)"/>
                  </refinement>
                  <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
                  <preCondition name="((((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = FALSE)) &amp; (MetaVariables.FV_BASE = FALSE)"/>
                </commands>
              </refinement>
              <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
              <preCondition name="(((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)) &amp; (MetaVariables.FV_CONS = FALSE)"/>
            </commands>
          </refinement>
          <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))"/>
          <preCondition name="((MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))) &amp; (MetaVariables.FV_SORTED = FALSE)"/>
        </commands>
      </refinement>
      <postCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length -> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length &amp; this.data[z] = \old(this.data)[k]))))&#xD;&#xA;&amp; ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] >= this.data[k+1]))) | (\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> (this.data[k] &lt;= this.data[k+1])))))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop)) &amp; &#xD;&#xA;this.data[this.data.length - 1] = newTop)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> ((\exists int z;(0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = newTop))&#xD;&#xA;&amp; (\forall int k; (0 &lt;= k &amp; k &lt; \old(this.data).length&#xD;&#xA;-> (\exists int z; (0 &lt;= z &amp; z &lt; this.data.length&#xD;&#xA;&amp; this.data[z] = \old(this.data)[k])))) &amp; this.data[this.data.length - 1] = newTop))))))">
        <modifiables>data[*]</modifiables>
        <modifiables>i</modifiables>
        <modifiables>tmp</modifiables>
        <modifiables>tmp[i]</modifiables>
        <modifiables>tmp[tmp.length-1]</modifiables>
      </postCondition>
      <preCondition name="(MetaVariables.FV_SORTED = TRUE -> ((\forall int k; (0 &lt;= k &#xD;&#xA;&amp; k &lt; this.data.length-1 &#xD;&#xA;-> this.data[k] >= this.data[k+1])))) &amp; (MetaVariables.FV_SORTED = FALSE -> ((MetaVariables.FV_CONS = TRUE -> (true)) &amp; (MetaVariables.FV_CONS = FALSE  -> ((MetaVariables.FV_BASE = TRUE -> (true))))))"/>
    </statement>
  </de.tu-bs.cs.isf.cbc.cbcmodel:CbCFormula>
  <de.tu-bs.cs.isf.cbc.cbcmodel:GlobalConditions>
    <conditions name="this.data != null"/>
    <conditions name="this.data.length >= 0"/>
    <conditions name="i >= 0"/>
    <conditions name="\old(this.data) = this.data"/>
    <conditions name="tmp != null"/>
    <conditions name="\old(this.data) != null"/>
    <conditions name="\old(this.data).length >= 0"/>
    <conditions name="(MetaVariables.FV_INTEGERLIST = TRUE) &amp; (MetaVariables.FV_INTEGERLIST = TRUE | MetaVariables.FV_BASE = FALSE) &amp; (MetaVariables.FV_INTEGERLIST = TRUE | MetaVariables.FV_CONS = FALSE) &amp; (MetaVariables.FV_INTEGERLIST = TRUE | MetaVariables.FV_SORTED = FALSE) &amp; (MetaVariables.FV_BASE = TRUE | MetaVariables.FV_INTEGERLIST = FALSE) &amp; (MetaVariables.FV_SORTED = TRUE | MetaVariables.FV_INCREASING = FALSE) &amp; (MetaVariables.FV_SORTED = TRUE | MetaVariables.FV_DECREASING = FALSE) &amp; (MetaVariables.FV_INCREASING = TRUE | MetaVariables.FV_DECREASING = TRUE | MetaVariables.FV_SORTED = FALSE) &amp; (MetaVariables.FV_INCREASING = FALSE | MetaVariables.FV_DECREASING = FALSE)"/>
  </de.tu-bs.cs.isf.cbc.cbcmodel:GlobalConditions>
  <de.tu-bs.cs.isf.cbc.cbcmodel:JavaVariables>
    <variables name="int i"/>
    <variables name="int[] tmp"/>
    <variables name="int newTop" kind="PARAM"/>
    <fields href="file:/C:/Important/Work/Master/CorC/IntegerList/meta_product_gen/IntList/IntList.cbcclass#//@fields.0"/>
  </de.tu-bs.cs.isf.cbc.cbcmodel:JavaVariables>
</xmi:XMI>
