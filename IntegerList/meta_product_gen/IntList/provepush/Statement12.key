\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Feb 29 14:05:23 CET 2024
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Important/Work/Master/CorC/IntegerList/meta_product_gen";
\include "helper.key";
\programVariables {
int i;
int[] tmp;
int newTop;
int i_old;
int newTop_old;
int[] data1_oldVal;
IntList self;
Heap heapAtPre;
}\problem {
     (     boolean::select(heap,
                           null,
                           MetaVariables::$FV_SORTED)
         = TRUE
      -> \forall int k;
           (     leq(Z(0(#)), k)
               & lt(k,
                    sub(length(int[]::select(heap,
                                             self,
                                             IntList::$data)),
                        Z(1(#))))
            -> geq(int::select(heap,
                               int[]::select(heap,
                                             self,
                                             IntList::$data),
                               arr(k)),
                   int::select(heap,
                               int[]::select(heap,
                                             self,
                                             IntList::$data),
                               arr(add(k, Z(1(#))))))))
   & (     boolean::select(heap,
                           null,
                           MetaVariables::$FV_SORTED)
         = FALSE
      ->   (     boolean::select(heap,
                                 null,
                                 MetaVariables::$FV_CONS)
               = TRUE
            -> true)
         & (     boolean::select(heap,
                                 null,
                                 MetaVariables::$FV_CONS)
               = FALSE
            ->   boolean::select(heap,
                                 null,
                                 MetaVariables::$FV_BASE)
               = TRUE
            -> true))
   &   boolean::select(heap,
                       null,
                       MetaVariables::$FV_SORTED)
     = FALSE
   &   boolean::select(heap,
                       null,
                       MetaVariables::$FV_CONS)
     = TRUE
   &   boolean::select(heap,
                       null,
                       MetaVariables::$FV_BASE)
     = TRUE
   & !int[]::select(heap, self, IntList::$data) = null
   & geq(length(int[]::select(heap,
                              self,
                              IntList::$data)),
         Z(0(#)))
   & geq(i, Z(0(#)))
   &   data1_oldVal
     = int[]::select(heap, self, IntList::$data)
   & !tmp = null
   & !data1_oldVal = null
   & geq(length(data1_oldVal), Z(0(#)))
   &   boolean::select(heap,
                       null,
                       MetaVariables::$FV_INTEGERLIST)
     = TRUE
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INTEGERLIST)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_BASE)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INTEGERLIST)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_CONS)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INTEGERLIST)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_SORTED)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_BASE)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_INTEGERLIST)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_SORTED)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_INCREASING)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_SORTED)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_DECREASING)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INCREASING)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_DECREASING)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_SORTED)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INCREASING)
        = FALSE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_DECREASING)
        = FALSE)
   &   boolean::select(heap,
                       tmp,
                       java.lang.Object::<created>)
     = TRUE
   &   boolean::select(heap,
                       tmp,
                       java.lang.Object::<created>)
     = TRUE
   &   int[]::exactInstance(int[]::select(heap,
                                          self,
                                          IntList::$data))
     = TRUE
   &   boolean::select(heap,
                       int[]::select(heap,
                                     self,
                                     IntList::$data),
                       java.lang.Object::<created>)
     = TRUE
   & !int[]::select(heap, self, IntList::$data) = null
   &   int[]::exactInstance(int[]::select(heap,
                                          self,
                                          IntList::$data))
     = TRUE
   &   boolean::select(heap,
                       int[]::select(heap,
                                     self,
                                     IntList::$data),
                       java.lang.Object::<created>)
     = TRUE
   & !int[]::select(heap, self, IntList::$data) = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & IntList::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap || i_old:=i || newTop_old:=newTop}
     \<{
         tmp=new int[self.data.length+1];
       }\> (    length(tmp)
              = add(length(int[]::select(heap,
                                         self,
                                         IntList::$data)),
                    Z(1(#)))
            & (    boolean::select(heap,
                                   null,
                                   MetaVariables::$FV_SORTED)
                 = FALSE
               &   boolean::select(heap,
                                   null,
                                   MetaVariables::$FV_CONS)
                 = TRUE
               &   boolean::select(heap,
                                   null,
                                   MetaVariables::$FV_BASE)
                 = TRUE)
            & i = i_old
            & newTop = newTop_old)

}

\proof {
(keyLog "0" (keyUser "Work" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "727")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "29") (term "1,0,0,1"))
(rule "eqSymm" (formula "29") (term "1,0,1"))
(rule "eqSymm" (formula "6"))
(rule "replace_known_left" (formula "10") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "2")))
(rule "true_left" (formula "10"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
(builtin "One Step Simplification" (formula "1"))
(rule "true_left" (formula "1"))
(rule "replace_known_right" (formula "11") (term "0") (ifseqformula "22"))
(builtin "One Step Simplification" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "replace_known_right" (formula "9") (term "0,1") (ifseqformula "22"))
(builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
(rule "true_left" (formula "9"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "21"))
(builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "replace_known_left" (formula "9") (term "0") (ifseqformula "2"))
(builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
(rule "true_left" (formula "9"))
(rule "replace_known_left" (formula "8") (term "0,1") (ifseqformula "2"))
(builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
(rule "true_left" (formula "8"))
(rule "replace_known_right" (formula "8") (term "0,1") (ifseqformula "19"))
(builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
(rule "true_left" (formula "8"))
(rule "replace_known_right" (formula "8") (term "0,1") (ifseqformula "16"))
(builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "17")))
(rule "true_left" (formula "8"))
(rule "polySimp_homoEq" (formula "22") (term "0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,1"))
(rule "applyEq" (formula "10") (term "1,0") (ifseqformula "5"))
(rule "applyEq" (formula "20") (term "0") (ifseqformula "5"))
(rule "applyEq" (formula "9") (term "0,0") (ifseqformula "5"))
(rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
(rule "polySimp_sepPosMonomial" (formula "20") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1"))
(rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,1"))
(rule "arrayCreation" (formula "20") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "dim0"))
(rule "compound_addition_1" (formula "20") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "x"))
(rule "eval_order_array_access6" (formula "20") (term "1") (inst "#v0=x_arr_1"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_1"))
(rule "assignment_read_attribute" (formula "20"))
(branch "Normal Execution (self != null)"
   (builtin "One Step Simplification" (formula "20"))
   (rule "assignment_read_length" (formula "20"))
   (branch "Normal Execution (x_arr_1 != null)"
      (builtin "One Step Simplification" (formula "20"))
      (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "4"))
      (rule "assignmentAdditionInt" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
      (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_1"))
      (rule "less_than_comparison_simple" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,1,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,1,0"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,1,0") (ifseqformula "5"))
      (rule "qeq_literals" (formula "20") (term "0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "arrayLengthNotNegative" (formula "5") (term "0"))
      (rule "arrayLengthIsAnInt" (formula "5") (term "0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "ifSplit" (formula "20"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "13"))
         (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "5"))
         (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "20") (term "1") (inst "#v0=x_arr_1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_2"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "length_1"))
         (rule "assignment" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "newObject"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "20") (term "1") (inst "#v0=x_arr_3"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_3"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "length_2"))
         (rule "assignment" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "allocateInstanceWithLength" (formula "20"))
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "blockEmpty" (formula "24") (term "1"))
         (rule "assignment" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
         (rule "leq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCall" (formula "24"))
         (branch "Normal Execution (newObject != null )"
            (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "assignment_write_attribute_this" (formula "24"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "methodCallWithinClass" (formula "24") (term "1"))
            (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "arrayInitialisation" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0"))
            (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0"))
            (rule "applyEq" (formula "24") (term "1,2,1,0,1,0") (ifseqformula "1"))
            (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,1,0"))
            (rule "add_literals" (formula "24") (term "0,2,1,0,1,0"))
            (rule "add_zero_left" (formula "24") (term "2,1,0,1,0"))
            (rule "methodCallEmpty" (formula "24") (term "1"))
            (rule "blockEmpty" (formula "24") (term "1"))
            (rule "assignment_write_attribute_this" (formula "24"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "methodCallReturnIgnoreResult" (formula "24") (term "1"))
            (rule "blockEmpty" (formula "24") (term "1"))
            (rule "methodCallReturn" (formula "24") (term "1"))
            (rule "assignment" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "methodCallEmpty" (formula "24") (term "1"))
            (rule "blockEmpty" (formula "24") (term "1"))
            (rule "assignment" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "blockEmpty" (formula "24") (term "1"))
            (rule "assignment" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "emptyModality" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,1"))
            (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
            (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
            (rule "add_literals" (formula "24") (term "0,1,0"))
            (rule "add_zero_left" (formula "24") (term "1,0"))
            (rule "pullOutSelect" (formula "24") (term "0,1,1") (inst "selectSK=MetaVariables_FV_BASE_0"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "applyEqReverse" (formula "25") (term "0,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "24") (term "1,1") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=IntList_data_0"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "25") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "24") (term "0"))
            (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=MetaVariables_FV_SORTED_0"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=MetaVariables_FV_CONS_0"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "25"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=MetaVariables_FV_CONS_1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "19")))
            (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "1"))
            (rule "close" (formula "17") (ifseqformula "4"))
         )
         (branch "Null Reference (newObject = null)"
            (builtin "One Step Simplification" (formula "25"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (x_arr_1 = null)"
      (rule "false_right" (formula "21"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
      (rule "close" (formula "19") (ifseqformula "1"))
   )
)
(branch "Null Reference (self = null)"
   (builtin "One Step Simplification" (formula "21"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
   (rule "closeFalse" (formula "1"))
)
)

}
