\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Feb 29 14:05:16 CET 2024
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Important/Work/Master/CorC/IntegerList/meta_product_gen";
\include "helper.key";
\programVariables {
int i;
int[] tmp;
int newTop;
int[] data1_oldVal;
IntList self;
Heap heapAtPre;
}\problem {
     (     boolean::select(heap,
                           null,
                           MetaVariables::$FV_SORTED)
         = TRUE
      -> \forall int k;
           (     leq(Z(0(#)), k)
               & lt(k,
                    sub(length(int[]::select(heap,
                                             self,
                                             IntList::$data)),
                        Z(1(#))))
            -> geq(int::select(heap,
                               int[]::select(heap,
                                             self,
                                             IntList::$data),
                               arr(k)),
                   int::select(heap,
                               int[]::select(heap,
                                             self,
                                             IntList::$data),
                               arr(add(k, Z(1(#))))))))
   & (     boolean::select(heap,
                           null,
                           MetaVariables::$FV_SORTED)
         = FALSE
      ->   (     boolean::select(heap,
                                 null,
                                 MetaVariables::$FV_CONS)
               = TRUE
            -> true)
         & (     boolean::select(heap,
                                 null,
                                 MetaVariables::$FV_CONS)
               = FALSE
            ->   boolean::select(heap,
                                 null,
                                 MetaVariables::$FV_BASE)
               = TRUE
            -> true))
   &   boolean::select(heap,
                       null,
                       MetaVariables::$FV_SORTED)
     = TRUE
   &   boolean::select(heap,
                       null,
                       MetaVariables::$FV_CONS)
     = FALSE
   & !int[]::select(heap, self, IntList::$data) = null
   & geq(length(int[]::select(heap,
                              self,
                              IntList::$data)),
         Z(0(#)))
   & geq(i, Z(0(#)))
   &   data1_oldVal
     = int[]::select(heap, self, IntList::$data)
   & !tmp = null
   & !data1_oldVal = null
   & geq(length(data1_oldVal), Z(0(#)))
   &   boolean::select(heap,
                       null,
                       MetaVariables::$FV_INTEGERLIST)
     = TRUE
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INTEGERLIST)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_BASE)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INTEGERLIST)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_CONS)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INTEGERLIST)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_SORTED)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_BASE)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_INTEGERLIST)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_SORTED)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_INCREASING)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_SORTED)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_DECREASING)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INCREASING)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_DECREASING)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_SORTED)
        = FALSE)
   & (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_INCREASING)
        = FALSE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_DECREASING)
        = FALSE)
   &   boolean::select(heap,
                       tmp,
                       java.lang.Object::<created>)
     = TRUE
   &   int[]::exactInstance(int[]::select(heap,
                                          self,
                                          IntList::$data))
     = TRUE
   &   boolean::select(heap,
                       int[]::select(heap,
                                     self,
                                     IntList::$data),
                       java.lang.Object::<created>)
     = TRUE
   & !int[]::select(heap, self, IntList::$data) = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & IntList::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap}
     (    boolean::select(heap,
                          null,
                          MetaVariables::$FV_BASE)
        = TRUE
      |   boolean::select(heap,
                          null,
                          MetaVariables::$FV_BASE)
        = FALSE)

}

\proof {
(keyLog "0" (keyUser "Work" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "43")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "closeTrue" (formula "1"))
)

}
