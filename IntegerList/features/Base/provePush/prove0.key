\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Apr 16 16:02:50 CEST 2020
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "C:/bachelor/redmine/Fallbeispiele/IntegerList";\include "helper.key";\programVariables {int[] data; int[] old_data; int[] tmp; int i; int newTop;  Heap heapAtPre;}\problem {
     true
   & !data = null
   & geq(length(data), Z(0(#)))
   & geq(i, Z(0(#)))
   & old_data = data
   & !tmp = null
   &   boolean::select(heap,
                       data,
                       java.lang.Object::<created>)
     = TRUE
   &   boolean::select(heap,
                       old_data,
                       java.lang.Object::<created>)
     = TRUE
   &   boolean::select(heap,
                       tmp,
                       java.lang.Object::<created>)
     = TRUE
   & wellFormed(heap)
-> {heapAtPre:=heap}
     \<{
         tmp=new int[data.length+1];
       }\> length(tmp) = add(length(data), Z(1(#)))

}

\proof {
(keyLog "0" (keyUser "mko" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "388")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "polySimp_addComm0" (formula "10") (term "1,0"))
(rule "applyEq" (formula "5") (term "1,0") (ifseqformula "3"))
(rule "arrayCreation" (formula "9") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "9") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "9"))
(rule "variableDeclaration" (formula "9") (newnames "dim0"))
(rule "compound_addition_1" (formula "9") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "9"))
(rule "variableDeclaration" (formula "9") (newnames "x"))
(rule "assignment_read_length" (formula "9"))
(branch "Normal Execution (data != null)"
   (rule "assignmentAdditionInt" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaAddInt" (formula "9") (term "0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,0"))
   (rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
   (rule "less_than_comparison_simple" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,1,0"))
   (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,1,0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "ifSplit" (formula "9"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=x_arr_1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr_1"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=x_arr_2"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr_2"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "allocateInstanceWithLength" (formula "9"))
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "2"))
      (rule "notLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
      (rule "leq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCall" (formula "13"))
      (branch "Normal Execution (newObject != null )"
         (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "assignment_write_attribute_this" (formula "13"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallWithinClass" (formula "13") (term "1"))
         (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "arrayInitialisation" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "polySimp_elimSub" (formula "13") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "13") (term "1,2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "13") (term "2,1,0,1,0"))
         (rule "applyEq" (formula "13") (term "1,2,1,0,1,0") (ifseqformula "1"))
         (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,2,1,0,1,0"))
         (rule "add_zero_left" (formula "13") (term "2,1,0,1,0"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "assignment_write_attribute_this" (formula "13"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallReturnIgnoreResult" (formula "13") (term "1"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "methodCallReturn" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "emptyModality" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "13"))
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (data = null)"
   (rule "close" (formula "8") (ifseqformula "1"))
)
)

}
