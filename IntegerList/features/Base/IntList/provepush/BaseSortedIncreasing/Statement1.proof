\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:off",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:showSatisfiability",
        "moreSeqRules" : "moreSeqRules:off",
        "optimisedSelectRules" : "optimisedSelectRules:on",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:ban",
        "sequences" : "sequences:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 2147483647,
        "Timeout" : -1,
        "options" : { 
            "ABSTRACT_PROOF_FIRST_ORDER_GOALS_FORBIDDEN" : "true",
            "ABSTRACT_PROOF_FORBIDDEN_RULES" : "",
            "ABSTRACT_PROOF_FORBIDDEN_RULE_SETS" : "",
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_EXPAND",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_RESTRICTED",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_NONCLOSE",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "C:/Users/Markus/Documents/Studium/6Semester/BA/workspaceFork/IntegerList";
\include "helper.key";
\programVariables {
int i;
int[] tmp;
int newTop;
int i_old;
int newTop_old;
int[] data1_oldVal;
IntList self;
Heap heapAtPre;
}
\problem {
     true
   & !int[]::select(heap, self, IntList::$data) = null
   & geq(length(int[]::select(heap,
                              self,
                              IntList::$data)),
         Z(0(#)))
   & geq(i, Z(0(#)))
   &   data1_oldVal
     = int[]::select(heap, self, IntList::$data)
   & !tmp = null
   &   boolean::select(heap,
                       tmp,
                       java.lang.Object::<created>)
     = TRUE
   &   boolean::select(heap,
                       tmp,
                       java.lang.Object::<created>)
     = TRUE
   &   int[]::exactInstance(int[]::select(heap,
                                          self,
                                          IntList::$data))
     = TRUE
   &   boolean::select(heap,
                       int[]::select(heap,
                                     self,
                                     IntList::$data),
                       java.lang.Object::<created>)
     = TRUE
   & !int[]::select(heap, self, IntList::$data) = null
   &   int[]::exactInstance(int[]::select(heap,
                                          self,
                                          IntList::$data))
     = TRUE
   &   boolean::select(heap,
                       int[]::select(heap,
                                     self,
                                     IntList::$data),
                       java.lang.Object::<created>)
     = TRUE
   & !int[]::select(heap, self, IntList::$data) = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & IntList::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap || i_old:=i || newTop_old:=newTop}
     \<{
       tmp = new int[self.data.length + 1];
     }\> (    length(tmp)
            = add(length(int[]::select(heap,
                                       self,
                                       IntList::$data)),
                  Z(1(#)))
          & i = i_old
          & newTop = newTop_old)
}

\proof {
(keyLog "0" (keyUser "Markus" ) (keyVersion "1fb0c10630b493ce138850ae0f9803d3f2fffc51"))

(autoModeTime "176")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "eqSymm" (formula "14") (term "1,0,0,1"))
(rule "eqSymm" (formula "14") (term "1,0,1"))
(rule "eqSymm" (formula "3"))
(rule "polySimp_homoEq" (formula "14") (term "0,0,0,1"))
(rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1"))
(rule "applyEq" (formula "6") (term "1,0") (ifseqformula "3"))
(rule "applyEq" (formula "5") (term "0,0") (ifseqformula "3"))
(rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
(rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
(rule "polySimp_sepPosMonomial" (formula "14") (term "0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1"))
(rule "arrayCreation" (formula "14") (term "1") (inst "#v0=i_arr"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "i_arr"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "dim0"))
(rule "compound_addition_1" (formula "14") (term "1") (inst "#v=i_1"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "i_1"))
(rule "eval_order_access2" (formula "14") (term "1") (inst "#v0=i_arr_1"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "i_arr_1"))
(rule "assignment_read_attribute" (formula "14"))
(branch "Normal Execution (self != null)"
    (builtin "One Step Simplification" (formula "14"))
   (rule "assignment_read_length" (formula "14"))
   (branch "Normal Execution (i_arr_1 != null)"
       (builtin "One Step Simplification" (formula "14"))
      (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "3"))
      (rule "assignmentAdditionInt" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "14") (term "0,1,0"))
      (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=b"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "b"))
      (rule "less_than_comparison_simple" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,1,0"))
      (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,1,0") (ifseqformula "1"))
      (rule "qeq_literals" (formula "14") (term "0,0,0,1,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "ifSplit" (formula "14"))
      (branch "if b true"
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if b false"
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "10"))
         (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "4"))
         (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "14") (term "1") (inst "#v0=i_arr_2"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "i_arr_2"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "length_1"))
         (rule "assignment" (formula "14") (term "1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "newObject"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "14") (term "1") (inst "#v0=i_arr_3"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "i_arr_3"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "length_2"))
         (rule "assignment" (formula "14") (term "1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "allocateInstanceWithLength" (formula "14"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
          (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "blockEmpty" (formula "18") (term "1"))
         (rule "assignment" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
         (rule "leq_literals" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCall" (formula "18"))
         (branch "Normal Execution (newObject != null )"
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "assignment_write_attribute_this" (formula "18"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallWithinClass" (formula "18") (term "1"))
            (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "arrayInitialisation" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_elimSub" (formula "18") (term "2,1,0,1,0"))
            (rule "mul_literals" (formula "18") (term "1,2,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "18") (term "2,1,0,1,0"))
            (rule "applyEq" (formula "18") (term "1,2,1,0,1,0") (ifseqformula "1"))
            (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,2,1,0,1,0"))
            (rule "add_zero_left" (formula "18") (term "2,1,0,1,0"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "assignment_write_attribute_this" (formula "18"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallReturnIgnoreResult" (formula "18") (term "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "methodCallReturn" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "blockEmpty" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "emptyModality" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0"))
            (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "1"))
            (rule "polySimp_addAssoc" (formula "18") (term "1"))
            (rule "add_literals" (formula "18") (term "0,1"))
            (rule "add_zero_left" (formula "18") (term "1"))
            (rule "pullOutSelect" (formula "18") (term "0,0") (inst "selectSK=IntList_data_0"))
            (rule "simplifySelectOfMemset" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "19"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "18"))
            (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "closeTrue" (formula "18"))
         )
         (branch "Null Reference (newObject = null)"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (i_arr_1 = null)"
       (builtin "One Step Simplification" (formula "15"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "false_right" (formula "15"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
      (rule "close" (formula "13") (ifseqformula "1"))
   )
)
(branch "Null Reference (self = null)"
    (builtin "One Step Simplification" (formula "15"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
   (rule "closeFalse" (formula "1"))
)
)
}
