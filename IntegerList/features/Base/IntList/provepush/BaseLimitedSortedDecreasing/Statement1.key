\javaSource "C:/Users/Markus/Documents/Studium/6Semester/BA/workspaceFork/IntegerList";
\include "helper.key";
\programVariables {
int i;
int[] tmp;
int newTop;
int i_old;
int newTop_old;
int[] data2_oldVal;
int LIMIT1_oldVal;
IntList self;
Heap heapAtPre;
}\problem {((true) & self.data != null & length(self.data) >= 0 & i >= 0 & data2_oldVal = self.data & tmp != null & tmp.<created> = TRUE & tmp.<created> = TRUE & int[]::exactInstance(self.data) = TRUE & self.data.<created> = TRUE & self.data!= null & int[]::exactInstance(self.data) = TRUE & self.data.<created> = TRUE & self.data!= null & self.<created>=TRUE & IntList::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || i_old := i || newTop_old := newTop || LIMIT1_oldVal := self.LIMIT} \<{tmp = new int[self.data.length+1];}\> (((length(tmp) = length(self.data) + 1)) & i = i_old & newTop = newTop_old)}