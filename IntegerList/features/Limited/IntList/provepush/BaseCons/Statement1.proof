\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:off",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:showSatisfiability",
        "moreSeqRules" : "moreSeqRules:off",
        "optimisedSelectRules" : "optimisedSelectRules:on",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:ban",
        "sequences" : "sequences:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 2147483647,
        "Timeout" : -1,
        "options" : { 
            "ABSTRACT_PROOF_FIRST_ORDER_GOALS_FORBIDDEN" : "true",
            "ABSTRACT_PROOF_FORBIDDEN_RULES" : "",
            "ABSTRACT_PROOF_FORBIDDEN_RULE_SETS" : "",
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_EXPAND",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_RESTRICTED",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_NONCLOSE",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "C:/Important/Work/CorC/IntegerList";
\include "helper.key";
\programVariables {
int newTop;
int newTop_old;
int[] data1_oldVal;
IntList self;
Heap heapAtPre;
}
\problem {
     true
   & !int[]::select(heap, self, IntList::$data) = null
   & geq(length(int[]::select(heap,
                              self,
                              IntList::$data)),
         Z(0(#)))
   &   data1_oldVal
     = int[]::select(heap, self, IntList::$data)
   &   int[]::exactInstance(int[]::select(heap,
                                          self,
                                          IntList::$data))
     = TRUE
   &   boolean::select(heap,
                       int[]::select(heap,
                                     self,
                                     IntList::$data),
                       java.lang.Object::<created>)
     = TRUE
   & !int[]::select(heap, self, IntList::$data) = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & IntList::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap || newTop_old:=newTop}
     \<{
       self.original_push(newTop);
     }\> (  \exists int z;
              (  leq(Z(0(#)), z)
               & lt(z,
                    length(int[]::select(heap,
                                         self,
                                         IntList::$data)))
               &   int::select(heap,
                               int[]::select(heap,
                                             self,
                                             IntList::$data),
                               arr(z))
                 = newTop)
          & \forall int k;
              (     leq(Z(0(#)), k)
                  & lt(k, length(data1_oldVal))
               -> \exists int z;
                    (  leq(Z(0(#)), z)
                     & lt(z,
                          length(int[]::select(heap,
                                               self,
                                               IntList::$data)))
                     &   int::select(heap,
                                     int[]::select(heap,
                                                   self,
                                                   IntList::$data),
                                     arr(z))
                       = int::select(heap,
                                     data1_oldVal,
                                     arr(k))))
          &   int::select(heap,
                          int[]::select(heap,
                                        self,
                                        IntList::$data),
                          arr(sub(length(int[]::select(heap,
                                                       self,
                                                       IntList::$data)),
                                  Z(1(#)))))
            = newTop
          &   int::select(heap,
                          int[]::select(heap,
                                        self,
                                        IntList::$data),
                          arr(sub(length(int[]::select(heap,
                                                       self,
                                                       IntList::$data)),
                                  Z(1(#)))))
            = newTop
          & newTop = newTop_old)
}

\proof {
(keyLog "0" (keyUser "Fynn" ) (keyVersion "1fb0c10630b493ce138850ae0f9803d3f2fffc51"))

(autoModeTime "51319")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "eqSymm" (formula "11") (term "1,0,1"))
(rule "eqSymm" (formula "2"))
(rule "polySimp_elimSub" (formula "11") (term "0,2,0,1,0,0,1"))
(rule "mul_literals" (formula "11") (term "1,0,2,0,1,0,0,1"))
(rule "polySimp_addComm0" (formula "11") (term "0,2,0,1,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,0,0,0,1"))
(rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
(rule "applyEq" (formula "4") (term "1,0") (ifseqformula "2"))
(rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
(rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "11") (term "0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "11") (term "0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0,0,1"))
 (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_original_push,exc,heapAfter_original_push,anon_heap_original_push") (contract "IntList[IntList::original_push(int)].JML normal_behavior operation contract.0") (modality "diamond"))
(branch "Post (original_push)"
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")))
    (builtin "One Step Simplification" (formula "13"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "13"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "exLeft" (formula "12") (inst "sk=z_0"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "polySimp_elimSub" (formula "16") (term "0,2,0"))
   (rule "mul_literals" (formula "16") (term "1,0,2,0"))
   (rule "polySimp_addComm0" (formula "16") (term "0,2,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "12"))
   (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "15") (term "2,0,1,0,0,1,0,0") (ifseqformula "2"))
   (rule "applyEq" (formula "15") (term "1,1,1,0,1,0") (ifseqformula "2"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "13"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
   (rule "polySimp_elimOne" (formula "13") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
   (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=IntList_data_0"))
   (rule "applyEq" (formula "16") (term "2,1,1,1,0,0,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "1"))
   (rule "applyEq" (formula "16") (term "1,0,1,0,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "17") (term "2,1,0,2,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "6")))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "20"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
   (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "17") (term "2,1,0,2,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "16") (term "2,1,1,1,0,0,1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "16") (term "1,0,1,0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "applyEq" (formula "15") (term "1,0,1,0,1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "13") (term "2,0") (ifseqformula "2"))
   (rule "applyEq" (formula "16") (term "2,1,0,2,0") (ifseqformula "2"))
   (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
   (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "15") (term "2,1,1,1,0,0,1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "2"))
   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_0"))
   (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
   (rule "hideAuxiliaryEq" (formula "14"))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_1"))
   (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "nnf_imp2or" (formula "15") (term "0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0"))
   (rule "emptyModality" (formula "20") (term "1"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "1,0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "1,0,1"))
   (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "1,0,1,0,0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "0,1,0,2,0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "1,0,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "0,1,0,2,0,1"))
   (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "1,0,1,0,1,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "0,1,1,1,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "1,0,1,0,1,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "0,1,1,1,0,0,0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "0,1,1,1,0,0,1,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "0,1,1,1,0,0,1,0,1,0"))
   (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "2"))
   (rule "applyEq" (formula "20") (term "1,0,1,0,0,0") (ifseqformula "2"))
   (rule "applyEq" (formula "20") (term "0,1,0,2,0,1") (ifseqformula "2"))
   (rule "applyEq" (formula "20") (term "1,0,1,0,1,0,1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,0,0") (ifseqformula "2"))
   (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,1,0,1,0") (ifseqformula "2"))
   (rule "pullOutSelect" (formula "20") (term "0,1") (inst "selectSK=arr_2"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "21") (term "0,1") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "ex_pull_out3" (formula "15") (term "0"))
   (rule "cnf_rightDist" (formula "15") (term "0,0"))
   (rule "commute_or" (formula "15") (term "1,0,0"))
   (rule "cnf_rightDist" (formula "15") (term "0,0,0"))
   (rule "commute_or" (formula "15") (term "1,0,0,0"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "ex_pull_out3" (formula "20") (term "0,1,0"))
   (rule "commute_and_2" (formula "15") (term "0,0"))
   (rule "commute_and" (formula "15") (term "0,0,0"))
   (rule "allLeft" (formula "15") (inst "t=z_0"))
   (rule "replaceKnownSelect_taclet0_2" (formula "15") (term "1,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "15") (term "1,1,0,0,0"))
   (rule "exLeft" (formula "15") (inst "sk=z_1"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
   (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1"))
   (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "14"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
   (rule "mul_literals" (formula "17") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
   (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "12"))
   (rule "qeq_literals" (formula "16") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "12"))
   (rule "qeq_literals" (formula "17") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "12"))
   (rule "qeq_literals" (formula "15") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "13"))
   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
   (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,0"))
   (rule "leq_literals" (formula "17") (term "0,0"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "13"))
   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
   (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0"))
   (rule "leq_literals" (formula "16") (term "0,0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "13"))
   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0"))
   (rule "leq_literals" (formula "15") (term "0,0"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_3"))
   (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
   (rule "hideAuxiliaryEq" (formula "15"))
   (rule "allLeft" (formula "18") (inst "t=z_1"))
   (rule "replaceKnownSelect_taclet0_8" (formula "18") (term "1,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_9" (formula "18") (term "1,1,0,0,0"))
   (rule "exLeft" (formula "18") (inst "sk=z_2"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
   (rule "inEqSimp_homoInEq0" (formula "20") (term "1"))
   (rule "polySimp_addComm1" (formula "20") (term "0,1"))
   (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "15"))
   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
   (rule "polySimp_rightDist" (formula "20") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
   (rule "mul_literals" (formula "20") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
   (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "16"))
   (rule "qeq_literals" (formula "19") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "16"))
   (rule "qeq_literals" (formula "20") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "16"))
   (rule "qeq_literals" (formula "18") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "17"))
   (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
   (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "19") (term "0,0,0"))
   (rule "leq_literals" (formula "19") (term "0,0"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "17"))
   (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
   (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "20") (term "0,0,0"))
   (rule "leq_literals" (formula "20") (term "0,0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "17"))
   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
   (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0"))
   (rule "leq_literals" (formula "18") (term "0,0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_4"))
   (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
   (rule "hideAuxiliaryEq" (formula "18"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "8"))
   (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "3"))
   (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "5"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "allLeft" (formula "21") (inst "t=z_2"))
   (rule "replaceKnownSelect_taclet0_10" (formula "21") (term "1,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_11" (formula "21") (term "1,1,0,0,0"))
   (rule "exLeft" (formula "21") (inst "sk=z_3"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
   (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
   (rule "polySimp_addComm1" (formula "23") (term "0,1"))
   (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "18"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
   (rule "mul_literals" (formula "23") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
   (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "19"))
   (rule "qeq_literals" (formula "22") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "20"))
   (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
   (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
   (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
   (rule "leq_literals" (formula "21") (term "0,1,0"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "20"))
   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
   (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
   (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
   (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
   (rule "leq_literals" (formula "23") (term "0,1,0"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "19"))
   (rule "qeq_literals" (formula "21") (term "0,0"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "20"))
   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
   (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "22") (term "0,0,0"))
   (rule "leq_literals" (formula "22") (term "0,0"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "19"))
   (rule "qeq_literals" (formula "23") (term "0,0"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_5"))
   (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
   (rule "hideAuxiliaryEq" (formula "21"))
   (rule "allLeft" (formula "24") (inst "t=z_3"))
   (rule "replaceKnownSelect_taclet0_12" (formula "24") (term "1,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_13" (formula "24") (term "1,1,0,0,0"))
   (rule "exLeft" (formula "24") (inst "sk=z_4"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "24"))
   (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
   (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
   (rule "polySimp_addComm1" (formula "26") (term "0,1"))
   (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "21"))
   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
   (rule "polySimp_rightDist" (formula "26") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
   (rule "mul_literals" (formula "26") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
   (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "22"))
   (rule "qeq_literals" (formula "24") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "22"))
   (rule "qeq_literals" (formula "26") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "22"))
   (rule "qeq_literals" (formula "25") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "23"))
   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
   (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
   (rule "add_literals" (formula "26") (term "0,0,0"))
   (rule "leq_literals" (formula "26") (term "0,0"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "23"))
   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
   (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
   (rule "add_literals" (formula "24") (term "0,0,0"))
   (rule "leq_literals" (formula "24") (term "0,0"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "23"))
   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
   (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
   (rule "add_literals" (formula "25") (term "0,0,0"))
   (rule "leq_literals" (formula "25") (term "0,0"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_6"))
   (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
   (rule "hideAuxiliaryEq" (formula "24"))
   (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    IntList::length(heapAfter_original_push,
                    self,
                    data1_oldVal))"))
   (rule "replaceKnownSelect_taclet0_4" (formula "27") (term "1,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_5" (formula "27") (term "1,1,0,0,0"))
   (rule "exLeft" (formula "27") (inst "sk=z_5"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "eqSymm" (formula "27") (term "1"))
   (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
   (rule "polySimp_addComm1" (formula "29") (term "0,1"))
   (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
   (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "29") (term "0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,1,0"))
   (rule "add_literals" (formula "29") (term "1,1,0,1,0"))
   (rule "times_zero_1" (formula "29") (term "1,0,1,0"))
   (rule "add_literals" (formula "29") (term "0,1,0"))
   (rule "leq_literals" (formula "29") (term "1,0"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
   (rule "add_literals" (formula "27") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "27") (term "0,0,0"))
   (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
   (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "28") (term "0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0"))
   (rule "add_literals" (formula "28") (term "1,1,0,1,0"))
   (rule "times_zero_1" (formula "28") (term "1,0,1,0"))
   (rule "add_literals" (formula "28") (term "0,1,0"))
   (rule "leq_literals" (formula "28") (term "1,0"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
   (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "27") (term "0,0,1,0"))
   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
   (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
   (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
   (rule "add_literals" (formula "27") (term "0,1,0"))
   (rule "leq_literals" (formula "27") (term "1,0"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
   (rule "mul_literals" (formula "29") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
   (rule "add_literals" (formula "29") (term "0,0,0"))
   (rule "add_zero_left" (formula "29") (term "0,0"))
   (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
   (rule "mul_literals" (formula "28") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
   (rule "add_literals" (formula "28") (term "0,0,0"))
   (rule "add_zero_left" (formula "28") (term "0,0"))
   (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "31"))
   (rule "eqSymm" (formula "27") (term "1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
   (rule "polySimp_rightDist" (formula "29") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
   (rule "mul_literals" (formula "29") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
   (rule "inEqSimp_invertInEq1" (formula "27") (term "0"))
   (rule "mul_literals" (formula "27") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "0,0"))
   (rule "inEqSimp_invertInEq1" (formula "29") (term "0"))
   (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
   (rule "mul_literals" (formula "29") (term "1,0"))
   (rule "polySimp_elimOne" (formula "29") (term "0,0"))
   (rule "inEqSimp_invertInEq1" (formula "28") (term "0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
   (rule "mul_literals" (formula "28") (term "1,0"))
   (rule "polySimp_elimOne" (formula "28") (term "0,0"))
   (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=arr_7"))
   (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "27"))
   (rule "hideAuxiliaryEq" (formula "27"))
   (rule "commute_or" (formula "28"))
   (rule "commute_or" (formula "27"))
   (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))), length(data1_oldVal))"))
   (rule "replaceKnownSelect_taclet0_6" (formula "30") (term "1,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_7" (formula "30") (term "1,1,0,0,0"))
   (rule "exLeft" (formula "30") (inst "sk=z_6"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
   (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
   (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
   (rule "add_literals" (formula "32") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "32") (term "0,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
   (rule "polySimp_addComm1" (formula "32") (term "0,1"))
   (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "30") (term "0,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
   (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
   (rule "add_literals" (formula "31") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "31") (term "0,0,0"))
   (rule "inEqSimp_invertInEq1" (formula "32") (term "0,0"))
   (rule "mul_literals" (formula "32") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1"))
   (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
   (rule "polySimp_rightDist" (formula "32") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
   (rule "mul_literals" (formula "32") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
   (rule "inEqSimp_invertInEq1" (formula "30") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
   (rule "inEqSimp_invertInEq1" (formula "31") (term "0,0"))
   (rule "mul_literals" (formula "31") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
   (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
   (rule "pullOutSelect" (formula "30") (term "0,1") (inst "selectSK=arr_8"))
   (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "30"))
   (rule "applyEqReverse" (formula "31") (term "0,1") (ifseqformula "30"))
   (rule "hideAuxiliaryEq" (formula "30"))
   (rule "eqSymm" (formula "30") (term "1"))
   (rule "commute_or_2" (formula "32"))
   (rule "commute_or_2" (formula "31"))
   (rule "commute_or_2" (formula "30"))
   (rule "commute_or" (formula "31") (term "0"))
   (rule "allLeft" (formula "33") (inst "t=z_4"))
   (rule "replaceKnownSelect_taclet0_14" (formula "33") (term "1,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_15" (formula "33") (term "1,1,0,0,0"))
   (rule "exLeft" (formula "33") (inst "sk=z_7"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "33"))
   (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
   (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
   (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
   (rule "polySimp_addComm1" (formula "35") (term "0,1"))
   (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "24"))
   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
   (rule "mul_literals" (formula "35") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
   (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "25"))
   (rule "qeq_literals" (formula "34") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "25"))
   (rule "qeq_literals" (formula "35") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "35"))
   (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "25"))
   (rule "qeq_literals" (formula "33") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "33"))
   (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "26"))
   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
   (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
   (rule "add_literals" (formula "35") (term "0,0,0"))
   (rule "leq_literals" (formula "35") (term "0,0"))
    (builtin "One Step Simplification" (formula "35"))
   (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "26"))
   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
   (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
   (rule "add_literals" (formula "34") (term "0,0,0"))
   (rule "leq_literals" (formula "34") (term "0,0"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "26"))
   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
   (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
   (rule "add_literals" (formula "33") (term "0,0,0"))
   (rule "leq_literals" (formula "33") (term "0,0"))
    (builtin "One Step Simplification" (formula "33"))
   (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_9"))
   (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "33"))
   (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
   (rule "hideAuxiliaryEq" (formula "33"))
   (rule "cut_direct" (formula "29") (term "0"))
   (branch "CUT: self.length(data1_oldVal)@heapAfter_original_push <= 0 TRUE"
       (opengoal " geq(length(data1_oldVal), Z(0(#))),    int[]::select(heap, self, IntList::$data)  = data1_oldVal,  int[]::exactInstance(data1_oldVal) = TRUE,    boolean::select(heap,                    data1_oldVal,                    java.lang.Object::<created>)  = TRUE,    boolean::select(heap,                    self,                    java.lang.Object::<created>)  = TRUE,  IntList::exactInstance(self) = TRUE,  java.lang.Object::<inv>(heap, self),  wellFormed(heap),  wellFormed(anon_heap_original_push<<anonHeapFunction>>),  (  anon(heap,          allFields(data1_oldVal),          anon_heap_original_push<<anonHeapFunction>>)   = heapAfter_original_push)<<origin(\"assignable @ file IntList.java @ line 13\",\"[]\")>>,  (exc = null)<<origin(\"<none> (implicit)\",\"[ensures @ file IntList.java @ line 12, ensures (implicit)]\")>>,  geq(z_0, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_0))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_0))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_1))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_1, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_1))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_2))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_2, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_2))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_3))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_3, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_3))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_4))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_4, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_4))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                    data1_oldVal,                    arr(z_5))      = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | leq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  geq(z_5, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | leq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      Z(0(#))),  (  true   | geq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(1(#)), z_5)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  (leq(length(data1_oldVal), Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | (  int::select(anon_heap_original_push<<anonHeapFunction>>,                    data1_oldVal,                    arr(add(Z(neglit(1(#))),                            length(data1_oldVal))))      = int::select(anon_heap_original_push<<anonHeapFunction>>,                    data1_oldVal,                    arr(z_6)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[ensures @ file IntList.java @ line 12]\")>>   | leq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(neglit(1(#))), length(data1_oldVal)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  (geq(z_6, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | leq(length(data1_oldVal), Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[ensures @ file IntList.java @ line 12]\")>>   | leq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(neglit(1(#))), length(data1_oldVal)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  (leq(length(data1_oldVal), Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | geq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(1(#)), z_6))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[ensures @ file IntList.java @ line 12]\")>>   | leq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(neglit(1(#))), length(data1_oldVal)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_7))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_7, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_7))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (\\forall int k;     \\exists int z;       (  (  leq(k, Z(neglit(1(#))))           | geq(k,                 IntList::length(heapAfter_original_push,                                 self,                                 data1_oldVal))           |   int::select(heapAfter_original_push,                           data1_oldVal,                           arr(z))             = int::select(heapAfter_original_push,                           data1_oldVal,                           arr(k)))        & (  leq(k, Z(neglit(1(#))))           | geq(k,                 IntList::length(heapAfter_original_push,                                 self,                                 data1_oldVal))           | geq(z, Z(0(#))))        & (  leq(k, Z(neglit(1(#))))           | geq(k,                 IntList::length(heapAfter_original_push,                                 self,                                 data1_oldVal))           | leq(z,                 add(Z(neglit(1(#))),                     IntList::length(heapAfter_original_push,                                     self,                                     data1_oldVal))))))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(add(Z(neglit(1(#))),                         IntList::length(heapAfter_original_push,                                         self,                                         data1_oldVal))))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  java.lang.Object::<inv>(heapAfter_original_push, self) ==>  data1_oldVal = null,  self = null,    \\exists int z;      (  geq(z, Z(0(#)))       & leq(z,             add(Z(neglit(1(#))), length(data1_oldVal)))       &   int::select(heapAfter_original_push,                       data1_oldVal,                       arr(z))         = newTop)  & \\forall int k;      \\exists int z;        (  leq(k, Z(neglit(1(#))))         | geq(k, length(data1_oldVal))         | geq(z, Z(0(#)))         & leq(z,               add(Z(neglit(1(#))),                   length(data1_oldVal)))         &   int::select(heapAfter_original_push,                         data1_oldVal,                         arr(z))           = int::select(heapAfter_original_push,                         data1_oldVal,                         arr(k)))  &   int::select(anon_heap_original_push<<anonHeapFunction>>,                  data1_oldVal,                  arr(add(Z(neglit(1(#))),                          length(data1_oldVal))))    = newTop")
   )
   (branch "CUT: self.length(data1_oldVal)@heapAfter_original_push <= 0 FALSE"
       (builtin "One Step Simplification" (formula "29"))
      (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "inEqSimp_leqRight" (formula "39"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "allLeft" (formula "37") (inst "t=z_7"))
      (rule "replaceKnownSelect_taclet0_20" (formula "37") (term "1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_21" (formula "37") (term "1,1,0,0,0"))
      (rule "exLeft" (formula "37") (inst "sk=z_8"))
      (rule "andLeft" (formula "37"))
      (rule "andLeft" (formula "37"))
      (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
      (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
      (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
      (rule "inEqSimp_homoInEq0" (formula "39") (term "1"))
      (rule "polySimp_addComm1" (formula "39") (term "0,1"))
      (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "34"))
      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1"))
      (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
      (rule "polySimp_rightDist" (formula "39") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
      (rule "mul_literals" (formula "39") (term "0,1,1"))
      (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
      (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "35"))
      (rule "qeq_literals" (formula "38") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "36"))
      (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
      (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "39") (term "0,0,1,0"))
      (rule "leq_literals" (formula "39") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "35"))
      (rule "qeq_literals" (formula "37") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "36"))
      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
      (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
      (rule "add_literals" (formula "38") (term "0,0,0"))
      (rule "leq_literals" (formula "38") (term "0,0"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "35"))
      (rule "qeq_literals" (formula "39") (term "0,0"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "36"))
      (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
      (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
      (rule "add_literals" (formula "37") (term "0,0,0"))
      (rule "leq_literals" (formula "37") (term "0,0"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_10"))
      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
      (rule "hideAuxiliaryEq" (formula "37"))
      (rule "allLeft" (formula "40") (inst "t=z_5"))
      (rule "replaceKnownSelect_taclet0_16" (formula "40") (term "1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_17" (formula "40") (term "1,1,0,0,0"))
      (rule "exLeft" (formula "40") (inst "sk=z_9"))
      (rule "andLeft" (formula "40"))
      (rule "andLeft" (formula "40"))
      (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
      (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
      (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
      (rule "inEqSimp_homoInEq0" (formula "42") (term "1"))
      (rule "polySimp_addComm1" (formula "42") (term "0,1"))
      (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "28"))
      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1"))
      (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
      (rule "polySimp_rightDist" (formula "42") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1"))
      (rule "mul_literals" (formula "42") (term "0,1,1"))
      (rule "polySimp_elimOne" (formula "42") (term "1,1,1"))
      (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "29"))
      (rule "qeq_literals" (formula "41") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "29"))
      (rule "qeq_literals" (formula "42") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "29"))
      (rule "qeq_literals" (formula "40") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "30"))
      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
      (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
      (rule "add_literals" (formula "41") (term "0,0,0"))
      (rule "leq_literals" (formula "41") (term "0,0"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "30"))
      (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
      (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
      (rule "add_literals" (formula "42") (term "0,0,0"))
      (rule "leq_literals" (formula "42") (term "0,0"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "30"))
      (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
      (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
      (rule "add_literals" (formula "40") (term "0,0,0"))
      (rule "leq_literals" (formula "40") (term "0,0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_11"))
      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
      (rule "hideAuxiliaryEq" (formula "40"))
      (rule "cut_direct" (formula "33") (term "0,0"))
      (branch "CUT: data1_oldVal.length <= 0 TRUE"
          (opengoal " geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      Z(1(#))),  geq(length(data1_oldVal), Z(0(#))),    int[]::select(heap, self, IntList::$data)  = data1_oldVal,  int[]::exactInstance(data1_oldVal) = TRUE,    boolean::select(heap,                    data1_oldVal,                    java.lang.Object::<created>)  = TRUE,    boolean::select(heap,                    self,                    java.lang.Object::<created>)  = TRUE,  IntList::exactInstance(self) = TRUE,  java.lang.Object::<inv>(heap, self),  wellFormed(heap),  wellFormed(anon_heap_original_push<<anonHeapFunction>>),  (  anon(heap,          allFields(data1_oldVal),          anon_heap_original_push<<anonHeapFunction>>)   = heapAfter_original_push)<<origin(\"assignable @ file IntList.java @ line 13\",\"[]\")>>,  (exc = null)<<origin(\"<none> (implicit)\",\"[ensures @ file IntList.java @ line 12, ensures (implicit)]\")>>,  geq(z_0, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_0))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_0))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_1))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_1, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_1))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_2))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_2, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_2))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_3))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_3, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_3))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_4))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_4, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_4))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_5))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_5, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_5))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  (leq(length(data1_oldVal), Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | (  int::select(anon_heap_original_push<<anonHeapFunction>>,                    data1_oldVal,                    arr(add(Z(neglit(1(#))),                            length(data1_oldVal))))      = int::select(anon_heap_original_push<<anonHeapFunction>>,                    data1_oldVal,                    arr(z_6)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[ensures @ file IntList.java @ line 12]\")>>   | leq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(neglit(1(#))), length(data1_oldVal)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  (geq(z_6, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | leq(length(data1_oldVal), Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[ensures @ file IntList.java @ line 12]\")>>   | leq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(neglit(1(#))), length(data1_oldVal)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(length(data1_oldVal), Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  (true<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | geq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(1(#)), z_6))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[ensures @ file IntList.java @ line 12]\")>>   | leq(IntList::length(heapAfter_original_push,                         self,                         data1_oldVal),         add(Z(neglit(1(#))), length(data1_oldVal)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_7))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_7, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_7))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_8))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_8, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_8))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_9))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_9, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(IntList::length(heapAfter_original_push,                      self,                      data1_oldVal),      add(Z(1(#)), z_9))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (\\forall int k;     \\exists int z;       (  (  leq(k, Z(neglit(1(#))))           | geq(k,                 IntList::length(heapAfter_original_push,                                 self,                                 data1_oldVal))           |   int::select(heapAfter_original_push,                           data1_oldVal,                           arr(z))             = int::select(heapAfter_original_push,                           data1_oldVal,                           arr(k)))        & (  leq(k, Z(neglit(1(#))))           | geq(k,                 IntList::length(heapAfter_original_push,                                 self,                                 data1_oldVal))           | geq(z, Z(0(#))))        & (  leq(k, Z(neglit(1(#))))           | geq(k,                 IntList::length(heapAfter_original_push,                                 self,                                 data1_oldVal))           | leq(z,                 add(Z(neglit(1(#))),                     IntList::length(heapAfter_original_push,                                     self,                                     data1_oldVal))))))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(add(Z(neglit(1(#))),                         IntList::length(heapAfter_original_push,                                         self,                                         data1_oldVal))))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  java.lang.Object::<inv>(heapAfter_original_push, self) ==>  data1_oldVal = null,  self = null,    \\exists int z;      (  geq(z, Z(0(#)))       & leq(z,             add(Z(neglit(1(#))), length(data1_oldVal)))       &   int::select(heapAfter_original_push,                       data1_oldVal,                       arr(z))         = newTop)  & \\forall int k;      \\exists int z;        (  leq(k, Z(neglit(1(#))))         | geq(k, length(data1_oldVal))         | geq(z, Z(0(#)))         & leq(z,               add(Z(neglit(1(#))),                   length(data1_oldVal)))         &   int::select(heapAfter_original_push,                         data1_oldVal,                         arr(z))           = int::select(heapAfter_original_push,                         data1_oldVal,                         arr(k)))  &   int::select(anon_heap_original_push<<anonHeapFunction>>,                  data1_oldVal,                  arr(add(Z(neglit(1(#))),                          length(data1_oldVal))))    = newTop")
      )
      (branch "CUT: data1_oldVal.length <= 0 FALSE"
          (builtin "One Step Simplification" (formula "33"))
         (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "46"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "replace_known_right" (formula "32") (term "1,0") (ifseqformula "46"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "inEqSimp_leqRight" (formula "46"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
         (rule "leq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "allLeft" (formula "43") (inst "t=z_8"))
         (rule "replaceKnownSelect_taclet10_22" (formula "43") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet10_23" (formula "43") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "43") (inst "sk=z_10"))
         (rule "andLeft" (formula "43"))
         (rule "andLeft" (formula "43"))
         (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
         (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
         (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
         (rule "inEqSimp_homoInEq0" (formula "45") (term "1"))
         (rule "polySimp_addComm1" (formula "45") (term "0,1"))
         (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "37"))
         (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1"))
         (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
         (rule "polySimp_rightDist" (formula "45") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
         (rule "mul_literals" (formula "45") (term "0,1,1"))
         (rule "polySimp_elimOne" (formula "45") (term "1,1,1"))
         (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "38"))
         (rule "qeq_literals" (formula "45") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "45"))
         (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "38"))
         (rule "qeq_literals" (formula "43") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "38"))
         (rule "qeq_literals" (formula "44") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "39"))
         (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
         (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
         (rule "add_literals" (formula "45") (term "0,0,0"))
         (rule "leq_literals" (formula "45") (term "0,0"))
          (builtin "One Step Simplification" (formula "45"))
         (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "39"))
         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
         (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
         (rule "add_literals" (formula "43") (term "0,0,0"))
         (rule "leq_literals" (formula "43") (term "0,0"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "39"))
         (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
         (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
         (rule "add_literals" (formula "44") (term "0,0,0"))
         (rule "leq_literals" (formula "44") (term "0,0"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_12"))
         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
         (rule "hideAuxiliaryEq" (formula "43"))
          (builtin "Evaluate Query" (formula "14") (term "0") (newnames "arr_13,callee,queryResult,res_length"))
         (rule "replaceKnownQuery110_28" (formula "19") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "25") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "15") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "46") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "40") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "43") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "28") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "31") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "3") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "37") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "22") (term "0"))
         (rule "replaceKnownQuery110_28" (formula "34") (term "0,1"))
         (rule "replaceKnownQuery110_28" (formula "32") (term "0,1"))
         (rule "replaceKnownQuery110_28" (formula "33") (term "0,1"))
         (rule "replaceKnownQuery110_28" (formula "34") (term "0,0"))
         (rule "replaceKnownQuery110_28" (formula "48") (term "1,0,2,0"))
         (rule "replaceKnownQuery110_28" (formula "47") (term "1,1,1,1,0,0"))
         (rule "replaceKnownQuery110_28" (formula "47") (term "1,1,0,1,0,0"))
         (rule "replaceKnownQuery110_28" (formula "47") (term "1,1,0,1,0,0,0"))
         (rule "replaceKnownQuery110_28" (formula "47") (term "1,1,0,0,0,0,0"))
         (rule "notLeft" (formula "1"))
         (rule "eqSymm" (formula "49") (term "0,0,1"))
         (rule "inEqSimp_homoInEq1" (formula "18"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "24"))
         (rule "polySimp_addComm1" (formula "24") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "14"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "45"))
         (rule "polySimp_addComm1" (formula "45") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "39"))
         (rule "polySimp_addComm1" (formula "39") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "42"))
         (rule "polySimp_addComm1" (formula "42") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "27"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "30"))
         (rule "polySimp_addComm1" (formula "30") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "36"))
         (rule "polySimp_addComm1" (formula "36") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "21"))
         (rule "polySimp_addComm1" (formula "21") (term "0"))
         (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
         (rule "polySimp_addComm1" (formula "33") (term "0,1"))
         (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
         (rule "polySimp_addComm1" (formula "31") (term "0,1"))
         (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
         (rule "polySimp_addComm1" (formula "32") (term "0,1"))
         (rule "inEqSimp_homoInEq1" (formula "33") (term "0"))
         (rule "polySimp_addComm1" (formula "33") (term "0,0"))
         (rule "variableDeclaration" (formula "49") (term "1") (newnames "queryResult"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1"))
         (rule "polySimp_rightDist" (formula "18") (term "1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
         (rule "mul_literals" (formula "18") (term "0,1"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24"))
         (rule "polySimp_mulComm0" (formula "24") (term "1"))
         (rule "polySimp_rightDist" (formula "24") (term "1"))
         (rule "mul_literals" (formula "24") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1"))
         (rule "polySimp_rightDist" (formula "14") (term "1"))
         (rule "mul_literals" (formula "14") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "45"))
         (rule "polySimp_mulComm0" (formula "45") (term "1"))
         (rule "polySimp_rightDist" (formula "45") (term "1"))
         (rule "mul_literals" (formula "45") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
         (rule "polySimp_elimOne" (formula "45") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "39"))
         (rule "polySimp_mulComm0" (formula "39") (term "1"))
         (rule "polySimp_rightDist" (formula "39") (term "1"))
         (rule "mul_literals" (formula "39") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
         (rule "polySimp_elimOne" (formula "39") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "42"))
         (rule "polySimp_mulComm0" (formula "42") (term "1"))
         (rule "polySimp_rightDist" (formula "42") (term "1"))
         (rule "mul_literals" (formula "42") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
         (rule "polySimp_elimOne" (formula "42") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27"))
         (rule "polySimp_mulComm0" (formula "27") (term "1"))
         (rule "polySimp_rightDist" (formula "27") (term "1"))
         (rule "mul_literals" (formula "27") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30"))
         (rule "polySimp_mulComm0" (formula "30") (term "1"))
         (rule "polySimp_rightDist" (formula "30") (term "1"))
         (rule "mul_literals" (formula "30") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "36"))
         (rule "polySimp_mulComm0" (formula "36") (term "1"))
         (rule "polySimp_rightDist" (formula "36") (term "1"))
         (rule "mul_literals" (formula "36") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
         (rule "polySimp_elimOne" (formula "36") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1"))
         (rule "polySimp_rightDist" (formula "21") (term "1"))
         (rule "mul_literals" (formula "21") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
         (rule "polySimp_rightDist" (formula "33") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
         (rule "mul_literals" (formula "33") (term "0,1,1"))
         (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
         (rule "polySimp_rightDist" (formula "31") (term "1,1"))
         (rule "mul_literals" (formula "31") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1"))
         (rule "mul_literals" (formula "32") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
         (rule "polySimp_rightDist" (formula "33") (term "1,0"))
         (rule "mul_literals" (formula "33") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
         (rule "polySimp_elimOne" (formula "33") (term "1,1,0"))
         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
         (rule "mul_literals" (formula "35") (term "0,0"))
         (rule "add_zero_left" (formula "35") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "35"))
         (rule "mul_literals" (formula "35") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
         (rule "mul_literals" (formula "13") (term "0,0"))
         (rule "add_zero_left" (formula "13") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
         (rule "mul_literals" (formula "13") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
         (rule "mul_literals" (formula "17") (term "0,0"))
         (rule "add_zero_left" (formula "17") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17"))
         (rule "mul_literals" (formula "17") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
         (rule "mul_literals" (formula "38") (term "0,0"))
         (rule "add_zero_left" (formula "38") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "38"))
         (rule "mul_literals" (formula "38") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
         (rule "mul_literals" (formula "26") (term "0,0"))
         (rule "add_zero_left" (formula "26") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "26"))
         (rule "mul_literals" (formula "26") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
         (rule "mul_literals" (formula "41") (term "0,0"))
         (rule "add_zero_left" (formula "41") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "41"))
         (rule "mul_literals" (formula "41") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
         (rule "mul_literals" (formula "20") (term "0,0"))
         (rule "add_zero_left" (formula "20") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
         (rule "mul_literals" (formula "20") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
         (rule "mul_literals" (formula "29") (term "0,0"))
         (rule "add_zero_left" (formula "29") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "29"))
         (rule "mul_literals" (formula "29") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
         (rule "mul_literals" (formula "44") (term "0,0"))
         (rule "add_zero_left" (formula "44") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "44"))
         (rule "mul_literals" (formula "44") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
         (rule "mul_literals" (formula "23") (term "0,0"))
         (rule "add_zero_left" (formula "23") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23"))
         (rule "mul_literals" (formula "23") (term "1"))
         (rule "commute_or" (formula "31"))
         (rule "allLeft" (formula "46") (inst "t=add(Z(neglit(1(#))), res_length)"))
         (rule "exLeft" (formula "46") (inst "sk=z_11"))
         (rule "andLeft" (formula "46"))
         (rule "andLeft" (formula "46"))
         (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
         (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "48") (term "0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,1,0"))
         (rule "add_literals" (formula "48") (term "1,1,0,1,0"))
         (rule "times_zero_1" (formula "48") (term "1,0,1,0"))
         (rule "add_literals" (formula "48") (term "0,1,0"))
         (rule "leq_literals" (formula "48") (term "1,0"))
          (builtin "One Step Simplification" (formula "48"))
         (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
         (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
         (rule "add_literals" (formula "46") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "46") (term "0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
         (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
         (rule "add_literals" (formula "47") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "47") (term "0,0,0"))
         (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
         (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "46") (term "0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,1,0"))
         (rule "add_literals" (formula "46") (term "1,1,0,1,0"))
         (rule "times_zero_1" (formula "46") (term "1,0,1,0"))
         (rule "add_literals" (formula "46") (term "0,1,0"))
         (rule "leq_literals" (formula "46") (term "1,0"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0"))
         (rule "mul_literals" (formula "47") (term "0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "47") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "47") (term "0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,1,0"))
         (rule "add_literals" (formula "47") (term "1,1,0,1,0"))
         (rule "times_zero_1" (formula "47") (term "1,0,1,0"))
         (rule "add_literals" (formula "47") (term "0,1,0"))
         (rule "leq_literals" (formula "47") (term "1,0"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
         (rule "mul_literals" (formula "48") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
         (rule "add_literals" (formula "48") (term "0,0,0"))
         (rule "add_zero_left" (formula "48") (term "0,0"))
         (rule "inEqSimp_invertInEq1" (formula "46") (term "0"))
         (rule "mul_literals" (formula "46") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "46") (term "0,0"))
         (rule "polySimp_elimOne" (formula "46") (term "0,0"))
         (rule "inEqSimp_invertInEq1" (formula "47") (term "0"))
         (rule "polySimp_mulLiterals" (formula "47") (term "0,0"))
         (rule "mul_literals" (formula "47") (term "1,0"))
         (rule "polySimp_elimOne" (formula "47") (term "0,0"))
         (rule "inEqSimp_invertInEq1" (formula "48") (term "0"))
         (rule "mul_literals" (formula "48") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
         (rule "polySimp_elimOne" (formula "48") (term "0,0"))
         (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "46") (term "0,0"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "48") (term "0,0"))
          (builtin "One Step Simplification" (formula "48"))
         (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "47") (term "0,0"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_14"))
         (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "46"))
         (rule "hideAuxiliaryEq" (formula "46"))
         (rule "eqSymm" (formula "46"))
         (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_15"))
         (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "46"))
         (rule "hideAuxiliaryEq" (formula "46"))
         (rule "eqSymm" (formula "46"))
         (rule "applyEq" (formula "46") (term "1") (ifseqformula "50"))
         (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
         (rule "mul_literals" (formula "47") (term "0,0"))
         (rule "add_zero_left" (formula "47") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "47"))
         (rule "mul_literals" (formula "47") (term "1"))
         (rule "allLeft" (formula "49") (inst "t=z_10"))
         (rule "replaceKnownSelect_taclet110_26" (formula "49") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_27" (formula "49") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "49") (inst "sk=z_12"))
         (rule "andLeft" (formula "49"))
         (rule "andLeft" (formula "49"))
         (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "43"))
         (rule "inEqSimp_contradInEq0" (formula "51") (term "1,0") (ifseqformula "45"))
         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "51") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0"))
         (rule "add_literals" (formula "51") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "51") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "51") (term "0,0,1,0"))
         (rule "leq_literals" (formula "51") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "51"))
         (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "44"))
         (rule "qeq_literals" (formula "50") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "50"))
         (rule "inEqSimp_contradInEq0" (formula "49") (term "1,0") (ifseqformula "45"))
         (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "49") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0"))
         (rule "add_literals" (formula "49") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "49") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "49") (term "0,0,1,0"))
         (rule "leq_literals" (formula "49") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "49"))
         (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "44"))
         (rule "qeq_literals" (formula "51") (term "0,0"))
          (builtin "One Step Simplification" (formula "51"))
         (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "44"))
         (rule "qeq_literals" (formula "49") (term "0,0"))
          (builtin "One Step Simplification" (formula "49"))
         (rule "inEqSimp_contradInEq0" (formula "50") (term "0") (ifseqformula "45"))
         (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
         (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "50") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
         (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
         (rule "add_literals" (formula "50") (term "0,0,0"))
         (rule "leq_literals" (formula "50") (term "0,0"))
          (builtin "One Step Simplification" (formula "50"))
         (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_16"))
         (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "49"))
         (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "49"))
         (rule "hideAuxiliaryEq" (formula "49"))
         (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "51"))
         (rule "mul_literals" (formula "50") (term "0,0"))
         (rule "add_zero_left" (formula "50") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "50"))
         (rule "mul_literals" (formula "50") (term "1"))
         (rule "allLeft" (formula "52") (inst "t=z_9"))
         (rule "replaceKnownSelect_taclet10_24" (formula "52") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet10_25" (formula "52") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "52") (inst "sk=z_13"))
         (rule "andLeft" (formula "52"))
         (rule "andLeft" (formula "52"))
         (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "40"))
         (rule "inEqSimp_contradInEq0" (formula "54") (term "1,0") (ifseqformula "42"))
         (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "54") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
         (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "54") (term "0,0,1,0"))
         (rule "leq_literals" (formula "54") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0") (ifseqformula "41"))
         (rule "qeq_literals" (formula "53") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "53"))
         (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "41"))
         (rule "qeq_literals" (formula "52") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "52"))
         (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "41"))
         (rule "qeq_literals" (formula "54") (term "0,0"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "inEqSimp_contradInEq0" (formula "52") (term "0") (ifseqformula "42"))
         (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
         (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "52") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
         (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
         (rule "add_literals" (formula "52") (term "0,0,0"))
         (rule "leq_literals" (formula "52") (term "0,0"))
          (builtin "One Step Simplification" (formula "52"))
         (rule "inEqSimp_contradInEq0" (formula "53") (term "0") (ifseqformula "42"))
         (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
         (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "53") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
         (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
         (rule "add_literals" (formula "53") (term "0,0,0"))
         (rule "leq_literals" (formula "53") (term "0,0"))
          (builtin "One Step Simplification" (formula "53"))
         (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_17"))
         (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "52"))
         (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "52"))
         (rule "hideAuxiliaryEq" (formula "52"))
         (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
         (rule "mul_literals" (formula "53") (term "0,0"))
         (rule "add_zero_left" (formula "53") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "53"))
         (rule "mul_literals" (formula "53") (term "1"))
         (rule "allLeft" (formula "55") (inst "t=z_8"))
         (rule "replaceKnownSelect_taclet10_22" (formula "55") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet10_23" (formula "55") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "55") (inst "sk=z_14"))
         (rule "andLeft" (formula "55"))
         (rule "andLeft" (formula "55"))
         (rule "applyEq" (formula "55") (term "1,1") (ifseqformula "37"))
         (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0") (ifseqformula "38"))
         (rule "qeq_literals" (formula "57") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "38"))
         (rule "qeq_literals" (formula "55") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "inEqSimp_contradInEq0" (formula "56") (term "1,0") (ifseqformula "39"))
         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "56") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0"))
         (rule "add_literals" (formula "56") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "56") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "56") (term "0,0,1,0"))
         (rule "leq_literals" (formula "56") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "inEqSimp_contradInEq0" (formula "57") (term "0") (ifseqformula "39"))
         (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
         (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "57") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
         (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
         (rule "add_literals" (formula "57") (term "0,0,0"))
         (rule "leq_literals" (formula "57") (term "0,0"))
          (builtin "One Step Simplification" (formula "57"))
         (rule "inEqSimp_contradInEq0" (formula "55") (term "0") (ifseqformula "39"))
         (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
         (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "55") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
         (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
         (rule "add_literals" (formula "55") (term "0,0,0"))
         (rule "leq_literals" (formula "55") (term "0,0"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "38"))
         (rule "qeq_literals" (formula "56") (term "0,0"))
          (builtin "One Step Simplification" (formula "56"))
         (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=arr_18"))
         (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "55"))
         (rule "hideAuxiliaryEq" (formula "55"))
         (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "57"))
         (rule "mul_literals" (formula "56") (term "0,0"))
         (rule "add_zero_left" (formula "56") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "56"))
         (rule "mul_literals" (formula "56") (term "1"))
         (rule "allLeft" (formula "58") (inst "t=z_0"))
         (rule "replaceKnownSelect_taclet0_2" (formula "58") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "58") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "58") (inst "sk=z_15"))
         (rule "andLeft" (formula "58"))
         (rule "andLeft" (formula "58"))
         (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "15"))
         (rule "inEqSimp_contradInEq0" (formula "59") (term "1,0") (ifseqformula "14"))
         (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "59") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0"))
         (rule "add_literals" (formula "59") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "59") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "59") (term "0,0,1,0"))
         (rule "leq_literals" (formula "59") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "inEqSimp_contradInEq0" (formula "60") (term "1,0") (ifseqformula "14"))
         (rule "inEqSimp_homoInEq1" (formula "60") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "60") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "60") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "60") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "60") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,1,0"))
         (rule "add_literals" (formula "60") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "60") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "60") (term "0,0,1,0"))
         (rule "leq_literals" (formula "60") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "60"))
         (rule "inEqSimp_contradInEq0" (formula "58") (term "1,0") (ifseqformula "14"))
         (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "58") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1,0"))
         (rule "add_literals" (formula "58") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "58") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "58") (term "0,0,1,0"))
         (rule "leq_literals" (formula "58") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "inEqSimp_contradInEq1" (formula "58") (term "0") (ifseqformula "13"))
         (rule "qeq_literals" (formula "58") (term "0,0"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "inEqSimp_contradInEq1" (formula "59") (term "0") (ifseqformula "13"))
         (rule "qeq_literals" (formula "59") (term "0,0"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "inEqSimp_contradInEq1" (formula "60") (term "0") (ifseqformula "13"))
         (rule "qeq_literals" (formula "60") (term "0,0"))
          (builtin "One Step Simplification" (formula "60"))
         (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=arr_19"))
         (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "58"))
         (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "58"))
         (rule "hideAuxiliaryEq" (formula "58"))
         (rule "inEqSimp_exactShadow3" (formula "59") (ifseqformula "60"))
         (rule "mul_literals" (formula "59") (term "0,0"))
         (rule "add_zero_left" (formula "59") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "59"))
         (rule "mul_literals" (formula "59") (term "1"))
         (rule "allLeft" (formula "61") (inst "t=z_7"))
         (rule "replaceKnownSelect_taclet0_20" (formula "61") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_21" (formula "61") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "61") (inst "sk=z_16"))
         (rule "andLeft" (formula "61"))
         (rule "andLeft" (formula "61"))
         (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "34"))
         (rule "inEqSimp_contradInEq1" (formula "62") (term "0,0") (ifseqformula "35"))
         (rule "qeq_literals" (formula "62") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "62"))
         (rule "inEqSimp_contradInEq1" (formula "61") (term "0,0") (ifseqformula "35"))
         (rule "qeq_literals" (formula "61") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "inEqSimp_contradInEq0" (formula "63") (term "1,0") (ifseqformula "36"))
         (rule "inEqSimp_homoInEq1" (formula "63") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "63") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1,0"))
         (rule "add_literals" (formula "63") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "63") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "63") (term "0,0,1,0"))
         (rule "leq_literals" (formula "63") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "63"))
         (rule "inEqSimp_contradInEq0" (formula "62") (term "0") (ifseqformula "36"))
         (rule "inEqSimp_homoInEq1" (formula "62") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "62") (term "1,0,0,0"))
         (rule "mul_literals" (formula "62") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "62") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "62") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,0"))
         (rule "add_literals" (formula "62") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "62") (term "1,0,0,0"))
         (rule "add_literals" (formula "62") (term "0,0,0"))
         (rule "leq_literals" (formula "62") (term "0,0"))
          (builtin "One Step Simplification" (formula "62"))
         (rule "inEqSimp_contradInEq0" (formula "61") (term "0") (ifseqformula "36"))
         (rule "inEqSimp_homoInEq1" (formula "61") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
         (rule "mul_literals" (formula "61") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "61") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,0"))
         (rule "add_literals" (formula "61") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "61") (term "1,0,0,0"))
         (rule "add_literals" (formula "61") (term "0,0,0"))
         (rule "leq_literals" (formula "61") (term "0,0"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "inEqSimp_contradInEq1" (formula "63") (term "0") (ifseqformula "35"))
         (rule "qeq_literals" (formula "63") (term "0,0"))
          (builtin "One Step Simplification" (formula "63"))
         (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=arr_20"))
         (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "61"))
         (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "61"))
         (rule "hideAuxiliaryEq" (formula "61"))
         (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "63"))
         (rule "mul_literals" (formula "62") (term "0,0"))
         (rule "add_zero_left" (formula "62") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "62"))
         (rule "mul_literals" (formula "62") (term "1"))
         (rule "allLeft" (formula "64") (inst "t=z_5"))
         (rule "replaceKnownSelect_taclet0_16" (formula "64") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_17" (formula "64") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "64") (inst "sk=z_17"))
         (rule "andLeft" (formula "64"))
         (rule "andLeft" (formula "64"))
         (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "28"))
         (rule "inEqSimp_contradInEq0" (formula "66") (term "1,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "66") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1,0"))
         (rule "add_literals" (formula "66") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "66") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "66") (term "0,0,1,0"))
         (rule "leq_literals" (formula "66") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "66"))
         (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0") (ifseqformula "29"))
         (rule "qeq_literals" (formula "65") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "inEqSimp_contradInEq0" (formula "64") (term "1,0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "64") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "64") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1,0"))
         (rule "add_literals" (formula "64") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "64") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "64") (term "0,0,1,0"))
         (rule "leq_literals" (formula "64") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "64"))
         (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "29"))
         (rule "qeq_literals" (formula "66") (term "0,0"))
          (builtin "One Step Simplification" (formula "66"))
         (rule "inEqSimp_contradInEq0" (formula "65") (term "0") (ifseqformula "30"))
         (rule "inEqSimp_homoInEq1" (formula "65") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0"))
         (rule "mul_literals" (formula "65") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "65") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,0"))
         (rule "add_literals" (formula "65") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "65") (term "1,0,0,0"))
         (rule "add_literals" (formula "65") (term "0,0,0"))
         (rule "leq_literals" (formula "65") (term "0,0"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "inEqSimp_contradInEq1" (formula "64") (term "0") (ifseqformula "29"))
         (rule "qeq_literals" (formula "64") (term "0,0"))
          (builtin "One Step Simplification" (formula "64"))
         (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_21"))
         (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "64"))
         (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "64"))
         (rule "hideAuxiliaryEq" (formula "64"))
         (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "66"))
         (rule "mul_literals" (formula "65") (term "0,0"))
         (rule "add_zero_left" (formula "65") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "65"))
         (rule "mul_literals" (formula "65") (term "1"))
         (rule "allLeft" (formula "67") (inst "t=z_4"))
         (rule "replaceKnownSelect_taclet0_14" (formula "67") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_15" (formula "67") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "67") (inst "sk=z_18"))
         (rule "andLeft" (formula "67"))
         (rule "andLeft" (formula "67"))
         (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "25"))
         (rule "inEqSimp_contradInEq0" (formula "69") (term "1,0") (ifseqformula "27"))
         (rule "inEqSimp_homoInEq1" (formula "69") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "69") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,1,0"))
         (rule "add_literals" (formula "69") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "69") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "69") (term "0,0,1,0"))
         (rule "leq_literals" (formula "69") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "69"))
         (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0") (ifseqformula "26"))
         (rule "qeq_literals" (formula "67") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "67"))
         (rule "inEqSimp_contradInEq0" (formula "68") (term "1,0") (ifseqformula "27"))
         (rule "inEqSimp_homoInEq1" (formula "68") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "68") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "68") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "68") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,1,0"))
         (rule "add_literals" (formula "68") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "68") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "68") (term "0,0,1,0"))
         (rule "leq_literals" (formula "68") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "68"))
         (rule "inEqSimp_contradInEq1" (formula "69") (term "0") (ifseqformula "26"))
         (rule "qeq_literals" (formula "69") (term "0,0"))
          (builtin "One Step Simplification" (formula "69"))
         (rule "inEqSimp_contradInEq0" (formula "67") (term "0") (ifseqformula "27"))
         (rule "inEqSimp_homoInEq1" (formula "67") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0"))
         (rule "mul_literals" (formula "67") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "67") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,0"))
         (rule "add_literals" (formula "67") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "67") (term "1,0,0,0"))
         (rule "add_literals" (formula "67") (term "0,0,0"))
         (rule "leq_literals" (formula "67") (term "0,0"))
          (builtin "One Step Simplification" (formula "67"))
         (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "26"))
         (rule "qeq_literals" (formula "68") (term "0,0"))
          (builtin "One Step Simplification" (formula "68"))
         (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_22"))
         (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "67"))
         (rule "applyEqReverse" (formula "68") (term "0") (ifseqformula "67"))
         (rule "hideAuxiliaryEq" (formula "67"))
         (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "69"))
         (rule "mul_literals" (formula "68") (term "0,0"))
         (rule "add_zero_left" (formula "68") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "68"))
         (rule "mul_literals" (formula "68") (term "1"))
         (rule "allLeft" (formula "70") (inst "t=z_3"))
         (rule "replaceKnownSelect_taclet0_12" (formula "70") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_13" (formula "70") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "70") (inst "sk=z_19"))
         (rule "andLeft" (formula "70"))
         (rule "andLeft" (formula "70"))
         (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "22"))
         (rule "inEqSimp_contradInEq1" (formula "72") (term "0,0") (ifseqformula "23"))
         (rule "qeq_literals" (formula "72") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "72"))
         (rule "inEqSimp_contradInEq1" (formula "70") (term "0,0") (ifseqformula "23"))
         (rule "qeq_literals" (formula "70") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "70"))
         (rule "inEqSimp_contradInEq0" (formula "71") (term "1,0") (ifseqformula "24"))
         (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "71") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,1,0"))
         (rule "add_literals" (formula "71") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "71") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "71") (term "0,0,1,0"))
         (rule "leq_literals" (formula "71") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "71"))
         (rule "inEqSimp_contradInEq0" (formula "72") (term "0") (ifseqformula "24"))
         (rule "inEqSimp_homoInEq1" (formula "72") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "72") (term "1,0,0,0"))
         (rule "mul_literals" (formula "72") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "72") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "72") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,0"))
         (rule "add_literals" (formula "72") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "72") (term "1,0,0,0"))
         (rule "add_literals" (formula "72") (term "0,0,0"))
         (rule "leq_literals" (formula "72") (term "0,0"))
          (builtin "One Step Simplification" (formula "72"))
         (rule "inEqSimp_contradInEq1" (formula "71") (term "0") (ifseqformula "23"))
         (rule "qeq_literals" (formula "71") (term "0,0"))
          (builtin "One Step Simplification" (formula "71"))
         (rule "inEqSimp_contradInEq0" (formula "70") (term "0") (ifseqformula "24"))
         (rule "inEqSimp_homoInEq1" (formula "70") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
         (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "70") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,0"))
         (rule "add_literals" (formula "70") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "70") (term "1,0,0,0"))
         (rule "add_literals" (formula "70") (term "0,0,0"))
         (rule "leq_literals" (formula "70") (term "0,0"))
          (builtin "One Step Simplification" (formula "70"))
         (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=arr_23"))
         (rule "simplifySelectOfAnonEQ" (formula "70") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "70"))
         (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "70"))
         (rule "hideAuxiliaryEq" (formula "70"))
         (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "72"))
         (rule "mul_literals" (formula "71") (term "0,0"))
         (rule "add_zero_left" (formula "71") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "71"))
         (rule "mul_literals" (formula "71") (term "1"))
         (rule "allLeft" (formula "73") (inst "t=z_2"))
         (rule "replaceKnownSelect_taclet0_10" (formula "73") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_11" (formula "73") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "73") (inst "sk=z_20"))
         (rule "andLeft" (formula "73"))
         (rule "andLeft" (formula "73"))
         (rule "applyEq" (formula "73") (term "1,1") (ifseqformula "19"))
         (rule "inEqSimp_contradInEq0" (formula "73") (term "1,0") (ifseqformula "21"))
         (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "73") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1,0"))
         (rule "add_literals" (formula "73") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "73") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "73") (term "0,0,1,0"))
         (rule "leq_literals" (formula "73") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "73"))
         (rule "inEqSimp_contradInEq1" (formula "74") (term "0,0") (ifseqformula "20"))
         (rule "qeq_literals" (formula "74") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "74"))
         (rule "inEqSimp_contradInEq1" (formula "75") (term "0,0") (ifseqformula "20"))
         (rule "qeq_literals" (formula "75") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "75"))
         (rule "inEqSimp_contradInEq1" (formula "73") (term "0") (ifseqformula "20"))
         (rule "qeq_literals" (formula "73") (term "0,0"))
          (builtin "One Step Simplification" (formula "73"))
         (rule "inEqSimp_contradInEq0" (formula "75") (term "0") (ifseqformula "21"))
         (rule "inEqSimp_homoInEq1" (formula "75") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "75") (term "1,0,0,0"))
         (rule "mul_literals" (formula "75") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "75") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,0"))
         (rule "add_literals" (formula "75") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "75") (term "1,0,0,0"))
         (rule "add_literals" (formula "75") (term "0,0,0"))
         (rule "leq_literals" (formula "75") (term "0,0"))
          (builtin "One Step Simplification" (formula "75"))
         (rule "inEqSimp_contradInEq0" (formula "74") (term "0") (ifseqformula "21"))
         (rule "inEqSimp_homoInEq1" (formula "74") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "74") (term "1,0,0,0"))
         (rule "mul_literals" (formula "74") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "74") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "74") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0,0"))
         (rule "add_literals" (formula "74") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "74") (term "1,0,0,0"))
         (rule "add_literals" (formula "74") (term "0,0,0"))
         (rule "leq_literals" (formula "74") (term "0,0"))
          (builtin "One Step Simplification" (formula "74"))
         (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=arr_24"))
         (rule "simplifySelectOfAnonEQ" (formula "73") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "73"))
         (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "73"))
         (rule "hideAuxiliaryEq" (formula "73"))
         (rule "inEqSimp_exactShadow3" (formula "74") (ifseqformula "75"))
         (rule "mul_literals" (formula "74") (term "0,0"))
         (rule "add_zero_left" (formula "74") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "74"))
         (rule "mul_literals" (formula "74") (term "1"))
         (rule "allLeft" (formula "76") (inst "t=z_1"))
         (rule "replaceKnownSelect_taclet0_8" (formula "76") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_9" (formula "76") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "76") (inst "sk=z_21"))
         (rule "andLeft" (formula "76"))
         (rule "andLeft" (formula "76"))
         (rule "applyEq" (formula "76") (term "1,1") (ifseqformula "16"))
         (rule "inEqSimp_contradInEq1" (formula "78") (term "0,0") (ifseqformula "17"))
         (rule "qeq_literals" (formula "78") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "78"))
         (rule "inEqSimp_contradInEq0" (formula "77") (term "1,0") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq1" (formula "77") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "77") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "77") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "77") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "77") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0,1,0"))
         (rule "add_literals" (formula "77") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "77") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "77") (term "0,0,1,0"))
         (rule "leq_literals" (formula "77") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "77"))
         (rule "inEqSimp_contradInEq1" (formula "76") (term "0,0") (ifseqformula "17"))
         (rule "qeq_literals" (formula "76") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "76"))
         (rule "inEqSimp_contradInEq0" (formula "76") (term "0") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq1" (formula "76") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
         (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "76") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "76") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,0"))
         (rule "add_literals" (formula "76") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "76") (term "1,0,0,0"))
         (rule "add_literals" (formula "76") (term "0,0,0"))
         (rule "leq_literals" (formula "76") (term "0,0"))
          (builtin "One Step Simplification" (formula "76"))
         (rule "inEqSimp_contradInEq0" (formula "78") (term "0") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq1" (formula "78") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "78") (term "1,0,0,0"))
         (rule "mul_literals" (formula "78") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "78") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "78") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,0"))
         (rule "add_literals" (formula "78") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "78") (term "1,0,0,0"))
         (rule "add_literals" (formula "78") (term "0,0,0"))
         (rule "leq_literals" (formula "78") (term "0,0"))
          (builtin "One Step Simplification" (formula "78"))
         (rule "inEqSimp_contradInEq1" (formula "77") (term "0") (ifseqformula "17"))
         (rule "qeq_literals" (formula "77") (term "0,0"))
          (builtin "One Step Simplification" (formula "77"))
         (rule "pullOutSelect" (formula "76") (term "0") (inst "selectSK=arr_25"))
         (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "76"))
         (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "76"))
         (rule "hideAuxiliaryEq" (formula "76"))
         (rule "inEqSimp_exactShadow3" (formula "77") (ifseqformula "78"))
         (rule "mul_literals" (formula "77") (term "0,0"))
         (rule "add_zero_left" (formula "77") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "77"))
         (rule "mul_literals" (formula "77") (term "1"))
         (rule "allLeft" (formula "79") (inst "t=z_21"))
         (rule "replaceKnownSelect_taclet110_51" (formula "79") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_52" (formula "79") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "79") (inst "sk=z_22"))
         (rule "andLeft" (formula "79"))
         (rule "andLeft" (formula "79"))
         (rule "applyEq" (formula "79") (term "1,1") (ifseqformula "76"))
         (rule "inEqSimp_contradInEq1" (formula "81") (term "0,0") (ifseqformula "77"))
         (rule "qeq_literals" (formula "81") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "81"))
         (rule "inEqSimp_contradInEq0" (formula "79") (term "1,0") (ifseqformula "78"))
         (rule "inEqSimp_homoInEq1" (formula "79") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "79") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "79") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "79") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "79") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,1,0"))
         (rule "add_literals" (formula "79") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "79") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "79") (term "0,0,1,0"))
         (rule "leq_literals" (formula "79") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "79"))
         (rule "inEqSimp_contradInEq0" (formula "80") (term "1,0") (ifseqformula "78"))
         (rule "inEqSimp_homoInEq1" (formula "80") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "80") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "80") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "80") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "80") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0,1,0"))
         (rule "add_literals" (formula "80") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "80") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "80") (term "0,0,1,0"))
         (rule "leq_literals" (formula "80") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "80"))
         (rule "inEqSimp_contradInEq0" (formula "81") (term "0") (ifseqformula "78"))
         (rule "inEqSimp_homoInEq1" (formula "81") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0"))
         (rule "mul_literals" (formula "81") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "81") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "81") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,0"))
         (rule "add_literals" (formula "81") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "81") (term "1,0,0,0"))
         (rule "add_literals" (formula "81") (term "0,0,0"))
         (rule "leq_literals" (formula "81") (term "0,0"))
          (builtin "One Step Simplification" (formula "81"))
         (rule "inEqSimp_contradInEq1" (formula "80") (term "0") (ifseqformula "77"))
         (rule "qeq_literals" (formula "80") (term "0,0"))
          (builtin "One Step Simplification" (formula "80"))
         (rule "inEqSimp_contradInEq1" (formula "79") (term "0") (ifseqformula "77"))
         (rule "qeq_literals" (formula "79") (term "0,0"))
          (builtin "One Step Simplification" (formula "79"))
         (rule "pullOutSelect" (formula "79") (term "0") (inst "selectSK=arr_26"))
         (rule "simplifySelectOfAnonEQ" (formula "79") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "79"))
         (rule "applyEqReverse" (formula "80") (term "0") (ifseqformula "79"))
         (rule "hideAuxiliaryEq" (formula "79"))
         (rule "inEqSimp_exactShadow3" (formula "80") (ifseqformula "81"))
         (rule "mul_literals" (formula "80") (term "0,0"))
         (rule "add_zero_left" (formula "80") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "80"))
         (rule "mul_literals" (formula "80") (term "1"))
         (rule "allLeft" (formula "82") (inst "t=z_20"))
         (rule "replaceKnownSelect_taclet110_49" (formula "82") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_50" (formula "82") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "82") (inst "sk=z_23"))
         (rule "andLeft" (formula "82"))
         (rule "andLeft" (formula "82"))
         (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "73"))
         (rule "inEqSimp_contradInEq1" (formula "83") (term "0,0") (ifseqformula "74"))
         (rule "qeq_literals" (formula "83") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "83"))
         (rule "inEqSimp_contradInEq0" (formula "82") (term "1,0") (ifseqformula "75"))
         (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "82") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "82") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "82") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1,0"))
         (rule "add_literals" (formula "82") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "82") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "82") (term "0,0,1,0"))
         (rule "leq_literals" (formula "82") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "82"))
         (rule "inEqSimp_contradInEq1" (formula "84") (term "0,0") (ifseqformula "74"))
         (rule "qeq_literals" (formula "84") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "84"))
         (rule "inEqSimp_contradInEq1" (formula "82") (term "0") (ifseqformula "74"))
         (rule "qeq_literals" (formula "82") (term "0,0"))
          (builtin "One Step Simplification" (formula "82"))
         (rule "inEqSimp_contradInEq0" (formula "83") (term "0") (ifseqformula "75"))
         (rule "inEqSimp_homoInEq1" (formula "83") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0"))
         (rule "mul_literals" (formula "83") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "83") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "83") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0,0"))
         (rule "add_literals" (formula "83") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "83") (term "1,0,0,0"))
         (rule "add_literals" (formula "83") (term "0,0,0"))
         (rule "leq_literals" (formula "83") (term "0,0"))
          (builtin "One Step Simplification" (formula "83"))
         (rule "inEqSimp_contradInEq0" (formula "84") (term "0") (ifseqformula "75"))
         (rule "inEqSimp_homoInEq1" (formula "84") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "84") (term "1,0,0,0"))
         (rule "mul_literals" (formula "84") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "84") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "84") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,0"))
         (rule "add_literals" (formula "84") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "84") (term "1,0,0,0"))
         (rule "add_literals" (formula "84") (term "0,0,0"))
         (rule "leq_literals" (formula "84") (term "0,0"))
          (builtin "One Step Simplification" (formula "84"))
         (rule "pullOutSelect" (formula "82") (term "0") (inst "selectSK=arr_27"))
         (rule "simplifySelectOfAnonEQ" (formula "82") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "82"))
         (rule "applyEqReverse" (formula "83") (term "0") (ifseqformula "82"))
         (rule "hideAuxiliaryEq" (formula "82"))
         (rule "inEqSimp_exactShadow3" (formula "83") (ifseqformula "84"))
         (rule "mul_literals" (formula "83") (term "0,0"))
         (rule "add_zero_left" (formula "83") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "83"))
         (rule "mul_literals" (formula "83") (term "1"))
         (rule "allLeft" (formula "85") (inst "t=z_19"))
         (rule "replaceKnownSelect_taclet110_47" (formula "85") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_48" (formula "85") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "85") (inst "sk=z_24"))
         (rule "andLeft" (formula "85"))
         (rule "andLeft" (formula "85"))
         (rule "applyEq" (formula "85") (term "1,1") (ifseqformula "70"))
         (rule "inEqSimp_contradInEq1" (formula "87") (term "0,0") (ifseqformula "71"))
         (rule "qeq_literals" (formula "87") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "87"))
         (rule "inEqSimp_contradInEq0" (formula "86") (term "1,0") (ifseqformula "72"))
         (rule "inEqSimp_homoInEq1" (formula "86") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "86") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "86") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "86") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "86") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0,1,0"))
         (rule "add_literals" (formula "86") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "86") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "86") (term "0,0,1,0"))
         (rule "leq_literals" (formula "86") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "86"))
         (rule "inEqSimp_contradInEq0" (formula "85") (term "1,0") (ifseqformula "72"))
         (rule "inEqSimp_homoInEq1" (formula "85") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "85") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "85") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "85") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "85") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "85") (term "0,0,1,0"))
         (rule "add_literals" (formula "85") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "85") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "85") (term "0,0,1,0"))
         (rule "leq_literals" (formula "85") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "85"))
         (rule "inEqSimp_contradInEq0" (formula "87") (term "0") (ifseqformula "72"))
         (rule "inEqSimp_homoInEq1" (formula "87") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "87") (term "1,0,0,0"))
         (rule "mul_literals" (formula "87") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "87") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "87") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0"))
         (rule "add_literals" (formula "87") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "87") (term "1,0,0,0"))
         (rule "add_literals" (formula "87") (term "0,0,0"))
         (rule "leq_literals" (formula "87") (term "0,0"))
          (builtin "One Step Simplification" (formula "87"))
         (rule "inEqSimp_contradInEq1" (formula "86") (term "0") (ifseqformula "71"))
         (rule "qeq_literals" (formula "86") (term "0,0"))
          (builtin "One Step Simplification" (formula "86"))
         (rule "inEqSimp_contradInEq1" (formula "85") (term "0") (ifseqformula "71"))
         (rule "qeq_literals" (formula "85") (term "0,0"))
          (builtin "One Step Simplification" (formula "85"))
         (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=arr_28"))
         (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "85"))
         (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "85"))
         (rule "hideAuxiliaryEq" (formula "85"))
         (rule "inEqSimp_exactShadow3" (formula "86") (ifseqformula "87"))
         (rule "mul_literals" (formula "86") (term "0,0"))
         (rule "add_zero_left" (formula "86") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "86"))
         (rule "mul_literals" (formula "86") (term "1"))
         (rule "allLeft" (formula "88") (inst "t=z_18"))
         (rule "replaceKnownSelect_taclet110_45" (formula "88") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_46" (formula "88") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "88") (inst "sk=z_25"))
         (rule "andLeft" (formula "88"))
         (rule "andLeft" (formula "88"))
         (rule "applyEq" (formula "88") (term "1,1") (ifseqformula "67"))
         (rule "inEqSimp_contradInEq0" (formula "90") (term "1,0") (ifseqformula "69"))
         (rule "inEqSimp_homoInEq1" (formula "90") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "90") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "90") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "90") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "90") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "90") (term "0,0,1,0"))
         (rule "add_literals" (formula "90") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "90") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "90") (term "0,0,1,0"))
         (rule "leq_literals" (formula "90") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "90"))
         (rule "inEqSimp_contradInEq0" (formula "88") (term "1,0") (ifseqformula "69"))
         (rule "inEqSimp_homoInEq1" (formula "88") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "88") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "88") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "88") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "88") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "88") (term "0,0,1,0"))
         (rule "add_literals" (formula "88") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "88") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "88") (term "0,0,1,0"))
         (rule "leq_literals" (formula "88") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "inEqSimp_contradInEq0" (formula "89") (term "1,0") (ifseqformula "69"))
         (rule "inEqSimp_homoInEq1" (formula "89") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "89") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "89") (term "0,0,1,0"))
         (rule "add_literals" (formula "89") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "89") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "89") (term "0,0,1,0"))
         (rule "leq_literals" (formula "89") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "89"))
         (rule "inEqSimp_contradInEq1" (formula "88") (term "0") (ifseqformula "68"))
         (rule "qeq_literals" (formula "88") (term "0,0"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "inEqSimp_contradInEq1" (formula "90") (term "0") (ifseqformula "68"))
         (rule "qeq_literals" (formula "90") (term "0,0"))
          (builtin "One Step Simplification" (formula "90"))
         (rule "inEqSimp_contradInEq1" (formula "89") (term "0") (ifseqformula "68"))
         (rule "qeq_literals" (formula "89") (term "0,0"))
          (builtin "One Step Simplification" (formula "89"))
         (rule "pullOutSelect" (formula "88") (term "0") (inst "selectSK=arr_29"))
         (rule "simplifySelectOfAnonEQ" (formula "88") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "applyEqReverse" (formula "89") (term "0") (ifseqformula "88"))
         (rule "hideAuxiliaryEq" (formula "88"))
         (rule "inEqSimp_exactShadow3" (formula "89") (ifseqformula "90"))
         (rule "mul_literals" (formula "89") (term "0,0"))
         (rule "add_zero_left" (formula "89") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "89"))
         (rule "mul_literals" (formula "89") (term "1"))
         (rule "allLeft" (formula "91") (inst "t=z_17"))
         (rule "replaceKnownSelect_taclet110_43" (formula "91") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_44" (formula "91") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "91") (inst "sk=z_26"))
         (rule "andLeft" (formula "91"))
         (rule "andLeft" (formula "91"))
         (rule "applyEq" (formula "91") (term "1,1") (ifseqformula "64"))
         (rule "inEqSimp_contradInEq1" (formula "91") (term "0,0") (ifseqformula "65"))
         (rule "qeq_literals" (formula "91") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "91"))
         (rule "inEqSimp_contradInEq0" (formula "92") (term "1,0") (ifseqformula "66"))
         (rule "inEqSimp_homoInEq1" (formula "92") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "92") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "92") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "92") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "92") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "92") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "92") (term "0,0,1,0"))
         (rule "add_literals" (formula "92") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "92") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "92") (term "0,0,1,0"))
         (rule "leq_literals" (formula "92") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "92"))
         (rule "inEqSimp_contradInEq0" (formula "93") (term "1,0") (ifseqformula "66"))
         (rule "inEqSimp_homoInEq1" (formula "93") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "93") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "93") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "93") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "93") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "93") (term "0,0,1,0"))
         (rule "add_literals" (formula "93") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "93") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "93") (term "0,0,1,0"))
         (rule "leq_literals" (formula "93") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "93"))
         (rule "inEqSimp_contradInEq0" (formula "91") (term "0") (ifseqformula "66"))
         (rule "inEqSimp_homoInEq1" (formula "91") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "91") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "91") (term "1,0,0,0"))
         (rule "mul_literals" (formula "91") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "91") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "91") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "91") (term "0,0,0"))
         (rule "add_literals" (formula "91") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "91") (term "1,0,0,0"))
         (rule "add_literals" (formula "91") (term "0,0,0"))
         (rule "leq_literals" (formula "91") (term "0,0"))
          (builtin "One Step Simplification" (formula "91"))
         (rule "inEqSimp_contradInEq1" (formula "92") (term "0") (ifseqformula "65"))
         (rule "qeq_literals" (formula "92") (term "0,0"))
          (builtin "One Step Simplification" (formula "92"))
         (rule "inEqSimp_contradInEq1" (formula "93") (term "0") (ifseqformula "65"))
         (rule "qeq_literals" (formula "93") (term "0,0"))
          (builtin "One Step Simplification" (formula "93"))
         (rule "pullOutSelect" (formula "91") (term "0") (inst "selectSK=arr_30"))
         (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "91"))
         (rule "applyEqReverse" (formula "92") (term "0") (ifseqformula "91"))
         (rule "hideAuxiliaryEq" (formula "91"))
         (rule "inEqSimp_exactShadow3" (formula "92") (ifseqformula "93"))
         (rule "mul_literals" (formula "92") (term "0,0"))
         (rule "add_zero_left" (formula "92") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "92"))
         (rule "mul_literals" (formula "92") (term "1"))
         (rule "allLeft" (formula "94") (inst "t=z_16"))
         (rule "replaceKnownSelect_taclet110_41" (formula "94") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_42" (formula "94") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "94") (inst "sk=z_27"))
         (rule "andLeft" (formula "94"))
         (rule "andLeft" (formula "94"))
         (rule "applyEq" (formula "94") (term "1,1") (ifseqformula "61"))
         (rule "inEqSimp_contradInEq0" (formula "96") (term "1,0") (ifseqformula "63"))
         (rule "inEqSimp_homoInEq1" (formula "96") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "96") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "96") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "96") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "96") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "96") (term "0,0,1,0"))
         (rule "add_literals" (formula "96") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "96") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "96") (term "0,0,1,0"))
         (rule "leq_literals" (formula "96") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "96"))
         (rule "inEqSimp_contradInEq0" (formula "94") (term "1,0") (ifseqformula "63"))
         (rule "inEqSimp_homoInEq1" (formula "94") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "94") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "94") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "94") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "94") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "94") (term "0,0,1,0"))
         (rule "add_literals" (formula "94") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "94") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "94") (term "0,0,1,0"))
         (rule "leq_literals" (formula "94") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "94"))
         (rule "inEqSimp_contradInEq1" (formula "95") (term "0,0") (ifseqformula "62"))
         (rule "qeq_literals" (formula "95") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "95"))
         (rule "inEqSimp_contradInEq1" (formula "94") (term "0") (ifseqformula "62"))
         (rule "qeq_literals" (formula "94") (term "0,0"))
          (builtin "One Step Simplification" (formula "94"))
         (rule "inEqSimp_contradInEq1" (formula "96") (term "0") (ifseqformula "62"))
         (rule "qeq_literals" (formula "96") (term "0,0"))
          (builtin "One Step Simplification" (formula "96"))
         (rule "inEqSimp_contradInEq0" (formula "95") (term "0") (ifseqformula "63"))
         (rule "inEqSimp_homoInEq1" (formula "95") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "95") (term "1,0,0,0"))
         (rule "mul_literals" (formula "95") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "95") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "95") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "95") (term "0,0,0"))
         (rule "add_literals" (formula "95") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "95") (term "1,0,0,0"))
         (rule "add_literals" (formula "95") (term "0,0,0"))
         (rule "leq_literals" (formula "95") (term "0,0"))
          (builtin "One Step Simplification" (formula "95"))
         (rule "pullOutSelect" (formula "94") (term "0") (inst "selectSK=arr_31"))
         (rule "simplifySelectOfAnonEQ" (formula "94") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "94"))
         (rule "applyEqReverse" (formula "95") (term "0") (ifseqformula "94"))
         (rule "hideAuxiliaryEq" (formula "94"))
         (rule "inEqSimp_exactShadow3" (formula "95") (ifseqformula "96"))
         (rule "mul_literals" (formula "95") (term "0,0"))
         (rule "add_zero_left" (formula "95") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "95"))
         (rule "mul_literals" (formula "95") (term "1"))
         (rule "allLeft" (formula "97") (inst "t=z_15"))
         (rule "replaceKnownSelect_taclet110_39" (formula "97") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_40" (formula "97") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "97") (inst "sk=z_28"))
         (rule "andLeft" (formula "97"))
         (rule "andLeft" (formula "97"))
         (rule "applyEq" (formula "97") (term "1,1") (ifseqformula "58"))
         (rule "inEqSimp_contradInEq1" (formula "97") (term "0,0") (ifseqformula "59"))
         (rule "qeq_literals" (formula "97") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "97"))
         (rule "inEqSimp_contradInEq0" (formula "98") (term "1,0") (ifseqformula "60"))
         (rule "inEqSimp_homoInEq1" (formula "98") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "98") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "98") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "98") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "98") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "98") (term "0,0,1,0"))
         (rule "add_literals" (formula "98") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "98") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "98") (term "0,0,1,0"))
         (rule "leq_literals" (formula "98") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "98"))
         (rule "inEqSimp_contradInEq1" (formula "99") (term "0,0") (ifseqformula "59"))
         (rule "qeq_literals" (formula "99") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "99"))
         (rule "inEqSimp_contradInEq1" (formula "98") (term "0") (ifseqformula "59"))
         (rule "qeq_literals" (formula "98") (term "0,0"))
          (builtin "One Step Simplification" (formula "98"))
         (rule "inEqSimp_contradInEq0" (formula "97") (term "0") (ifseqformula "60"))
         (rule "inEqSimp_homoInEq1" (formula "97") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0"))
         (rule "mul_literals" (formula "97") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "97") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "97") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "97") (term "0,0,0"))
         (rule "add_literals" (formula "97") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "97") (term "1,0,0,0"))
         (rule "add_literals" (formula "97") (term "0,0,0"))
         (rule "leq_literals" (formula "97") (term "0,0"))
          (builtin "One Step Simplification" (formula "97"))
         (rule "inEqSimp_contradInEq0" (formula "99") (term "0") (ifseqformula "60"))
         (rule "inEqSimp_homoInEq1" (formula "99") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "99") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "99") (term "1,0,0,0"))
         (rule "mul_literals" (formula "99") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "99") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "99") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "99") (term "0,0,0"))
         (rule "add_literals" (formula "99") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "99") (term "1,0,0,0"))
         (rule "add_literals" (formula "99") (term "0,0,0"))
         (rule "leq_literals" (formula "99") (term "0,0"))
          (builtin "One Step Simplification" (formula "99"))
         (rule "pullOutSelect" (formula "97") (term "0") (inst "selectSK=arr_32"))
         (rule "simplifySelectOfAnonEQ" (formula "97") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "97"))
         (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "97"))
         (rule "hideAuxiliaryEq" (formula "97"))
         (rule "inEqSimp_exactShadow3" (formula "98") (ifseqformula "99"))
         (rule "mul_literals" (formula "98") (term "0,0"))
         (rule "add_zero_left" (formula "98") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "98"))
         (rule "mul_literals" (formula "98") (term "1"))
         (rule "allLeft" (formula "100") (inst "t=z_14"))
         (rule "replaceKnownSelect_taclet110_37" (formula "100") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_38" (formula "100") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "100") (inst "sk=z_29"))
         (rule "andLeft" (formula "100"))
         (rule "andLeft" (formula "100"))
         (rule "applyEq" (formula "100") (term "1,1") (ifseqformula "55"))
         (rule "inEqSimp_contradInEq1" (formula "101") (term "0,0") (ifseqformula "56"))
         (rule "qeq_literals" (formula "101") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "101"))
         (rule "inEqSimp_contradInEq0" (formula "100") (term "1,0") (ifseqformula "57"))
         (rule "inEqSimp_homoInEq1" (formula "100") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "100") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "100") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "100") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "100") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "100") (term "0,0,1,0"))
         (rule "add_literals" (formula "100") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "100") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "100") (term "0,0,1,0"))
         (rule "leq_literals" (formula "100") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "100"))
         (rule "inEqSimp_contradInEq0" (formula "102") (term "1,0") (ifseqformula "57"))
         (rule "inEqSimp_homoInEq1" (formula "102") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "102") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "102") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "102") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "102") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "102") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "102") (term "0,0,1,0"))
         (rule "add_literals" (formula "102") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "102") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "102") (term "0,0,1,0"))
         (rule "leq_literals" (formula "102") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "102"))
         (rule "inEqSimp_contradInEq1" (formula "100") (term "0") (ifseqformula "56"))
         (rule "qeq_literals" (formula "100") (term "0,0"))
          (builtin "One Step Simplification" (formula "100"))
         (rule "inEqSimp_contradInEq0" (formula "101") (term "0") (ifseqformula "57"))
         (rule "inEqSimp_homoInEq1" (formula "101") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "101") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "101") (term "1,0,0,0"))
         (rule "mul_literals" (formula "101") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "101") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "101") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "101") (term "0,0,0"))
         (rule "add_literals" (formula "101") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "101") (term "1,0,0,0"))
         (rule "add_literals" (formula "101") (term "0,0,0"))
         (rule "leq_literals" (formula "101") (term "0,0"))
          (builtin "One Step Simplification" (formula "101"))
         (rule "inEqSimp_contradInEq1" (formula "102") (term "0") (ifseqformula "56"))
         (rule "qeq_literals" (formula "102") (term "0,0"))
          (builtin "One Step Simplification" (formula "102"))
         (rule "pullOutSelect" (formula "100") (term "0") (inst "selectSK=arr_33"))
         (rule "simplifySelectOfAnonEQ" (formula "100") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "100"))
         (rule "applyEqReverse" (formula "101") (term "0") (ifseqformula "100"))
         (rule "hideAuxiliaryEq" (formula "100"))
         (rule "inEqSimp_exactShadow3" (formula "101") (ifseqformula "102"))
         (rule "mul_literals" (formula "101") (term "0,0"))
         (rule "add_zero_left" (formula "101") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "101"))
         (rule "mul_literals" (formula "101") (term "1"))
         (rule "allLeft" (formula "103") (inst "t=z_13"))
         (rule "replaceKnownSelect_taclet110_35" (formula "103") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_36" (formula "103") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "103") (inst "sk=z_30"))
         (rule "andLeft" (formula "103"))
         (rule "andLeft" (formula "103"))
         (rule "applyEq" (formula "103") (term "1,1") (ifseqformula "52"))
         (rule "inEqSimp_contradInEq0" (formula "105") (term "1,0") (ifseqformula "54"))
         (rule "inEqSimp_homoInEq1" (formula "105") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "105") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "105") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "105") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "105") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "105") (term "0,0,1,0"))
         (rule "add_literals" (formula "105") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "105") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "105") (term "0,0,1,0"))
         (rule "leq_literals" (formula "105") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "105"))
         (rule "inEqSimp_contradInEq0" (formula "104") (term "1,0") (ifseqformula "54"))
         (rule "inEqSimp_homoInEq1" (formula "104") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "104") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "104") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "104") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "104") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "104") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "104") (term "0,0,1,0"))
         (rule "add_literals" (formula "104") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "104") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "104") (term "0,0,1,0"))
         (rule "leq_literals" (formula "104") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "104"))
         (rule "inEqSimp_contradInEq1" (formula "103") (term "0,0") (ifseqformula "53"))
         (rule "qeq_literals" (formula "103") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "103"))
         (rule "inEqSimp_contradInEq1" (formula "105") (term "0") (ifseqformula "53"))
         (rule "qeq_literals" (formula "105") (term "0,0"))
          (builtin "One Step Simplification" (formula "105"))
         (rule "inEqSimp_contradInEq0" (formula "103") (term "0") (ifseqformula "54"))
         (rule "inEqSimp_homoInEq1" (formula "103") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "103") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "103") (term "1,0,0,0"))
         (rule "mul_literals" (formula "103") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "103") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "103") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "103") (term "0,0,0"))
         (rule "add_literals" (formula "103") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "103") (term "1,0,0,0"))
         (rule "add_literals" (formula "103") (term "0,0,0"))
         (rule "leq_literals" (formula "103") (term "0,0"))
          (builtin "One Step Simplification" (formula "103"))
         (rule "inEqSimp_contradInEq1" (formula "104") (term "0") (ifseqformula "53"))
         (rule "qeq_literals" (formula "104") (term "0,0"))
          (builtin "One Step Simplification" (formula "104"))
         (rule "pullOutSelect" (formula "103") (term "0") (inst "selectSK=arr_34"))
         (rule "simplifySelectOfAnonEQ" (formula "103") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "103"))
         (rule "applyEqReverse" (formula "104") (term "0") (ifseqformula "103"))
         (rule "hideAuxiliaryEq" (formula "103"))
         (rule "inEqSimp_exactShadow3" (formula "104") (ifseqformula "105"))
         (rule "mul_literals" (formula "104") (term "0,0"))
         (rule "add_zero_left" (formula "104") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "104"))
         (rule "mul_literals" (formula "104") (term "1"))
         (rule "allLeft" (formula "106") (inst "t=z_12"))
         (rule "replaceKnownSelect_taclet110_33" (formula "106") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_34" (formula "106") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "106") (inst "sk=z_31"))
         (rule "andLeft" (formula "106"))
         (rule "andLeft" (formula "106"))
         (rule "applyEq" (formula "106") (term "1,1") (ifseqformula "49"))
         (rule "inEqSimp_contradInEq0" (formula "107") (term "1,0") (ifseqformula "51"))
         (rule "inEqSimp_homoInEq1" (formula "107") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "107") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "107") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "107") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "107") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "107") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "107") (term "0,0,1,0"))
         (rule "add_literals" (formula "107") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "107") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "107") (term "0,0,1,0"))
         (rule "leq_literals" (formula "107") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "107"))
         (rule "inEqSimp_contradInEq1" (formula "106") (term "0,0") (ifseqformula "50"))
         (rule "qeq_literals" (formula "106") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "106"))
         (rule "inEqSimp_contradInEq0" (formula "108") (term "1,0") (ifseqformula "51"))
         (rule "inEqSimp_homoInEq1" (formula "108") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "108") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "108") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "108") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "108") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "108") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "108") (term "0,0,1,0"))
         (rule "add_literals" (formula "108") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "108") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "108") (term "0,0,1,0"))
         (rule "leq_literals" (formula "108") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "108"))
         (rule "inEqSimp_contradInEq1" (formula "107") (term "0") (ifseqformula "50"))
         (rule "qeq_literals" (formula "107") (term "0,0"))
          (builtin "One Step Simplification" (formula "107"))
         (rule "inEqSimp_contradInEq1" (formula "108") (term "0") (ifseqformula "50"))
         (rule "qeq_literals" (formula "108") (term "0,0"))
          (builtin "One Step Simplification" (formula "108"))
         (rule "inEqSimp_contradInEq0" (formula "106") (term "0") (ifseqformula "51"))
         (rule "inEqSimp_homoInEq1" (formula "106") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "106") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "106") (term "1,0,0,0"))
         (rule "mul_literals" (formula "106") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "106") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "106") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "106") (term "0,0,0"))
         (rule "add_literals" (formula "106") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "106") (term "1,0,0,0"))
         (rule "add_literals" (formula "106") (term "0,0,0"))
         (rule "leq_literals" (formula "106") (term "0,0"))
          (builtin "One Step Simplification" (formula "106"))
         (rule "pullOutSelect" (formula "106") (term "0") (inst "selectSK=arr_35"))
         (rule "simplifySelectOfAnonEQ" (formula "106") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "106"))
         (rule "applyEqReverse" (formula "107") (term "0") (ifseqformula "106"))
         (rule "hideAuxiliaryEq" (formula "106"))
         (rule "inEqSimp_exactShadow3" (formula "107") (ifseqformula "108"))
         (rule "mul_literals" (formula "107") (term "0,0"))
         (rule "add_zero_left" (formula "107") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "107"))
         (rule "mul_literals" (formula "107") (term "1"))
         (rule "allLeft" (formula "109") (inst "t=z_11"))
         (rule "replaceKnownSelect_taclet110_29" (formula "109") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_30" (formula "109") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "109") (inst "sk=z_32"))
         (rule "andLeft" (formula "109"))
         (rule "andLeft" (formula "109"))
         (rule "applyEq" (formula "109") (term "1,1") (ifseqformula "46"))
         (rule "inEqSimp_contradInEq0" (formula "109") (term "1,0") (ifseqformula "48"))
         (rule "inEqSimp_homoInEq1" (formula "109") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "109") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "109") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "109") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "109") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "109") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "109") (term "0,0,1,0"))
         (rule "add_literals" (formula "109") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "109") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "109") (term "0,0,1,0"))
         (rule "leq_literals" (formula "109") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "109"))
         (rule "inEqSimp_contradInEq1" (formula "110") (term "0,0") (ifseqformula "47"))
         (rule "qeq_literals" (formula "110") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "110"))
         (rule "inEqSimp_contradInEq1" (formula "111") (term "0,0") (ifseqformula "47"))
         (rule "qeq_literals" (formula "111") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "111"))
         (rule "inEqSimp_contradInEq1" (formula "109") (term "0") (ifseqformula "47"))
         (rule "qeq_literals" (formula "109") (term "0,0"))
          (builtin "One Step Simplification" (formula "109"))
         (rule "inEqSimp_contradInEq0" (formula "111") (term "0") (ifseqformula "48"))
         (rule "inEqSimp_homoInEq1" (formula "111") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "111") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "111") (term "1,0,0,0"))
         (rule "mul_literals" (formula "111") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "111") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "111") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "111") (term "0,0,0"))
         (rule "add_literals" (formula "111") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "111") (term "1,0,0,0"))
         (rule "add_literals" (formula "111") (term "0,0,0"))
         (rule "leq_literals" (formula "111") (term "0,0"))
          (builtin "One Step Simplification" (formula "111"))
         (rule "inEqSimp_contradInEq0" (formula "110") (term "0") (ifseqformula "48"))
         (rule "inEqSimp_homoInEq1" (formula "110") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "110") (term "1,0,0,0"))
         (rule "mul_literals" (formula "110") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "110") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "110") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "110") (term "0,0,0"))
         (rule "add_literals" (formula "110") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "110") (term "1,0,0,0"))
         (rule "add_literals" (formula "110") (term "0,0,0"))
         (rule "leq_literals" (formula "110") (term "0,0"))
          (builtin "One Step Simplification" (formula "110"))
         (rule "pullOutSelect" (formula "109") (term "0") (inst "selectSK=arr_36"))
         (rule "simplifySelectOfAnonEQ" (formula "109") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "109"))
         (rule "applyEqReverse" (formula "110") (term "0") (ifseqformula "109"))
         (rule "hideAuxiliaryEq" (formula "109"))
         (rule "inEqSimp_exactShadow3" (formula "110") (ifseqformula "111"))
         (rule "mul_literals" (formula "110") (term "0,0"))
         (rule "add_zero_left" (formula "110") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "110"))
         (rule "mul_literals" (formula "110") (term "1"))
         (rule "allLeft" (formula "112") (inst "t=z_32"))
         (rule "replaceKnownSelect_taclet110_73" (formula "112") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_74" (formula "112") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "112") (inst "sk=z_33"))
         (rule "andLeft" (formula "112"))
         (rule "andLeft" (formula "112"))
         (rule "applyEq" (formula "112") (term "1,1") (ifseqformula "109"))
         (rule "inEqSimp_contradInEq0" (formula "114") (term "1,0") (ifseqformula "111"))
         (rule "inEqSimp_homoInEq1" (formula "114") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "114") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "114") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "114") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "114") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "114") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "114") (term "0,0,1,0"))
         (rule "add_literals" (formula "114") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "114") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "114") (term "0,0,1,0"))
         (rule "leq_literals" (formula "114") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "114"))
         (rule "inEqSimp_contradInEq1" (formula "112") (term "0,0") (ifseqformula "110"))
         (rule "qeq_literals" (formula "112") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "112"))
         (rule "inEqSimp_contradInEq0" (formula "113") (term "1,0") (ifseqformula "111"))
         (rule "inEqSimp_homoInEq1" (formula "113") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "113") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "113") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "113") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "113") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "113") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "113") (term "0,0,1,0"))
         (rule "add_literals" (formula "113") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "113") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "113") (term "0,0,1,0"))
         (rule "leq_literals" (formula "113") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "113"))
         (rule "inEqSimp_contradInEq1" (formula "114") (term "0") (ifseqformula "110"))
         (rule "qeq_literals" (formula "114") (term "0,0"))
          (builtin "One Step Simplification" (formula "114"))
         (rule "inEqSimp_contradInEq0" (formula "112") (term "0") (ifseqformula "111"))
         (rule "inEqSimp_homoInEq1" (formula "112") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "112") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "112") (term "1,0,0,0"))
         (rule "mul_literals" (formula "112") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "112") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "112") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "112") (term "0,0,0"))
         (rule "add_literals" (formula "112") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "112") (term "1,0,0,0"))
         (rule "add_literals" (formula "112") (term "0,0,0"))
         (rule "leq_literals" (formula "112") (term "0,0"))
          (builtin "One Step Simplification" (formula "112"))
         (rule "inEqSimp_contradInEq1" (formula "113") (term "0") (ifseqformula "110"))
         (rule "qeq_literals" (formula "113") (term "0,0"))
          (builtin "One Step Simplification" (formula "113"))
         (rule "pullOutSelect" (formula "112") (term "0") (inst "selectSK=arr_37"))
         (rule "simplifySelectOfAnonEQ" (formula "112") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "112"))
         (rule "applyEqReverse" (formula "113") (term "0") (ifseqformula "112"))
         (rule "hideAuxiliaryEq" (formula "112"))
         (rule "inEqSimp_exactShadow3" (formula "113") (ifseqformula "114"))
         (rule "mul_literals" (formula "113") (term "0,0"))
         (rule "add_zero_left" (formula "113") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "113"))
         (rule "mul_literals" (formula "113") (term "1"))
         (rule "allLeft" (formula "115") (inst "t=z_31"))
         (rule "replaceKnownSelect_taclet110_71" (formula "115") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_72" (formula "115") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "115") (inst "sk=z_34"))
         (rule "andLeft" (formula "115"))
         (rule "andLeft" (formula "115"))
         (rule "applyEq" (formula "115") (term "1,1") (ifseqformula "106"))
         (rule "inEqSimp_contradInEq0" (formula "117") (term "1,0") (ifseqformula "108"))
         (rule "inEqSimp_homoInEq1" (formula "117") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "117") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "117") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "117") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "117") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "117") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "117") (term "0,0,1,0"))
         (rule "add_literals" (formula "117") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "117") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "117") (term "0,0,1,0"))
         (rule "leq_literals" (formula "117") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "117"))
         (rule "inEqSimp_contradInEq1" (formula "115") (term "0,0") (ifseqformula "107"))
         (rule "qeq_literals" (formula "115") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "115"))
         (rule "inEqSimp_contradInEq0" (formula "116") (term "1,0") (ifseqformula "108"))
         (rule "inEqSimp_homoInEq1" (formula "116") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "116") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "116") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "116") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "116") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "116") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "116") (term "0,0,1,0"))
         (rule "add_literals" (formula "116") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "116") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "116") (term "0,0,1,0"))
         (rule "leq_literals" (formula "116") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "116"))
         (rule "inEqSimp_contradInEq1" (formula "117") (term "0") (ifseqformula "107"))
         (rule "qeq_literals" (formula "117") (term "0,0"))
          (builtin "One Step Simplification" (formula "117"))
         (rule "inEqSimp_contradInEq1" (formula "116") (term "0") (ifseqformula "107"))
         (rule "qeq_literals" (formula "116") (term "0,0"))
          (builtin "One Step Simplification" (formula "116"))
         (rule "inEqSimp_contradInEq0" (formula "115") (term "0") (ifseqformula "108"))
         (rule "inEqSimp_homoInEq1" (formula "115") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "115") (term "1,0,0,0"))
         (rule "mul_literals" (formula "115") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "115") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "115") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "115") (term "0,0,0"))
         (rule "add_literals" (formula "115") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "115") (term "1,0,0,0"))
         (rule "add_literals" (formula "115") (term "0,0,0"))
         (rule "leq_literals" (formula "115") (term "0,0"))
          (builtin "One Step Simplification" (formula "115"))
         (rule "pullOutSelect" (formula "115") (term "0") (inst "selectSK=arr_38"))
         (rule "simplifySelectOfAnonEQ" (formula "115") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "115"))
         (rule "applyEqReverse" (formula "116") (term "0") (ifseqformula "115"))
         (rule "hideAuxiliaryEq" (formula "115"))
         (rule "inEqSimp_exactShadow3" (formula "116") (ifseqformula "117"))
         (rule "mul_literals" (formula "116") (term "0,0"))
         (rule "add_zero_left" (formula "116") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "116"))
         (rule "mul_literals" (formula "116") (term "1"))
         (rule "allLeft" (formula "118") (inst "t=z_30"))
         (rule "replaceKnownSelect_taclet110_69" (formula "118") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_70" (formula "118") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "118") (inst "sk=z_35"))
         (rule "andLeft" (formula "118"))
         (rule "andLeft" (formula "118"))
         (rule "applyEq" (formula "118") (term "1,1") (ifseqformula "103"))
         (rule "inEqSimp_contradInEq0" (formula "118") (term "1,0") (ifseqformula "105"))
         (rule "inEqSimp_homoInEq1" (formula "118") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "118") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "118") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "118") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "118") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "118") (term "0,0,1,0"))
         (rule "add_literals" (formula "118") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "118") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "118") (term "0,0,1,0"))
         (rule "leq_literals" (formula "118") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "118"))
         (rule "inEqSimp_contradInEq0" (formula "119") (term "1,0") (ifseqformula "105"))
         (rule "inEqSimp_homoInEq1" (formula "119") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "119") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "119") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "119") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "119") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "119") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "119") (term "0,0,1,0"))
         (rule "add_literals" (formula "119") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "119") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "119") (term "0,0,1,0"))
         (rule "leq_literals" (formula "119") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "119"))
         (rule "inEqSimp_contradInEq0" (formula "120") (term "1,0") (ifseqformula "105"))
         (rule "inEqSimp_homoInEq1" (formula "120") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "120") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "120") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "120") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "120") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "120") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "120") (term "0,0,1,0"))
         (rule "add_literals" (formula "120") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "120") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "120") (term "0,0,1,0"))
         (rule "leq_literals" (formula "120") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "inEqSimp_contradInEq1" (formula "118") (term "0") (ifseqformula "104"))
         (rule "qeq_literals" (formula "118") (term "0,0"))
          (builtin "One Step Simplification" (formula "118"))
         (rule "inEqSimp_contradInEq1" (formula "120") (term "0") (ifseqformula "104"))
         (rule "qeq_literals" (formula "120") (term "0,0"))
          (builtin "One Step Simplification" (formula "120"))
         (rule "inEqSimp_contradInEq1" (formula "119") (term "0") (ifseqformula "104"))
         (rule "qeq_literals" (formula "119") (term "0,0"))
          (builtin "One Step Simplification" (formula "119"))
         (rule "pullOutSelect" (formula "118") (term "0") (inst "selectSK=arr_39"))
         (rule "simplifySelectOfAnonEQ" (formula "118") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "118"))
         (rule "applyEqReverse" (formula "119") (term "0") (ifseqformula "118"))
         (rule "hideAuxiliaryEq" (formula "118"))
         (rule "inEqSimp_exactShadow3" (formula "119") (ifseqformula "120"))
         (rule "mul_literals" (formula "119") (term "0,0"))
         (rule "add_zero_left" (formula "119") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "119"))
         (rule "mul_literals" (formula "119") (term "1"))
         (rule "allLeft" (formula "121") (inst "t=z_29"))
         (rule "replaceKnownSelect_taclet110_67" (formula "121") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_68" (formula "121") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "121") (inst "sk=z_36"))
         (rule "andLeft" (formula "121"))
         (rule "andLeft" (formula "121"))
         (rule "applyEq" (formula "121") (term "1,1") (ifseqformula "100"))
         (rule "inEqSimp_contradInEq0" (formula "123") (term "1,0") (ifseqformula "102"))
         (rule "inEqSimp_homoInEq1" (formula "123") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "123") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "123") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "123") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "123") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "123") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "123") (term "0,0,1,0"))
         (rule "add_literals" (formula "123") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "123") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "123") (term "0,0,1,0"))
         (rule "leq_literals" (formula "123") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "123"))
         (rule "inEqSimp_contradInEq1" (formula "121") (term "0,0") (ifseqformula "101"))
         (rule "qeq_literals" (formula "121") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "121"))
         (rule "inEqSimp_contradInEq0" (formula "122") (term "1,0") (ifseqformula "102"))
         (rule "inEqSimp_homoInEq1" (formula "122") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "122") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "122") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "122") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "122") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "122") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "122") (term "0,0,1,0"))
         (rule "add_literals" (formula "122") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "122") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "122") (term "0,0,1,0"))
         (rule "leq_literals" (formula "122") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "122"))
         (rule "inEqSimp_contradInEq1" (formula "123") (term "0") (ifseqformula "101"))
         (rule "qeq_literals" (formula "123") (term "0,0"))
          (builtin "One Step Simplification" (formula "123"))
         (rule "inEqSimp_contradInEq0" (formula "121") (term "0") (ifseqformula "102"))
         (rule "inEqSimp_homoInEq1" (formula "121") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "121") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "121") (term "1,0,0,0"))
         (rule "mul_literals" (formula "121") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "121") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "121") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "121") (term "0,0,0"))
         (rule "add_literals" (formula "121") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "121") (term "1,0,0,0"))
         (rule "add_literals" (formula "121") (term "0,0,0"))
         (rule "leq_literals" (formula "121") (term "0,0"))
          (builtin "One Step Simplification" (formula "121"))
         (rule "inEqSimp_contradInEq1" (formula "122") (term "0") (ifseqformula "101"))
         (rule "qeq_literals" (formula "122") (term "0,0"))
          (builtin "One Step Simplification" (formula "122"))
         (rule "pullOutSelect" (formula "121") (term "0") (inst "selectSK=arr_40"))
         (rule "simplifySelectOfAnonEQ" (formula "121") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "121"))
         (rule "applyEqReverse" (formula "122") (term "0") (ifseqformula "121"))
         (rule "hideAuxiliaryEq" (formula "121"))
         (rule "inEqSimp_exactShadow3" (formula "122") (ifseqformula "123"))
         (rule "mul_literals" (formula "122") (term "0,0"))
         (rule "add_zero_left" (formula "122") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "122"))
         (rule "mul_literals" (formula "122") (term "1"))
         (rule "allLeft" (formula "124") (inst "t=z_28"))
         (rule "replaceKnownSelect_taclet110_65" (formula "124") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_66" (formula "124") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "124") (inst "sk=z_37"))
         (rule "andLeft" (formula "124"))
         (rule "andLeft" (formula "124"))
         (rule "applyEq" (formula "124") (term "1,1") (ifseqformula "97"))
         (rule "inEqSimp_contradInEq1" (formula "126") (term "0,0") (ifseqformula "98"))
         (rule "qeq_literals" (formula "126") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "126"))
         (rule "inEqSimp_contradInEq0" (formula "124") (term "1,0") (ifseqformula "99"))
         (rule "inEqSimp_homoInEq1" (formula "124") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "124") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "124") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "124") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "124") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "124") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "124") (term "0,0,1,0"))
         (rule "add_literals" (formula "124") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "124") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "124") (term "0,0,1,0"))
         (rule "leq_literals" (formula "124") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "124"))
         (rule "inEqSimp_contradInEq0" (formula "125") (term "1,0") (ifseqformula "99"))
         (rule "inEqSimp_homoInEq1" (formula "125") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "125") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "125") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "125") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "125") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "125") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "125") (term "0,0,1,0"))
         (rule "add_literals" (formula "125") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "125") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "125") (term "0,0,1,0"))
         (rule "leq_literals" (formula "125") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "125"))
         (rule "inEqSimp_contradInEq0" (formula "126") (term "0") (ifseqformula "99"))
         (rule "inEqSimp_homoInEq1" (formula "126") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "126") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "126") (term "1,0,0,0"))
         (rule "mul_literals" (formula "126") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "126") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "126") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "126") (term "0,0,0"))
         (rule "add_literals" (formula "126") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "126") (term "1,0,0,0"))
         (rule "add_literals" (formula "126") (term "0,0,0"))
         (rule "leq_literals" (formula "126") (term "0,0"))
          (builtin "One Step Simplification" (formula "126"))
         (rule "inEqSimp_contradInEq1" (formula "125") (term "0") (ifseqformula "98"))
         (rule "qeq_literals" (formula "125") (term "0,0"))
          (builtin "One Step Simplification" (formula "125"))
         (rule "inEqSimp_contradInEq1" (formula "124") (term "0") (ifseqformula "98"))
         (rule "qeq_literals" (formula "124") (term "0,0"))
          (builtin "One Step Simplification" (formula "124"))
         (rule "pullOutSelect" (formula "124") (term "0") (inst "selectSK=arr_41"))
         (rule "simplifySelectOfAnonEQ" (formula "124") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "124"))
         (rule "applyEqReverse" (formula "125") (term "0") (ifseqformula "124"))
         (rule "hideAuxiliaryEq" (formula "124"))
         (rule "inEqSimp_exactShadow3" (formula "125") (ifseqformula "126"))
         (rule "mul_literals" (formula "125") (term "0,0"))
         (rule "add_zero_left" (formula "125") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "125"))
         (rule "mul_literals" (formula "125") (term "1"))
         (rule "allLeft" (formula "127") (inst "t=z_27"))
         (rule "replaceKnownSelect_taclet110_63" (formula "127") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_64" (formula "127") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "127") (inst "sk=z_38"))
         (rule "andLeft" (formula "127"))
         (rule "andLeft" (formula "127"))
         (rule "applyEq" (formula "127") (term "1,1") (ifseqformula "94"))
         (rule "inEqSimp_contradInEq0" (formula "129") (term "1,0") (ifseqformula "96"))
         (rule "inEqSimp_homoInEq1" (formula "129") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "129") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "129") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "129") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "129") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "129") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "129") (term "0,0,1,0"))
         (rule "add_literals" (formula "129") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "129") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "129") (term "0,0,1,0"))
         (rule "leq_literals" (formula "129") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "129"))
         (rule "inEqSimp_contradInEq1" (formula "128") (term "0,0") (ifseqformula "95"))
         (rule "qeq_literals" (formula "128") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "128"))
         (rule "inEqSimp_contradInEq1" (formula "127") (term "0,0") (ifseqformula "95"))
         (rule "qeq_literals" (formula "127") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "127"))
         (rule "inEqSimp_contradInEq1" (formula "129") (term "0") (ifseqformula "95"))
         (rule "qeq_literals" (formula "129") (term "0,0"))
          (builtin "One Step Simplification" (formula "129"))
         (rule "inEqSimp_contradInEq0" (formula "127") (term "0") (ifseqformula "96"))
         (rule "inEqSimp_homoInEq1" (formula "127") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "127") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "127") (term "1,0,0,0"))
         (rule "mul_literals" (formula "127") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "127") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "127") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "127") (term "0,0,0"))
         (rule "add_literals" (formula "127") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "127") (term "1,0,0,0"))
         (rule "add_literals" (formula "127") (term "0,0,0"))
         (rule "leq_literals" (formula "127") (term "0,0"))
          (builtin "One Step Simplification" (formula "127"))
         (rule "inEqSimp_contradInEq0" (formula "128") (term "0") (ifseqformula "96"))
         (rule "inEqSimp_homoInEq1" (formula "128") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "128") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "128") (term "1,0,0,0"))
         (rule "mul_literals" (formula "128") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "128") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "128") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "128") (term "0,0,0"))
         (rule "add_literals" (formula "128") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "128") (term "1,0,0,0"))
         (rule "add_literals" (formula "128") (term "0,0,0"))
         (rule "leq_literals" (formula "128") (term "0,0"))
          (builtin "One Step Simplification" (formula "128"))
         (rule "pullOutSelect" (formula "127") (term "0") (inst "selectSK=arr_42"))
         (rule "simplifySelectOfAnonEQ" (formula "127") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "127"))
         (rule "applyEqReverse" (formula "128") (term "0") (ifseqformula "127"))
         (rule "hideAuxiliaryEq" (formula "127"))
         (rule "inEqSimp_exactShadow3" (formula "128") (ifseqformula "129"))
         (rule "mul_literals" (formula "128") (term "0,0"))
         (rule "add_zero_left" (formula "128") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "128"))
         (rule "mul_literals" (formula "128") (term "1"))
         (rule "allLeft" (formula "130") (inst "t=z_26"))
         (rule "replaceKnownSelect_taclet110_61" (formula "130") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_62" (formula "130") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "130") (inst "sk=z_39"))
         (rule "andLeft" (formula "130"))
         (rule "andLeft" (formula "130"))
         (rule "applyEq" (formula "130") (term "1,1") (ifseqformula "91"))
         (rule "inEqSimp_contradInEq1" (formula "130") (term "0,0") (ifseqformula "92"))
         (rule "qeq_literals" (formula "130") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "130"))
         (rule "inEqSimp_contradInEq0" (formula "131") (term "1,0") (ifseqformula "93"))
         (rule "inEqSimp_homoInEq1" (formula "131") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "131") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "131") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "131") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "131") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "131") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "131") (term "0,0,1,0"))
         (rule "add_literals" (formula "131") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "131") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "131") (term "0,0,1,0"))
         (rule "leq_literals" (formula "131") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "131"))
         (rule "inEqSimp_contradInEq0" (formula "132") (term "1,0") (ifseqformula "93"))
         (rule "inEqSimp_homoInEq1" (formula "132") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "132") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "132") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "132") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "132") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "132") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "132") (term "0,0,1,0"))
         (rule "add_literals" (formula "132") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "132") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "132") (term "0,0,1,0"))
         (rule "leq_literals" (formula "132") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "132"))
         (rule "inEqSimp_contradInEq0" (formula "130") (term "0") (ifseqformula "93"))
         (rule "inEqSimp_homoInEq1" (formula "130") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "130") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "130") (term "1,0,0,0"))
         (rule "mul_literals" (formula "130") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "130") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "130") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "130") (term "0,0,0"))
         (rule "add_literals" (formula "130") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "130") (term "1,0,0,0"))
         (rule "add_literals" (formula "130") (term "0,0,0"))
         (rule "leq_literals" (formula "130") (term "0,0"))
          (builtin "One Step Simplification" (formula "130"))
         (rule "inEqSimp_contradInEq1" (formula "131") (term "0") (ifseqformula "92"))
         (rule "qeq_literals" (formula "131") (term "0,0"))
          (builtin "One Step Simplification" (formula "131"))
         (rule "inEqSimp_contradInEq1" (formula "132") (term "0") (ifseqformula "92"))
         (rule "qeq_literals" (formula "132") (term "0,0"))
          (builtin "One Step Simplification" (formula "132"))
         (rule "pullOutSelect" (formula "130") (term "0") (inst "selectSK=arr_43"))
         (rule "simplifySelectOfAnonEQ" (formula "130") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "130"))
         (rule "applyEqReverse" (formula "131") (term "0") (ifseqformula "130"))
         (rule "hideAuxiliaryEq" (formula "130"))
         (rule "inEqSimp_exactShadow3" (formula "131") (ifseqformula "132"))
         (rule "mul_literals" (formula "131") (term "0,0"))
         (rule "add_zero_left" (formula "131") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "131"))
         (rule "mul_literals" (formula "131") (term "1"))
         (rule "allLeft" (formula "133") (inst "t=z_25"))
         (rule "replaceKnownSelect_taclet110_59" (formula "133") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_60" (formula "133") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "133") (inst "sk=z_40"))
         (rule "andLeft" (formula "133"))
         (rule "andLeft" (formula "133"))
         (rule "applyEq" (formula "133") (term "1,1") (ifseqformula "88"))
         (rule "inEqSimp_contradInEq0" (formula "135") (term "1,0") (ifseqformula "90"))
         (rule "inEqSimp_homoInEq1" (formula "135") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "135") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "135") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "135") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "135") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "135") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "135") (term "0,0,1,0"))
         (rule "add_literals" (formula "135") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "135") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "135") (term "0,0,1,0"))
         (rule "leq_literals" (formula "135") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "135"))
         (rule "inEqSimp_contradInEq0" (formula "134") (term "1,0") (ifseqformula "90"))
         (rule "inEqSimp_homoInEq1" (formula "134") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "134") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "134") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "134") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "134") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "134") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "134") (term "0,0,1,0"))
         (rule "add_literals" (formula "134") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "134") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "134") (term "0,0,1,0"))
         (rule "leq_literals" (formula "134") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "134"))
         (rule "inEqSimp_contradInEq0" (formula "133") (term "1,0") (ifseqformula "90"))
         (rule "inEqSimp_homoInEq1" (formula "133") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "133") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "133") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "133") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "133") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "133") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "133") (term "0,0,1,0"))
         (rule "add_literals" (formula "133") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "133") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "133") (term "0,0,1,0"))
         (rule "leq_literals" (formula "133") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "133"))
         (rule "inEqSimp_contradInEq1" (formula "135") (term "0") (ifseqformula "89"))
         (rule "qeq_literals" (formula "135") (term "0,0"))
          (builtin "One Step Simplification" (formula "135"))
         (rule "inEqSimp_contradInEq1" (formula "134") (term "0") (ifseqformula "89"))
         (rule "qeq_literals" (formula "134") (term "0,0"))
          (builtin "One Step Simplification" (formula "134"))
         (rule "inEqSimp_contradInEq1" (formula "133") (term "0") (ifseqformula "89"))
         (rule "qeq_literals" (formula "133") (term "0,0"))
          (builtin "One Step Simplification" (formula "133"))
         (rule "pullOutSelect" (formula "133") (term "0") (inst "selectSK=arr_44"))
         (rule "simplifySelectOfAnonEQ" (formula "133") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "133"))
         (rule "applyEqReverse" (formula "134") (term "0") (ifseqformula "133"))
         (rule "hideAuxiliaryEq" (formula "133"))
         (rule "inEqSimp_exactShadow3" (formula "134") (ifseqformula "135"))
         (rule "mul_literals" (formula "134") (term "0,0"))
         (rule "add_zero_left" (formula "134") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "134"))
         (rule "mul_literals" (formula "134") (term "1"))
         (rule "allLeft" (formula "136") (inst "t=z_24"))
         (rule "replaceKnownSelect_taclet110_57" (formula "136") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_58" (formula "136") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "136") (inst "sk=z_41"))
         (rule "andLeft" (formula "136"))
         (rule "andLeft" (formula "136"))
         (rule "applyEq" (formula "136") (term "1,1") (ifseqformula "85"))
         (rule "inEqSimp_contradInEq0" (formula "138") (term "1,0") (ifseqformula "87"))
         (rule "inEqSimp_homoInEq1" (formula "138") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "138") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "138") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "138") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "138") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "138") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "138") (term "0,0,1,0"))
         (rule "add_literals" (formula "138") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "138") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "138") (term "0,0,1,0"))
         (rule "leq_literals" (formula "138") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "138"))
         (rule "inEqSimp_contradInEq0" (formula "136") (term "1,0") (ifseqformula "87"))
         (rule "inEqSimp_homoInEq1" (formula "136") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "136") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "136") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "136") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "136") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "136") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "136") (term "0,0,1,0"))
         (rule "add_literals" (formula "136") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "136") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "136") (term "0,0,1,0"))
         (rule "leq_literals" (formula "136") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "136"))
         (rule "inEqSimp_contradInEq0" (formula "137") (term "1,0") (ifseqformula "87"))
         (rule "inEqSimp_homoInEq1" (formula "137") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "137") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "137") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "137") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "137") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "137") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "137") (term "0,0,1,0"))
         (rule "add_literals" (formula "137") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "137") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "137") (term "0,0,1,0"))
         (rule "leq_literals" (formula "137") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "137"))
         (rule "inEqSimp_contradInEq1" (formula "138") (term "0") (ifseqformula "86"))
         (rule "qeq_literals" (formula "138") (term "0,0"))
          (builtin "One Step Simplification" (formula "138"))
         (rule "inEqSimp_contradInEq1" (formula "137") (term "0") (ifseqformula "86"))
         (rule "qeq_literals" (formula "137") (term "0,0"))
          (builtin "One Step Simplification" (formula "137"))
         (rule "inEqSimp_contradInEq1" (formula "136") (term "0") (ifseqformula "86"))
         (rule "qeq_literals" (formula "136") (term "0,0"))
          (builtin "One Step Simplification" (formula "136"))
         (rule "pullOutSelect" (formula "136") (term "0") (inst "selectSK=arr_45"))
         (rule "simplifySelectOfAnonEQ" (formula "136") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "136"))
         (rule "applyEqReverse" (formula "137") (term "0") (ifseqformula "136"))
         (rule "hideAuxiliaryEq" (formula "136"))
         (rule "inEqSimp_exactShadow3" (formula "137") (ifseqformula "138"))
         (rule "mul_literals" (formula "137") (term "0,0"))
         (rule "add_zero_left" (formula "137") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "137"))
         (rule "mul_literals" (formula "137") (term "1"))
         (rule "allLeft" (formula "139") (inst "t=z_23"))
         (rule "replaceKnownSelect_taclet110_55" (formula "139") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_56" (formula "139") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "139") (inst "sk=z_42"))
         (rule "andLeft" (formula "139"))
         (rule "andLeft" (formula "139"))
         (rule "applyEq" (formula "139") (term "1,1") (ifseqformula "82"))
         (rule "inEqSimp_contradInEq0" (formula "141") (term "1,0") (ifseqformula "84"))
         (rule "inEqSimp_homoInEq1" (formula "141") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "141") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "141") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "141") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "141") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "141") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "141") (term "0,0,1,0"))
         (rule "add_literals" (formula "141") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "141") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "141") (term "0,0,1,0"))
         (rule "leq_literals" (formula "141") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "141"))
         (rule "inEqSimp_contradInEq1" (formula "140") (term "0,0") (ifseqformula "83"))
         (rule "qeq_literals" (formula "140") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "140"))
         (rule "inEqSimp_contradInEq1" (formula "139") (term "0,0") (ifseqformula "83"))
         (rule "qeq_literals" (formula "139") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "139"))
         (rule "inEqSimp_contradInEq1" (formula "141") (term "0") (ifseqformula "83"))
         (rule "qeq_literals" (formula "141") (term "0,0"))
          (builtin "One Step Simplification" (formula "141"))
         (rule "inEqSimp_contradInEq0" (formula "140") (term "0") (ifseqformula "84"))
         (rule "inEqSimp_homoInEq1" (formula "140") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "140") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "140") (term "1,0,0,0"))
         (rule "mul_literals" (formula "140") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "140") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "140") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "140") (term "0,0,0"))
         (rule "add_literals" (formula "140") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "140") (term "1,0,0,0"))
         (rule "add_literals" (formula "140") (term "0,0,0"))
         (rule "leq_literals" (formula "140") (term "0,0"))
          (builtin "One Step Simplification" (formula "140"))
         (rule "inEqSimp_contradInEq0" (formula "139") (term "0") (ifseqformula "84"))
         (rule "inEqSimp_homoInEq1" (formula "139") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "139") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "139") (term "1,0,0,0"))
         (rule "mul_literals" (formula "139") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "139") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "139") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "139") (term "0,0,0"))
         (rule "add_literals" (formula "139") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "139") (term "1,0,0,0"))
         (rule "add_literals" (formula "139") (term "0,0,0"))
         (rule "leq_literals" (formula "139") (term "0,0"))
          (builtin "One Step Simplification" (formula "139"))
         (rule "pullOutSelect" (formula "139") (term "0") (inst "selectSK=arr_46"))
         (rule "simplifySelectOfAnonEQ" (formula "139") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "139"))
         (rule "applyEqReverse" (formula "140") (term "0") (ifseqformula "139"))
         (rule "hideAuxiliaryEq" (formula "139"))
         (rule "inEqSimp_exactShadow3" (formula "140") (ifseqformula "141"))
         (rule "mul_literals" (formula "140") (term "0,0"))
         (rule "add_zero_left" (formula "140") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "140"))
         (rule "mul_literals" (formula "140") (term "1"))
         (rule "allLeft" (formula "142") (inst "t=z_22"))
         (rule "replaceKnownSelect_taclet110_53" (formula "142") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_54" (formula "142") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "142") (inst "sk=z_43"))
         (rule "andLeft" (formula "142"))
         (rule "andLeft" (formula "142"))
         (rule "applyEq" (formula "142") (term "1,1") (ifseqformula "79"))
         (rule "inEqSimp_contradInEq0" (formula "144") (term "1,0") (ifseqformula "81"))
         (rule "inEqSimp_homoInEq1" (formula "144") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "144") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "144") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "144") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "144") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "144") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "144") (term "0,0,1,0"))
         (rule "add_literals" (formula "144") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "144") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "144") (term "0,0,1,0"))
         (rule "leq_literals" (formula "144") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "144"))
         (rule "inEqSimp_contradInEq0" (formula "142") (term "1,0") (ifseqformula "81"))
         (rule "inEqSimp_homoInEq1" (formula "142") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "142") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "142") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "142") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "142") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "142") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "142") (term "0,0,1,0"))
         (rule "add_literals" (formula "142") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "142") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "142") (term "0,0,1,0"))
         (rule "leq_literals" (formula "142") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "142"))
         (rule "inEqSimp_contradInEq1" (formula "143") (term "0,0") (ifseqformula "80"))
         (rule "qeq_literals" (formula "143") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "143"))
         (rule "inEqSimp_contradInEq1" (formula "144") (term "0") (ifseqformula "80"))
         (rule "qeq_literals" (formula "144") (term "0,0"))
          (builtin "One Step Simplification" (formula "144"))
         (rule "inEqSimp_contradInEq0" (formula "143") (term "0") (ifseqformula "81"))
         (rule "inEqSimp_homoInEq1" (formula "143") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "143") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "143") (term "1,0,0,0"))
         (rule "mul_literals" (formula "143") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "143") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "143") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "143") (term "0,0,0"))
         (rule "add_literals" (formula "143") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "143") (term "1,0,0,0"))
         (rule "add_literals" (formula "143") (term "0,0,0"))
         (rule "leq_literals" (formula "143") (term "0,0"))
          (builtin "One Step Simplification" (formula "143"))
         (rule "inEqSimp_contradInEq1" (formula "142") (term "0") (ifseqformula "80"))
         (rule "qeq_literals" (formula "142") (term "0,0"))
          (builtin "One Step Simplification" (formula "142"))
         (rule "pullOutSelect" (formula "142") (term "0") (inst "selectSK=arr_47"))
         (rule "simplifySelectOfAnonEQ" (formula "142") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "142"))
         (rule "applyEqReverse" (formula "143") (term "0") (ifseqformula "142"))
         (rule "hideAuxiliaryEq" (formula "142"))
         (rule "inEqSimp_exactShadow3" (formula "143") (ifseqformula "144"))
         (rule "mul_literals" (formula "143") (term "0,0"))
         (rule "add_zero_left" (formula "143") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "143"))
         (rule "mul_literals" (formula "143") (term "1"))
         (rule "allLeft" (formula "145") (inst "t=z_43"))
         (rule "replaceKnownSelect_taclet110_95" (formula "145") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_96" (formula "145") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "145") (inst "sk=z_44"))
         (rule "andLeft" (formula "145"))
         (rule "andLeft" (formula "145"))
         (rule "applyEq" (formula "145") (term "1,1") (ifseqformula "142"))
         (rule "inEqSimp_contradInEq0" (formula "147") (term "1,0") (ifseqformula "144"))
         (rule "inEqSimp_homoInEq1" (formula "147") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "147") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "147") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "147") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "147") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "147") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "147") (term "0,0,1,0"))
         (rule "add_literals" (formula "147") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "147") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "147") (term "0,0,1,0"))
         (rule "leq_literals" (formula "147") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "147"))
         (rule "inEqSimp_contradInEq1" (formula "145") (term "0,0") (ifseqformula "143"))
         (rule "qeq_literals" (formula "145") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "145"))
         (rule "inEqSimp_contradInEq0" (formula "146") (term "1,0") (ifseqformula "144"))
         (rule "inEqSimp_homoInEq1" (formula "146") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "146") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "146") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "146") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "146") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "146") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "146") (term "0,0,1,0"))
         (rule "add_literals" (formula "146") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "146") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "146") (term "0,0,1,0"))
         (rule "leq_literals" (formula "146") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "146"))
         (rule "inEqSimp_contradInEq1" (formula "147") (term "0") (ifseqformula "143"))
         (rule "qeq_literals" (formula "147") (term "0,0"))
          (builtin "One Step Simplification" (formula "147"))
         (rule "inEqSimp_contradInEq1" (formula "146") (term "0") (ifseqformula "143"))
         (rule "qeq_literals" (formula "146") (term "0,0"))
          (builtin "One Step Simplification" (formula "146"))
         (rule "inEqSimp_contradInEq0" (formula "145") (term "0") (ifseqformula "144"))
         (rule "inEqSimp_homoInEq1" (formula "145") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "145") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "145") (term "1,0,0,0"))
         (rule "mul_literals" (formula "145") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "145") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "145") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "145") (term "0,0,0"))
         (rule "add_literals" (formula "145") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "145") (term "1,0,0,0"))
         (rule "add_literals" (formula "145") (term "0,0,0"))
         (rule "leq_literals" (formula "145") (term "0,0"))
          (builtin "One Step Simplification" (formula "145"))
         (rule "pullOutSelect" (formula "145") (term "0") (inst "selectSK=arr_48"))
         (rule "simplifySelectOfAnonEQ" (formula "145") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "145"))
         (rule "applyEqReverse" (formula "146") (term "0") (ifseqformula "145"))
         (rule "hideAuxiliaryEq" (formula "145"))
         (rule "inEqSimp_exactShadow3" (formula "146") (ifseqformula "147"))
         (rule "mul_literals" (formula "146") (term "0,0"))
         (rule "add_zero_left" (formula "146") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "146"))
         (rule "mul_literals" (formula "146") (term "1"))
         (rule "allLeft" (formula "148") (inst "t=z_42"))
         (rule "replaceKnownSelect_taclet110_93" (formula "148") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_94" (formula "148") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "148") (inst "sk=z_45"))
         (rule "andLeft" (formula "148"))
         (rule "andLeft" (formula "148"))
         (rule "applyEq" (formula "148") (term "1,1") (ifseqformula "139"))
         (rule "inEqSimp_contradInEq0" (formula "150") (term "1,0") (ifseqformula "141"))
         (rule "inEqSimp_homoInEq1" (formula "150") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "150") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "150") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "150") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "150") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "150") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "150") (term "0,0,1,0"))
         (rule "add_literals" (formula "150") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "150") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "150") (term "0,0,1,0"))
         (rule "leq_literals" (formula "150") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "150"))
         (rule "inEqSimp_contradInEq1" (formula "148") (term "0,0") (ifseqformula "140"))
         (rule "qeq_literals" (formula "148") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "148"))
         (rule "inEqSimp_contradInEq1" (formula "149") (term "0,0") (ifseqformula "140"))
         (rule "qeq_literals" (formula "149") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "149"))
         (rule "inEqSimp_contradInEq0" (formula "149") (term "0") (ifseqformula "141"))
         (rule "inEqSimp_homoInEq1" (formula "149") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "149") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "149") (term "1,0,0,0"))
         (rule "mul_literals" (formula "149") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "149") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "149") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "149") (term "0,0,0"))
         (rule "add_literals" (formula "149") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "149") (term "1,0,0,0"))
         (rule "add_literals" (formula "149") (term "0,0,0"))
         (rule "leq_literals" (formula "149") (term "0,0"))
          (builtin "One Step Simplification" (formula "149"))
         (rule "inEqSimp_contradInEq1" (formula "150") (term "0") (ifseqformula "140"))
         (rule "qeq_literals" (formula "150") (term "0,0"))
          (builtin "One Step Simplification" (formula "150"))
         (rule "inEqSimp_contradInEq0" (formula "148") (term "0") (ifseqformula "141"))
         (rule "inEqSimp_homoInEq1" (formula "148") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "148") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "148") (term "1,0,0,0"))
         (rule "mul_literals" (formula "148") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "148") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "148") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "148") (term "0,0,0"))
         (rule "add_literals" (formula "148") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "148") (term "1,0,0,0"))
         (rule "add_literals" (formula "148") (term "0,0,0"))
         (rule "leq_literals" (formula "148") (term "0,0"))
          (builtin "One Step Simplification" (formula "148"))
         (rule "pullOutSelect" (formula "148") (term "0") (inst "selectSK=arr_49"))
         (rule "simplifySelectOfAnonEQ" (formula "148") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "148"))
         (rule "applyEqReverse" (formula "149") (term "0") (ifseqformula "148"))
         (rule "hideAuxiliaryEq" (formula "148"))
         (rule "inEqSimp_exactShadow3" (formula "149") (ifseqformula "150"))
         (rule "mul_literals" (formula "149") (term "0,0"))
         (rule "add_zero_left" (formula "149") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "149"))
         (rule "mul_literals" (formula "149") (term "1"))
         (rule "allLeft" (formula "151") (inst "t=z_41"))
         (rule "replaceKnownSelect_taclet110_91" (formula "151") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_92" (formula "151") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "151") (inst "sk=z_46"))
         (rule "andLeft" (formula "151"))
         (rule "andLeft" (formula "151"))
         (rule "applyEq" (formula "151") (term "1,1") (ifseqformula "136"))
         (rule "inEqSimp_contradInEq1" (formula "153") (term "0,0") (ifseqformula "137"))
         (rule "qeq_literals" (formula "153") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "153"))
         (rule "inEqSimp_contradInEq0" (formula "151") (term "1,0") (ifseqformula "138"))
         (rule "inEqSimp_homoInEq1" (formula "151") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "151") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "151") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "151") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "151") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "151") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "151") (term "0,0,1,0"))
         (rule "add_literals" (formula "151") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "151") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "151") (term "0,0,1,0"))
         (rule "leq_literals" (formula "151") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "151"))
         (rule "inEqSimp_contradInEq1" (formula "152") (term "0,0") (ifseqformula "137"))
         (rule "qeq_literals" (formula "152") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "152"))
         (rule "inEqSimp_contradInEq0" (formula "153") (term "0") (ifseqformula "138"))
         (rule "inEqSimp_homoInEq1" (formula "153") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "153") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "153") (term "1,0,0,0"))
         (rule "mul_literals" (formula "153") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "153") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "153") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "153") (term "0,0,0"))
         (rule "add_literals" (formula "153") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "153") (term "1,0,0,0"))
         (rule "add_literals" (formula "153") (term "0,0,0"))
         (rule "leq_literals" (formula "153") (term "0,0"))
          (builtin "One Step Simplification" (formula "153"))
         (rule "inEqSimp_contradInEq0" (formula "152") (term "0") (ifseqformula "138"))
         (rule "inEqSimp_homoInEq1" (formula "152") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "152") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "152") (term "1,0,0,0"))
         (rule "mul_literals" (formula "152") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "152") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "152") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "152") (term "0,0,0"))
         (rule "add_literals" (formula "152") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "152") (term "1,0,0,0"))
         (rule "add_literals" (formula "152") (term "0,0,0"))
         (rule "leq_literals" (formula "152") (term "0,0"))
          (builtin "One Step Simplification" (formula "152"))
         (rule "inEqSimp_contradInEq1" (formula "151") (term "0") (ifseqformula "137"))
         (rule "qeq_literals" (formula "151") (term "0,0"))
          (builtin "One Step Simplification" (formula "151"))
         (rule "pullOutSelect" (formula "151") (term "0") (inst "selectSK=arr_50"))
         (rule "simplifySelectOfAnonEQ" (formula "151") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "151"))
         (rule "applyEqReverse" (formula "152") (term "0") (ifseqformula "151"))
         (rule "hideAuxiliaryEq" (formula "151"))
         (rule "inEqSimp_exactShadow3" (formula "152") (ifseqformula "153"))
         (rule "mul_literals" (formula "152") (term "0,0"))
         (rule "add_zero_left" (formula "152") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "152"))
         (rule "mul_literals" (formula "152") (term "1"))
         (rule "allLeft" (formula "154") (inst "t=z_40"))
         (rule "replaceKnownSelect_taclet110_89" (formula "154") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_90" (formula "154") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "154") (inst "sk=z_47"))
         (rule "andLeft" (formula "154"))
         (rule "andLeft" (formula "154"))
         (rule "applyEq" (formula "154") (term "1,1") (ifseqformula "133"))
         (rule "inEqSimp_contradInEq0" (formula "156") (term "1,0") (ifseqformula "135"))
         (rule "inEqSimp_homoInEq1" (formula "156") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "156") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "156") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "156") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "156") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "156") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "156") (term "0,0,1,0"))
         (rule "add_literals" (formula "156") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "156") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "156") (term "0,0,1,0"))
         (rule "leq_literals" (formula "156") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "156"))
         (rule "inEqSimp_contradInEq0" (formula "155") (term "1,0") (ifseqformula "135"))
         (rule "inEqSimp_homoInEq1" (formula "155") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "155") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "155") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "155") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "155") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "155") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "155") (term "0,0,1,0"))
         (rule "add_literals" (formula "155") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "155") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "155") (term "0,0,1,0"))
         (rule "leq_literals" (formula "155") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "155"))
         (rule "inEqSimp_contradInEq0" (formula "154") (term "1,0") (ifseqformula "135"))
         (rule "inEqSimp_homoInEq1" (formula "154") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "154") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "154") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "154") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "154") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "154") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "154") (term "0,0,1,0"))
         (rule "add_literals" (formula "154") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "154") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "154") (term "0,0,1,0"))
         (rule "leq_literals" (formula "154") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "154"))
         (rule "inEqSimp_contradInEq1" (formula "156") (term "0") (ifseqformula "134"))
         (rule "qeq_literals" (formula "156") (term "0,0"))
          (builtin "One Step Simplification" (formula "156"))
         (rule "inEqSimp_contradInEq1" (formula "155") (term "0") (ifseqformula "134"))
         (rule "qeq_literals" (formula "155") (term "0,0"))
          (builtin "One Step Simplification" (formula "155"))
         (rule "inEqSimp_contradInEq1" (formula "154") (term "0") (ifseqformula "134"))
         (rule "qeq_literals" (formula "154") (term "0,0"))
          (builtin "One Step Simplification" (formula "154"))
         (rule "pullOutSelect" (formula "154") (term "0") (inst "selectSK=arr_51"))
         (rule "simplifySelectOfAnonEQ" (formula "154") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "154"))
         (rule "applyEqReverse" (formula "155") (term "0") (ifseqformula "154"))
         (rule "hideAuxiliaryEq" (formula "154"))
         (rule "inEqSimp_exactShadow3" (formula "155") (ifseqformula "156"))
         (rule "mul_literals" (formula "155") (term "0,0"))
         (rule "add_zero_left" (formula "155") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "155"))
         (rule "mul_literals" (formula "155") (term "1"))
         (rule "allLeft" (formula "157") (inst "t=z_39"))
         (rule "replaceKnownSelect_taclet110_87" (formula "157") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_88" (formula "157") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "157") (inst "sk=z_48"))
         (rule "andLeft" (formula "157"))
         (rule "andLeft" (formula "157"))
         (rule "applyEq" (formula "157") (term "1,1") (ifseqformula "130"))
         (rule "inEqSimp_contradInEq1" (formula "158") (term "0,0") (ifseqformula "131"))
         (rule "qeq_literals" (formula "158") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "158"))
         (rule "inEqSimp_contradInEq0" (formula "157") (term "1,0") (ifseqformula "132"))
         (rule "inEqSimp_homoInEq1" (formula "157") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "157") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "157") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "157") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "157") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "157") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "157") (term "0,0,1,0"))
         (rule "add_literals" (formula "157") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "157") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "157") (term "0,0,1,0"))
         (rule "leq_literals" (formula "157") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "157"))
         (rule "inEqSimp_contradInEq1" (formula "159") (term "0,0") (ifseqformula "131"))
         (rule "qeq_literals" (formula "159") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "159"))
         (rule "inEqSimp_contradInEq0" (formula "158") (term "0") (ifseqformula "132"))
         (rule "inEqSimp_homoInEq1" (formula "158") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "158") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "158") (term "1,0,0,0"))
         (rule "mul_literals" (formula "158") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "158") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "158") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "158") (term "0,0,0"))
         (rule "add_literals" (formula "158") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "158") (term "1,0,0,0"))
         (rule "add_literals" (formula "158") (term "0,0,0"))
         (rule "leq_literals" (formula "158") (term "0,0"))
          (builtin "One Step Simplification" (formula "158"))
         (rule "inEqSimp_contradInEq0" (formula "159") (term "0") (ifseqformula "132"))
         (rule "inEqSimp_homoInEq1" (formula "159") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "159") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "159") (term "1,0,0,0"))
         (rule "mul_literals" (formula "159") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "159") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "159") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "159") (term "0,0,0"))
         (rule "add_literals" (formula "159") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "159") (term "1,0,0,0"))
         (rule "add_literals" (formula "159") (term "0,0,0"))
         (rule "leq_literals" (formula "159") (term "0,0"))
          (builtin "One Step Simplification" (formula "159"))
         (rule "inEqSimp_contradInEq1" (formula "157") (term "0") (ifseqformula "131"))
         (rule "qeq_literals" (formula "157") (term "0,0"))
          (builtin "One Step Simplification" (formula "157"))
         (rule "pullOutSelect" (formula "157") (term "0") (inst "selectSK=arr_52"))
         (rule "simplifySelectOfAnonEQ" (formula "157") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "157"))
         (rule "applyEqReverse" (formula "158") (term "0") (ifseqformula "157"))
         (rule "hideAuxiliaryEq" (formula "157"))
         (rule "inEqSimp_exactShadow3" (formula "158") (ifseqformula "159"))
         (rule "mul_literals" (formula "158") (term "0,0"))
         (rule "add_zero_left" (formula "158") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "158"))
         (rule "mul_literals" (formula "158") (term "1"))
         (rule "allLeft" (formula "160") (inst "t=z_38"))
         (rule "replaceKnownSelect_taclet110_85" (formula "160") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_86" (formula "160") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "160") (inst "sk=z_49"))
         (rule "andLeft" (formula "160"))
         (rule "andLeft" (formula "160"))
         (rule "applyEq" (formula "160") (term "1,1") (ifseqformula "127"))
         (rule "inEqSimp_contradInEq0" (formula "162") (term "1,0") (ifseqformula "129"))
         (rule "inEqSimp_homoInEq1" (formula "162") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "162") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "162") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "162") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "162") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "162") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "162") (term "0,0,1,0"))
         (rule "add_literals" (formula "162") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "162") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "162") (term "0,0,1,0"))
         (rule "leq_literals" (formula "162") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "162"))
         (rule "inEqSimp_contradInEq1" (formula "160") (term "0,0") (ifseqformula "128"))
         (rule "qeq_literals" (formula "160") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "160"))
         (rule "inEqSimp_contradInEq1" (formula "161") (term "0,0") (ifseqformula "128"))
         (rule "qeq_literals" (formula "161") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "161"))
         (rule "inEqSimp_contradInEq1" (formula "162") (term "0") (ifseqformula "128"))
         (rule "qeq_literals" (formula "162") (term "0,0"))
          (builtin "One Step Simplification" (formula "162"))
         (rule "inEqSimp_contradInEq0" (formula "161") (term "0") (ifseqformula "129"))
         (rule "inEqSimp_homoInEq1" (formula "161") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "161") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "161") (term "1,0,0,0"))
         (rule "mul_literals" (formula "161") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "161") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "161") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "161") (term "0,0,0"))
         (rule "add_literals" (formula "161") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "161") (term "1,0,0,0"))
         (rule "add_literals" (formula "161") (term "0,0,0"))
         (rule "leq_literals" (formula "161") (term "0,0"))
          (builtin "One Step Simplification" (formula "161"))
         (rule "inEqSimp_contradInEq0" (formula "160") (term "0") (ifseqformula "129"))
         (rule "inEqSimp_homoInEq1" (formula "160") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "160") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "160") (term "1,0,0,0"))
         (rule "mul_literals" (formula "160") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "160") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "160") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "160") (term "0,0,0"))
         (rule "add_literals" (formula "160") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "160") (term "1,0,0,0"))
         (rule "add_literals" (formula "160") (term "0,0,0"))
         (rule "leq_literals" (formula "160") (term "0,0"))
          (builtin "One Step Simplification" (formula "160"))
         (rule "pullOutSelect" (formula "160") (term "0") (inst "selectSK=arr_53"))
         (rule "simplifySelectOfAnonEQ" (formula "160") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "160"))
         (rule "applyEqReverse" (formula "161") (term "0") (ifseqformula "160"))
         (rule "hideAuxiliaryEq" (formula "160"))
         (rule "inEqSimp_exactShadow3" (formula "161") (ifseqformula "162"))
         (rule "mul_literals" (formula "161") (term "0,0"))
         (rule "add_zero_left" (formula "161") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "161"))
         (rule "mul_literals" (formula "161") (term "1"))
         (rule "allLeft" (formula "163") (inst "t=z_37"))
         (rule "replaceKnownSelect_taclet110_83" (formula "163") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_84" (formula "163") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "163") (inst "sk=z_50"))
         (rule "andLeft" (formula "163"))
         (rule "andLeft" (formula "163"))
         (rule "applyEq" (formula "163") (term "1,1") (ifseqformula "124"))
         (rule "inEqSimp_contradInEq1" (formula "164") (term "0,0") (ifseqformula "125"))
         (rule "qeq_literals" (formula "164") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "164"))
         (rule "inEqSimp_contradInEq0" (formula "165") (term "1,0") (ifseqformula "126"))
         (rule "inEqSimp_homoInEq1" (formula "165") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "165") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "165") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "165") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "165") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "165") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "165") (term "0,0,1,0"))
         (rule "add_literals" (formula "165") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "165") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "165") (term "0,0,1,0"))
         (rule "leq_literals" (formula "165") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "165"))
         (rule "inEqSimp_contradInEq0" (formula "163") (term "1,0") (ifseqformula "126"))
         (rule "inEqSimp_homoInEq1" (formula "163") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "163") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "163") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "163") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "163") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "163") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "163") (term "0,0,1,0"))
         (rule "add_literals" (formula "163") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "163") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "163") (term "0,0,1,0"))
         (rule "leq_literals" (formula "163") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "163"))
         (rule "inEqSimp_contradInEq1" (formula "163") (term "0") (ifseqformula "125"))
         (rule "qeq_literals" (formula "163") (term "0,0"))
          (builtin "One Step Simplification" (formula "163"))
         (rule "inEqSimp_contradInEq0" (formula "164") (term "0") (ifseqformula "126"))
         (rule "inEqSimp_homoInEq1" (formula "164") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "164") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "164") (term "1,0,0,0"))
         (rule "mul_literals" (formula "164") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "164") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "164") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "164") (term "0,0,0"))
         (rule "add_literals" (formula "164") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "164") (term "1,0,0,0"))
         (rule "add_literals" (formula "164") (term "0,0,0"))
         (rule "leq_literals" (formula "164") (term "0,0"))
          (builtin "One Step Simplification" (formula "164"))
         (rule "inEqSimp_contradInEq1" (formula "165") (term "0") (ifseqformula "125"))
         (rule "qeq_literals" (formula "165") (term "0,0"))
          (builtin "One Step Simplification" (formula "165"))
         (rule "pullOutSelect" (formula "163") (term "0") (inst "selectSK=arr_54"))
         (rule "simplifySelectOfAnonEQ" (formula "163") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "163"))
         (rule "applyEqReverse" (formula "164") (term "0") (ifseqformula "163"))
         (rule "hideAuxiliaryEq" (formula "163"))
         (rule "inEqSimp_exactShadow3" (formula "164") (ifseqformula "165"))
         (rule "mul_literals" (formula "164") (term "0,0"))
         (rule "add_zero_left" (formula "164") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "164"))
         (rule "mul_literals" (formula "164") (term "1"))
         (rule "allLeft" (formula "166") (inst "t=z_36"))
         (rule "replaceKnownSelect_taclet110_81" (formula "166") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_82" (formula "166") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "166") (inst "sk=z_51"))
         (rule "andLeft" (formula "166"))
         (rule "andLeft" (formula "166"))
         (rule "applyEq" (formula "166") (term "1,1") (ifseqformula "121"))
         (rule "inEqSimp_contradInEq1" (formula "168") (term "0,0") (ifseqformula "122"))
         (rule "qeq_literals" (formula "168") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "168"))
         (rule "inEqSimp_contradInEq0" (formula "167") (term "1,0") (ifseqformula "123"))
         (rule "inEqSimp_homoInEq1" (formula "167") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "167") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "167") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "167") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "167") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "167") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "167") (term "0,0,1,0"))
         (rule "add_literals" (formula "167") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "167") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "167") (term "0,0,1,0"))
         (rule "leq_literals" (formula "167") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "167"))
         (rule "inEqSimp_contradInEq1" (formula "166") (term "0,0") (ifseqformula "122"))
         (rule "qeq_literals" (formula "166") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "166"))
         (rule "inEqSimp_contradInEq0" (formula "168") (term "0") (ifseqformula "123"))
         (rule "inEqSimp_homoInEq1" (formula "168") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "168") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "168") (term "1,0,0,0"))
         (rule "mul_literals" (formula "168") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "168") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "168") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "168") (term "0,0,0"))
         (rule "add_literals" (formula "168") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "168") (term "1,0,0,0"))
         (rule "add_literals" (formula "168") (term "0,0,0"))
         (rule "leq_literals" (formula "168") (term "0,0"))
          (builtin "One Step Simplification" (formula "168"))
         (rule "inEqSimp_contradInEq0" (formula "166") (term "0") (ifseqformula "123"))
         (rule "inEqSimp_homoInEq1" (formula "166") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "166") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "166") (term "1,0,0,0"))
         (rule "mul_literals" (formula "166") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "166") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "166") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "166") (term "0,0,0"))
         (rule "add_literals" (formula "166") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "166") (term "1,0,0,0"))
         (rule "add_literals" (formula "166") (term "0,0,0"))
         (rule "leq_literals" (formula "166") (term "0,0"))
          (builtin "One Step Simplification" (formula "166"))
         (rule "inEqSimp_contradInEq1" (formula "167") (term "0") (ifseqformula "122"))
         (rule "qeq_literals" (formula "167") (term "0,0"))
          (builtin "One Step Simplification" (formula "167"))
         (rule "pullOutSelect" (formula "166") (term "0") (inst "selectSK=arr_55"))
         (rule "simplifySelectOfAnonEQ" (formula "166") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "166"))
         (rule "applyEqReverse" (formula "167") (term "0") (ifseqformula "166"))
         (rule "hideAuxiliaryEq" (formula "166"))
         (rule "inEqSimp_exactShadow3" (formula "167") (ifseqformula "168"))
         (rule "mul_literals" (formula "167") (term "0,0"))
         (rule "add_zero_left" (formula "167") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "167"))
         (rule "mul_literals" (formula "167") (term "1"))
         (rule "allLeft" (formula "169") (inst "t=z_35"))
         (rule "replaceKnownSelect_taclet110_79" (formula "169") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_80" (formula "169") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "169") (inst "sk=z_52"))
         (rule "andLeft" (formula "169"))
         (rule "andLeft" (formula "169"))
         (rule "applyEq" (formula "169") (term "1,1") (ifseqformula "118"))
         (rule "inEqSimp_contradInEq0" (formula "171") (term "1,0") (ifseqformula "120"))
         (rule "inEqSimp_homoInEq1" (formula "171") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "171") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "171") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "171") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "171") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "171") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "171") (term "0,0,1,0"))
         (rule "add_literals" (formula "171") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "171") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "171") (term "0,0,1,0"))
         (rule "leq_literals" (formula "171") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "171"))
         (rule "inEqSimp_contradInEq1" (formula "169") (term "0,0") (ifseqformula "119"))
         (rule "qeq_literals" (formula "169") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "169"))
         (rule "inEqSimp_contradInEq0" (formula "170") (term "1,0") (ifseqformula "120"))
         (rule "inEqSimp_homoInEq1" (formula "170") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "170") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "170") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "170") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "170") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "170") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "170") (term "0,0,1,0"))
         (rule "add_literals" (formula "170") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "170") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "170") (term "0,0,1,0"))
         (rule "leq_literals" (formula "170") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "170"))
         (rule "inEqSimp_contradInEq1" (formula "171") (term "0") (ifseqformula "119"))
         (rule "qeq_literals" (formula "171") (term "0,0"))
          (builtin "One Step Simplification" (formula "171"))
         (rule "inEqSimp_contradInEq1" (formula "170") (term "0") (ifseqformula "119"))
         (rule "qeq_literals" (formula "170") (term "0,0"))
          (builtin "One Step Simplification" (formula "170"))
         (rule "inEqSimp_contradInEq0" (formula "169") (term "0") (ifseqformula "120"))
         (rule "inEqSimp_homoInEq1" (formula "169") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "169") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "169") (term "1,0,0,0"))
         (rule "mul_literals" (formula "169") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "169") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "169") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "169") (term "0,0,0"))
         (rule "add_literals" (formula "169") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "169") (term "1,0,0,0"))
         (rule "add_literals" (formula "169") (term "0,0,0"))
         (rule "leq_literals" (formula "169") (term "0,0"))
          (builtin "One Step Simplification" (formula "169"))
         (rule "pullOutSelect" (formula "169") (term "0") (inst "selectSK=arr_56"))
         (rule "simplifySelectOfAnonEQ" (formula "169") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "169"))
         (rule "applyEqReverse" (formula "170") (term "0") (ifseqformula "169"))
         (rule "hideAuxiliaryEq" (formula "169"))
         (rule "inEqSimp_exactShadow3" (formula "170") (ifseqformula "171"))
         (rule "mul_literals" (formula "170") (term "0,0"))
         (rule "add_zero_left" (formula "170") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "170"))
         (rule "mul_literals" (formula "170") (term "1"))
         (rule "allLeft" (formula "172") (inst "t=z_34"))
         (rule "replaceKnownSelect_taclet110_77" (formula "172") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_78" (formula "172") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "172") (inst "sk=z_53"))
         (rule "andLeft" (formula "172"))
         (rule "andLeft" (formula "172"))
         (rule "applyEq" (formula "172") (term "1,1") (ifseqformula "115"))
         (rule "inEqSimp_contradInEq0" (formula "172") (term "1,0") (ifseqformula "117"))
         (rule "inEqSimp_homoInEq1" (formula "172") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "172") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "172") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "172") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "172") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "172") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "172") (term "0,0,1,0"))
         (rule "add_literals" (formula "172") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "172") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "172") (term "0,0,1,0"))
         (rule "leq_literals" (formula "172") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "172"))
         (rule "inEqSimp_contradInEq1" (formula "173") (term "0,0") (ifseqformula "116"))
         (rule "qeq_literals" (formula "173") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "173"))
         (rule "inEqSimp_contradInEq0" (formula "174") (term "1,0") (ifseqformula "117"))
         (rule "inEqSimp_homoInEq1" (formula "174") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "174") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "174") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "174") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "174") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "174") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "174") (term "0,0,1,0"))
         (rule "add_literals" (formula "174") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "174") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "174") (term "0,0,1,0"))
         (rule "leq_literals" (formula "174") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "174"))
         (rule "inEqSimp_contradInEq1" (formula "172") (term "0") (ifseqformula "116"))
         (rule "qeq_literals" (formula "172") (term "0,0"))
          (builtin "One Step Simplification" (formula "172"))
         (rule "inEqSimp_contradInEq1" (formula "174") (term "0") (ifseqformula "116"))
         (rule "qeq_literals" (formula "174") (term "0,0"))
          (builtin "One Step Simplification" (formula "174"))
         (rule "inEqSimp_contradInEq0" (formula "173") (term "0") (ifseqformula "117"))
         (rule "inEqSimp_homoInEq1" (formula "173") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "173") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "173") (term "1,0,0,0"))
         (rule "mul_literals" (formula "173") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "173") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "173") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "173") (term "0,0,0"))
         (rule "add_literals" (formula "173") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "173") (term "1,0,0,0"))
         (rule "add_literals" (formula "173") (term "0,0,0"))
         (rule "leq_literals" (formula "173") (term "0,0"))
          (builtin "One Step Simplification" (formula "173"))
         (rule "pullOutSelect" (formula "172") (term "0") (inst "selectSK=arr_57"))
         (rule "simplifySelectOfAnonEQ" (formula "172") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "172"))
         (rule "applyEqReverse" (formula "173") (term "0") (ifseqformula "172"))
         (rule "hideAuxiliaryEq" (formula "172"))
         (rule "inEqSimp_exactShadow3" (formula "173") (ifseqformula "174"))
         (rule "mul_literals" (formula "173") (term "0,0"))
         (rule "add_zero_left" (formula "173") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "173"))
         (rule "mul_literals" (formula "173") (term "1"))
         (rule "allLeft" (formula "175") (inst "t=z_33"))
         (rule "replaceKnownSelect_taclet110_75" (formula "175") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_76" (formula "175") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "175") (inst "sk=z_54"))
         (rule "andLeft" (formula "175"))
         (rule "andLeft" (formula "175"))
         (rule "applyEq" (formula "175") (term "1,1") (ifseqformula "112"))
         (rule "inEqSimp_contradInEq1" (formula "175") (term "0,0") (ifseqformula "113"))
         (rule "qeq_literals" (formula "175") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "175"))
         (rule "inEqSimp_contradInEq1" (formula "176") (term "0,0") (ifseqformula "113"))
         (rule "qeq_literals" (formula "176") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "176"))
         (rule "inEqSimp_contradInEq0" (formula "177") (term "1,0") (ifseqformula "114"))
         (rule "inEqSimp_homoInEq1" (formula "177") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "177") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "177") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "177") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "177") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "177") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "177") (term "0,0,1,0"))
         (rule "add_literals" (formula "177") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "177") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "177") (term "0,0,1,0"))
         (rule "leq_literals" (formula "177") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "177"))
         (rule "inEqSimp_contradInEq0" (formula "175") (term "0") (ifseqformula "114"))
         (rule "inEqSimp_homoInEq1" (formula "175") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "175") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "175") (term "1,0,0,0"))
         (rule "mul_literals" (formula "175") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "175") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "175") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "175") (term "0,0,0"))
         (rule "add_literals" (formula "175") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "175") (term "1,0,0,0"))
         (rule "add_literals" (formula "175") (term "0,0,0"))
         (rule "leq_literals" (formula "175") (term "0,0"))
          (builtin "One Step Simplification" (formula "175"))
         (rule "inEqSimp_contradInEq1" (formula "177") (term "0") (ifseqformula "113"))
         (rule "qeq_literals" (formula "177") (term "0,0"))
          (builtin "One Step Simplification" (formula "177"))
         (rule "inEqSimp_contradInEq0" (formula "176") (term "0") (ifseqformula "114"))
         (rule "inEqSimp_homoInEq1" (formula "176") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "176") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "176") (term "1,0,0,0"))
         (rule "mul_literals" (formula "176") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "176") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "176") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "176") (term "0,0,0"))
         (rule "add_literals" (formula "176") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "176") (term "1,0,0,0"))
         (rule "add_literals" (formula "176") (term "0,0,0"))
         (rule "leq_literals" (formula "176") (term "0,0"))
          (builtin "One Step Simplification" (formula "176"))
         (rule "pullOutSelect" (formula "175") (term "0") (inst "selectSK=arr_58"))
         (rule "simplifySelectOfAnonEQ" (formula "175") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "175"))
         (rule "applyEqReverse" (formula "176") (term "0") (ifseqformula "175"))
         (rule "hideAuxiliaryEq" (formula "175"))
         (rule "inEqSimp_exactShadow3" (formula "176") (ifseqformula "177"))
         (rule "mul_literals" (formula "176") (term "0,0"))
         (rule "add_zero_left" (formula "176") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "176"))
         (rule "mul_literals" (formula "176") (term "1"))
         (rule "allLeft" (formula "178") (inst "t=z_54"))
         (rule "replaceKnownSelect_taclet110_117" (formula "178") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_118" (formula "178") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "178") (inst "sk=z_55"))
         (rule "andLeft" (formula "178"))
         (rule "andLeft" (formula "178"))
         (rule "applyEq" (formula "178") (term "1,1") (ifseqformula "175"))
         (rule "inEqSimp_contradInEq1" (formula "179") (term "0,0") (ifseqformula "176"))
         (rule "qeq_literals" (formula "179") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "179"))
         (rule "inEqSimp_contradInEq0" (formula "178") (term "1,0") (ifseqformula "177"))
         (rule "inEqSimp_homoInEq1" (formula "178") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "178") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "178") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "178") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "178") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "178") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "178") (term "0,0,1,0"))
         (rule "add_literals" (formula "178") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "178") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "178") (term "0,0,1,0"))
         (rule "leq_literals" (formula "178") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "178"))
         (rule "inEqSimp_contradInEq0" (formula "180") (term "1,0") (ifseqformula "177"))
         (rule "inEqSimp_homoInEq1" (formula "180") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "180") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "180") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "180") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "180") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "180") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "180") (term "0,0,1,0"))
         (rule "add_literals" (formula "180") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "180") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "180") (term "0,0,1,0"))
         (rule "leq_literals" (formula "180") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "180"))
         (rule "inEqSimp_contradInEq0" (formula "179") (term "0") (ifseqformula "177"))
         (rule "inEqSimp_homoInEq1" (formula "179") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "179") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "179") (term "1,0,0,0"))
         (rule "mul_literals" (formula "179") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "179") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "179") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "179") (term "0,0,0"))
         (rule "add_literals" (formula "179") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "179") (term "1,0,0,0"))
         (rule "add_literals" (formula "179") (term "0,0,0"))
         (rule "leq_literals" (formula "179") (term "0,0"))
          (builtin "One Step Simplification" (formula "179"))
         (rule "inEqSimp_contradInEq1" (formula "180") (term "0") (ifseqformula "176"))
         (rule "qeq_literals" (formula "180") (term "0,0"))
          (builtin "One Step Simplification" (formula "180"))
         (rule "inEqSimp_contradInEq1" (formula "178") (term "0") (ifseqformula "176"))
         (rule "qeq_literals" (formula "178") (term "0,0"))
          (builtin "One Step Simplification" (formula "178"))
         (rule "pullOutSelect" (formula "178") (term "0") (inst "selectSK=arr_59"))
         (rule "simplifySelectOfAnonEQ" (formula "178") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "178"))
         (rule "applyEqReverse" (formula "179") (term "0") (ifseqformula "178"))
         (rule "hideAuxiliaryEq" (formula "178"))
         (rule "inEqSimp_exactShadow3" (formula "179") (ifseqformula "180"))
         (rule "mul_literals" (formula "179") (term "0,0"))
         (rule "add_zero_left" (formula "179") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "179"))
         (rule "mul_literals" (formula "179") (term "1"))
         (rule "allLeft" (formula "181") (inst "t=z_53"))
         (rule "replaceKnownSelect_taclet110_115" (formula "181") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_116" (formula "181") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "181") (inst "sk=z_56"))
         (rule "andLeft" (formula "181"))
         (rule "andLeft" (formula "181"))
         (rule "applyEq" (formula "181") (term "1,1") (ifseqformula "172"))
         (rule "inEqSimp_contradInEq0" (formula "183") (term "1,0") (ifseqformula "174"))
         (rule "inEqSimp_homoInEq1" (formula "183") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "183") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "183") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "183") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "183") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "183") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "183") (term "0,0,1,0"))
         (rule "add_literals" (formula "183") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "183") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "183") (term "0,0,1,0"))
         (rule "leq_literals" (formula "183") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "183"))
         (rule "inEqSimp_contradInEq0" (formula "181") (term "1,0") (ifseqformula "174"))
         (rule "inEqSimp_homoInEq1" (formula "181") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "181") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "181") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "181") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "181") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "181") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "181") (term "0,0,1,0"))
         (rule "add_literals" (formula "181") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "181") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "181") (term "0,0,1,0"))
         (rule "leq_literals" (formula "181") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "181"))
         (rule "inEqSimp_contradInEq0" (formula "182") (term "1,0") (ifseqformula "174"))
         (rule "inEqSimp_homoInEq1" (formula "182") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "182") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "182") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "182") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "182") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "182") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "182") (term "0,0,1,0"))
         (rule "add_literals" (formula "182") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "182") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "182") (term "0,0,1,0"))
         (rule "leq_literals" (formula "182") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "182"))
         (rule "inEqSimp_contradInEq1" (formula "182") (term "0") (ifseqformula "173"))
         (rule "qeq_literals" (formula "182") (term "0,0"))
          (builtin "One Step Simplification" (formula "182"))
         (rule "inEqSimp_contradInEq1" (formula "183") (term "0") (ifseqformula "173"))
         (rule "qeq_literals" (formula "183") (term "0,0"))
          (builtin "One Step Simplification" (formula "183"))
         (rule "inEqSimp_contradInEq1" (formula "181") (term "0") (ifseqformula "173"))
         (rule "qeq_literals" (formula "181") (term "0,0"))
          (builtin "One Step Simplification" (formula "181"))
         (rule "pullOutSelect" (formula "181") (term "0") (inst "selectSK=arr_60"))
         (rule "simplifySelectOfAnonEQ" (formula "181") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "181"))
         (rule "applyEqReverse" (formula "182") (term "0") (ifseqformula "181"))
         (rule "hideAuxiliaryEq" (formula "181"))
         (rule "inEqSimp_exactShadow3" (formula "182") (ifseqformula "183"))
         (rule "mul_literals" (formula "182") (term "0,0"))
         (rule "add_zero_left" (formula "182") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "182"))
         (rule "mul_literals" (formula "182") (term "1"))
         (rule "allLeft" (formula "184") (inst "t=z_52"))
         (rule "replaceKnownSelect_taclet110_113" (formula "184") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_114" (formula "184") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "184") (inst "sk=z_57"))
         (rule "andLeft" (formula "184"))
         (rule "andLeft" (formula "184"))
         (rule "applyEq" (formula "184") (term "1,1") (ifseqformula "169"))
         (rule "inEqSimp_contradInEq1" (formula "186") (term "0,0") (ifseqformula "170"))
         (rule "qeq_literals" (formula "186") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "186"))
         (rule "inEqSimp_contradInEq1" (formula "185") (term "0,0") (ifseqformula "170"))
         (rule "qeq_literals" (formula "185") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "185"))
         (rule "inEqSimp_contradInEq1" (formula "184") (term "0,0") (ifseqformula "170"))
         (rule "qeq_literals" (formula "184") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "184"))
         (rule "inEqSimp_contradInEq0" (formula "185") (term "0") (ifseqformula "171"))
         (rule "inEqSimp_homoInEq1" (formula "185") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "185") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "185") (term "1,0,0,0"))
         (rule "mul_literals" (formula "185") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "185") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "185") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "185") (term "0,0,0"))
         (rule "add_literals" (formula "185") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "185") (term "1,0,0,0"))
         (rule "add_literals" (formula "185") (term "0,0,0"))
         (rule "leq_literals" (formula "185") (term "0,0"))
          (builtin "One Step Simplification" (formula "185"))
         (rule "inEqSimp_contradInEq0" (formula "186") (term "0") (ifseqformula "171"))
         (rule "inEqSimp_homoInEq1" (formula "186") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "186") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "186") (term "1,0,0,0"))
         (rule "mul_literals" (formula "186") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "186") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "186") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "186") (term "0,0,0"))
         (rule "add_literals" (formula "186") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "186") (term "1,0,0,0"))
         (rule "add_literals" (formula "186") (term "0,0,0"))
         (rule "leq_literals" (formula "186") (term "0,0"))
          (builtin "One Step Simplification" (formula "186"))
         (rule "inEqSimp_contradInEq0" (formula "184") (term "0") (ifseqformula "171"))
         (rule "inEqSimp_homoInEq1" (formula "184") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "184") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "184") (term "1,0,0,0"))
         (rule "mul_literals" (formula "184") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "184") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "184") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "184") (term "0,0,0"))
         (rule "add_literals" (formula "184") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "184") (term "1,0,0,0"))
         (rule "add_literals" (formula "184") (term "0,0,0"))
         (rule "leq_literals" (formula "184") (term "0,0"))
          (builtin "One Step Simplification" (formula "184"))
         (rule "pullOutSelect" (formula "184") (term "0") (inst "selectSK=arr_61"))
         (rule "simplifySelectOfAnonEQ" (formula "184") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "184"))
         (rule "applyEqReverse" (formula "185") (term "0") (ifseqformula "184"))
         (rule "hideAuxiliaryEq" (formula "184"))
         (rule "inEqSimp_exactShadow3" (formula "185") (ifseqformula "186"))
         (rule "mul_literals" (formula "185") (term "0,0"))
         (rule "add_zero_left" (formula "185") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "185"))
         (rule "mul_literals" (formula "185") (term "1"))
         (rule "allLeft" (formula "187") (inst "t=z_51"))
         (rule "replaceKnownSelect_taclet110_111" (formula "187") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_112" (formula "187") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "187") (inst "sk=z_58"))
         (rule "andLeft" (formula "187"))
         (rule "andLeft" (formula "187"))
         (rule "applyEq" (formula "187") (term "1,1") (ifseqformula "166"))
         (rule "inEqSimp_contradInEq1" (formula "189") (term "0,0") (ifseqformula "167"))
         (rule "qeq_literals" (formula "189") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "189"))
         (rule "inEqSimp_contradInEq1" (formula "188") (term "0,0") (ifseqformula "167"))
         (rule "qeq_literals" (formula "188") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "188"))
         (rule "inEqSimp_contradInEq1" (formula "187") (term "0,0") (ifseqformula "167"))
         (rule "qeq_literals" (formula "187") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "187"))
         (rule "inEqSimp_contradInEq0" (formula "187") (term "0") (ifseqformula "168"))
         (rule "inEqSimp_homoInEq1" (formula "187") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "187") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "187") (term "1,0,0,0"))
         (rule "mul_literals" (formula "187") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "187") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "187") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "187") (term "0,0,0"))
         (rule "add_literals" (formula "187") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "187") (term "1,0,0,0"))
         (rule "add_literals" (formula "187") (term "0,0,0"))
         (rule "leq_literals" (formula "187") (term "0,0"))
          (builtin "One Step Simplification" (formula "187"))
         (rule "inEqSimp_contradInEq0" (formula "189") (term "0") (ifseqformula "168"))
         (rule "inEqSimp_homoInEq1" (formula "189") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "189") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "189") (term "1,0,0,0"))
         (rule "mul_literals" (formula "189") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "189") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "189") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "189") (term "0,0,0"))
         (rule "add_literals" (formula "189") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "189") (term "1,0,0,0"))
         (rule "add_literals" (formula "189") (term "0,0,0"))
         (rule "leq_literals" (formula "189") (term "0,0"))
          (builtin "One Step Simplification" (formula "189"))
         (rule "inEqSimp_contradInEq0" (formula "188") (term "0") (ifseqformula "168"))
         (rule "inEqSimp_homoInEq1" (formula "188") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "188") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "188") (term "1,0,0,0"))
         (rule "mul_literals" (formula "188") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "188") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "188") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "188") (term "0,0,0"))
         (rule "add_literals" (formula "188") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "188") (term "1,0,0,0"))
         (rule "add_literals" (formula "188") (term "0,0,0"))
         (rule "leq_literals" (formula "188") (term "0,0"))
          (builtin "One Step Simplification" (formula "188"))
         (rule "pullOutSelect" (formula "187") (term "0") (inst "selectSK=arr_62"))
         (rule "simplifySelectOfAnonEQ" (formula "187") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "187"))
         (rule "applyEqReverse" (formula "188") (term "0") (ifseqformula "187"))
         (rule "hideAuxiliaryEq" (formula "187"))
         (rule "inEqSimp_exactShadow3" (formula "188") (ifseqformula "189"))
         (rule "mul_literals" (formula "188") (term "0,0"))
         (rule "add_zero_left" (formula "188") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "188"))
         (rule "mul_literals" (formula "188") (term "1"))
         (rule "allLeft" (formula "190") (inst "t=z_50"))
         (rule "replaceKnownSelect_taclet110_109" (formula "190") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_110" (formula "190") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "190") (inst "sk=z_59"))
         (rule "andLeft" (formula "190"))
         (rule "andLeft" (formula "190"))
         (rule "applyEq" (formula "190") (term "1,1") (ifseqformula "163"))
         (rule "inEqSimp_contradInEq1" (formula "192") (term "0,0") (ifseqformula "164"))
         (rule "qeq_literals" (formula "192") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "192"))
         (rule "inEqSimp_contradInEq0" (formula "190") (term "1,0") (ifseqformula "165"))
         (rule "inEqSimp_homoInEq1" (formula "190") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "190") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "190") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "190") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "190") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "190") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "190") (term "0,0,1,0"))
         (rule "add_literals" (formula "190") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "190") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "190") (term "0,0,1,0"))
         (rule "leq_literals" (formula "190") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "190"))
         (rule "inEqSimp_contradInEq0" (formula "191") (term "1,0") (ifseqformula "165"))
         (rule "inEqSimp_homoInEq1" (formula "191") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "191") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "191") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "191") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "191") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "191") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "191") (term "0,0,1,0"))
         (rule "add_literals" (formula "191") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "191") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "191") (term "0,0,1,0"))
         (rule "leq_literals" (formula "191") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "191"))
         (rule "inEqSimp_contradInEq1" (formula "190") (term "0") (ifseqformula "164"))
         (rule "qeq_literals" (formula "190") (term "0,0"))
          (builtin "One Step Simplification" (formula "190"))
         (rule "inEqSimp_contradInEq0" (formula "192") (term "0") (ifseqformula "165"))
         (rule "inEqSimp_homoInEq1" (formula "192") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "192") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "192") (term "1,0,0,0"))
         (rule "mul_literals" (formula "192") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "192") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "192") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "192") (term "0,0,0"))
         (rule "add_literals" (formula "192") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "192") (term "1,0,0,0"))
         (rule "add_literals" (formula "192") (term "0,0,0"))
         (rule "leq_literals" (formula "192") (term "0,0"))
          (builtin "One Step Simplification" (formula "192"))
         (rule "inEqSimp_contradInEq1" (formula "191") (term "0") (ifseqformula "164"))
         (rule "qeq_literals" (formula "191") (term "0,0"))
          (builtin "One Step Simplification" (formula "191"))
         (rule "pullOutSelect" (formula "190") (term "0") (inst "selectSK=arr_63"))
         (rule "simplifySelectOfAnonEQ" (formula "190") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "190"))
         (rule "applyEqReverse" (formula "191") (term "0") (ifseqformula "190"))
         (rule "hideAuxiliaryEq" (formula "190"))
         (rule "inEqSimp_exactShadow3" (formula "191") (ifseqformula "192"))
         (rule "mul_literals" (formula "191") (term "0,0"))
         (rule "add_zero_left" (formula "191") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "191"))
         (rule "mul_literals" (formula "191") (term "1"))
         (rule "allLeft" (formula "193") (inst "t=z_49"))
         (rule "replaceKnownSelect_taclet110_107" (formula "193") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_108" (formula "193") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "193") (inst "sk=z_60"))
         (rule "andLeft" (formula "193"))
         (rule "andLeft" (formula "193"))
         (rule "applyEq" (formula "193") (term "1,1") (ifseqformula "160"))
         (rule "inEqSimp_contradInEq1" (formula "195") (term "0,0") (ifseqformula "161"))
         (rule "qeq_literals" (formula "195") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "195"))
         (rule "inEqSimp_contradInEq1" (formula "194") (term "0,0") (ifseqformula "161"))
         (rule "qeq_literals" (formula "194") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "194"))
         (rule "inEqSimp_contradInEq1" (formula "193") (term "0,0") (ifseqformula "161"))
         (rule "qeq_literals" (formula "193") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "193"))
         (rule "inEqSimp_contradInEq0" (formula "193") (term "0") (ifseqformula "162"))
         (rule "inEqSimp_homoInEq1" (formula "193") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "193") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "193") (term "1,0,0,0"))
         (rule "mul_literals" (formula "193") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "193") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "193") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "193") (term "0,0,0"))
         (rule "add_literals" (formula "193") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "193") (term "1,0,0,0"))
         (rule "add_literals" (formula "193") (term "0,0,0"))
         (rule "leq_literals" (formula "193") (term "0,0"))
          (builtin "One Step Simplification" (formula "193"))
         (rule "inEqSimp_contradInEq0" (formula "195") (term "0") (ifseqformula "162"))
         (rule "inEqSimp_homoInEq1" (formula "195") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "195") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "195") (term "1,0,0,0"))
         (rule "mul_literals" (formula "195") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "195") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "195") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "195") (term "0,0,0"))
         (rule "add_literals" (formula "195") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "195") (term "1,0,0,0"))
         (rule "add_literals" (formula "195") (term "0,0,0"))
         (rule "leq_literals" (formula "195") (term "0,0"))
          (builtin "One Step Simplification" (formula "195"))
         (rule "inEqSimp_contradInEq0" (formula "194") (term "0") (ifseqformula "162"))
         (rule "inEqSimp_homoInEq1" (formula "194") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "194") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "194") (term "1,0,0,0"))
         (rule "mul_literals" (formula "194") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "194") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "194") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "194") (term "0,0,0"))
         (rule "add_literals" (formula "194") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "194") (term "1,0,0,0"))
         (rule "add_literals" (formula "194") (term "0,0,0"))
         (rule "leq_literals" (formula "194") (term "0,0"))
          (builtin "One Step Simplification" (formula "194"))
         (rule "pullOutSelect" (formula "193") (term "0") (inst "selectSK=arr_64"))
         (rule "simplifySelectOfAnonEQ" (formula "193") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "193"))
         (rule "applyEqReverse" (formula "194") (term "0") (ifseqformula "193"))
         (rule "hideAuxiliaryEq" (formula "193"))
         (rule "inEqSimp_exactShadow3" (formula "194") (ifseqformula "195"))
         (rule "mul_literals" (formula "194") (term "0,0"))
         (rule "add_zero_left" (formula "194") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "194"))
         (rule "mul_literals" (formula "194") (term "1"))
         (rule "allLeft" (formula "196") (inst "t=z_48"))
         (rule "replaceKnownSelect_taclet110_105" (formula "196") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_106" (formula "196") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "196") (inst "sk=z_61"))
         (rule "andLeft" (formula "196"))
         (rule "andLeft" (formula "196"))
         (rule "applyEq" (formula "196") (term "1,1") (ifseqformula "157"))
         (rule "inEqSimp_contradInEq0" (formula "198") (term "1,0") (ifseqformula "159"))
         (rule "inEqSimp_homoInEq1" (formula "198") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "198") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "198") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "198") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "198") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "198") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "198") (term "0,0,1,0"))
         (rule "add_literals" (formula "198") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "198") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "198") (term "0,0,1,0"))
         (rule "leq_literals" (formula "198") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "198"))
         (rule "inEqSimp_contradInEq1" (formula "197") (term "0,0") (ifseqformula "158"))
         (rule "qeq_literals" (formula "197") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "197"))
         (rule "inEqSimp_contradInEq0" (formula "196") (term "1,0") (ifseqformula "159"))
         (rule "inEqSimp_homoInEq1" (formula "196") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "196") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "196") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "196") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "196") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "196") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "196") (term "0,0,1,0"))
         (rule "add_literals" (formula "196") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "196") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "196") (term "0,0,1,0"))
         (rule "leq_literals" (formula "196") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "196"))
         (rule "inEqSimp_contradInEq1" (formula "196") (term "0") (ifseqformula "158"))
         (rule "qeq_literals" (formula "196") (term "0,0"))
          (builtin "One Step Simplification" (formula "196"))
         (rule "inEqSimp_contradInEq1" (formula "198") (term "0") (ifseqformula "158"))
         (rule "qeq_literals" (formula "198") (term "0,0"))
          (builtin "One Step Simplification" (formula "198"))
         (rule "inEqSimp_contradInEq0" (formula "197") (term "0") (ifseqformula "159"))
         (rule "inEqSimp_homoInEq1" (formula "197") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "197") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "197") (term "1,0,0,0"))
         (rule "mul_literals" (formula "197") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "197") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "197") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "197") (term "0,0,0"))
         (rule "add_literals" (formula "197") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "197") (term "1,0,0,0"))
         (rule "add_literals" (formula "197") (term "0,0,0"))
         (rule "leq_literals" (formula "197") (term "0,0"))
          (builtin "One Step Simplification" (formula "197"))
         (rule "pullOutSelect" (formula "196") (term "0") (inst "selectSK=arr_65"))
         (rule "simplifySelectOfAnonEQ" (formula "196") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "196"))
         (rule "applyEqReverse" (formula "197") (term "0") (ifseqformula "196"))
         (rule "hideAuxiliaryEq" (formula "196"))
         (rule "inEqSimp_exactShadow3" (formula "197") (ifseqformula "198"))
         (rule "mul_literals" (formula "197") (term "0,0"))
         (rule "add_zero_left" (formula "197") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "197"))
         (rule "mul_literals" (formula "197") (term "1"))
         (rule "allLeft" (formula "199") (inst "t=z_47"))
         (rule "replaceKnownSelect_taclet110_103" (formula "199") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_104" (formula "199") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "199") (inst "sk=z_62"))
         (rule "andLeft" (formula "199"))
         (rule "andLeft" (formula "199"))
         (rule "applyEq" (formula "199") (term "1,1") (ifseqformula "154"))
         (rule "inEqSimp_contradInEq1" (formula "201") (term "0,0") (ifseqformula "155"))
         (rule "qeq_literals" (formula "201") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "201"))
         (rule "inEqSimp_contradInEq0" (formula "200") (term "1,0") (ifseqformula "156"))
         (rule "inEqSimp_homoInEq1" (formula "200") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "200") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "200") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "200") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "200") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "200") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "200") (term "0,0,1,0"))
         (rule "add_literals" (formula "200") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "200") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "200") (term "0,0,1,0"))
         (rule "leq_literals" (formula "200") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "200"))
         (rule "inEqSimp_contradInEq1" (formula "199") (term "0,0") (ifseqformula "155"))
         (rule "qeq_literals" (formula "199") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "199"))
         (rule "inEqSimp_contradInEq0" (formula "199") (term "0") (ifseqformula "156"))
         (rule "inEqSimp_homoInEq1" (formula "199") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "199") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "199") (term "1,0,0,0"))
         (rule "mul_literals" (formula "199") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "199") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "199") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "199") (term "0,0,0"))
         (rule "add_literals" (formula "199") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "199") (term "1,0,0,0"))
         (rule "add_literals" (formula "199") (term "0,0,0"))
         (rule "leq_literals" (formula "199") (term "0,0"))
          (builtin "One Step Simplification" (formula "199"))
         (rule "inEqSimp_contradInEq0" (formula "201") (term "0") (ifseqformula "156"))
         (rule "inEqSimp_homoInEq1" (formula "201") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "201") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "201") (term "1,0,0,0"))
         (rule "mul_literals" (formula "201") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "201") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "201") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "201") (term "0,0,0"))
         (rule "add_literals" (formula "201") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "201") (term "1,0,0,0"))
         (rule "add_literals" (formula "201") (term "0,0,0"))
         (rule "leq_literals" (formula "201") (term "0,0"))
          (builtin "One Step Simplification" (formula "201"))
         (rule "inEqSimp_contradInEq1" (formula "200") (term "0") (ifseqformula "155"))
         (rule "qeq_literals" (formula "200") (term "0,0"))
          (builtin "One Step Simplification" (formula "200"))
         (rule "pullOutSelect" (formula "199") (term "0") (inst "selectSK=arr_66"))
         (rule "simplifySelectOfAnonEQ" (formula "199") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "199"))
         (rule "applyEqReverse" (formula "200") (term "0") (ifseqformula "199"))
         (rule "hideAuxiliaryEq" (formula "199"))
         (rule "inEqSimp_exactShadow3" (formula "200") (ifseqformula "201"))
         (rule "mul_literals" (formula "200") (term "0,0"))
         (rule "add_zero_left" (formula "200") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "200"))
         (rule "mul_literals" (formula "200") (term "1"))
         (rule "allLeft" (formula "202") (inst "t=z_46"))
         (rule "replaceKnownSelect_taclet110_101" (formula "202") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_102" (formula "202") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "202") (inst "sk=z_63"))
         (rule "andLeft" (formula "202"))
         (rule "andLeft" (formula "202"))
         (rule "applyEq" (formula "202") (term "1,1") (ifseqformula "151"))
         (rule "inEqSimp_contradInEq0" (formula "204") (term "1,0") (ifseqformula "153"))
         (rule "inEqSimp_homoInEq1" (formula "204") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "204") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "204") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "204") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "204") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "204") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "204") (term "0,0,1,0"))
         (rule "add_literals" (formula "204") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "204") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "204") (term "0,0,1,0"))
         (rule "leq_literals" (formula "204") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "204"))
         (rule "inEqSimp_contradInEq1" (formula "202") (term "0,0") (ifseqformula "152"))
         (rule "qeq_literals" (formula "202") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "202"))
         (rule "inEqSimp_contradInEq1" (formula "203") (term "0,0") (ifseqformula "152"))
         (rule "qeq_literals" (formula "203") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "203"))
         (rule "inEqSimp_contradInEq0" (formula "202") (term "0") (ifseqformula "153"))
         (rule "inEqSimp_homoInEq1" (formula "202") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "202") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "202") (term "1,0,0,0"))
         (rule "mul_literals" (formula "202") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "202") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "202") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "202") (term "0,0,0"))
         (rule "add_literals" (formula "202") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "202") (term "1,0,0,0"))
         (rule "add_literals" (formula "202") (term "0,0,0"))
         (rule "leq_literals" (formula "202") (term "0,0"))
          (builtin "One Step Simplification" (formula "202"))
         (rule "inEqSimp_contradInEq1" (formula "204") (term "0") (ifseqformula "152"))
         (rule "qeq_literals" (formula "204") (term "0,0"))
          (builtin "One Step Simplification" (formula "204"))
         (rule "inEqSimp_contradInEq0" (formula "203") (term "0") (ifseqformula "153"))
         (rule "inEqSimp_homoInEq1" (formula "203") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "203") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "203") (term "1,0,0,0"))
         (rule "mul_literals" (formula "203") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "203") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "203") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "203") (term "0,0,0"))
         (rule "add_literals" (formula "203") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "203") (term "1,0,0,0"))
         (rule "add_literals" (formula "203") (term "0,0,0"))
         (rule "leq_literals" (formula "203") (term "0,0"))
          (builtin "One Step Simplification" (formula "203"))
         (rule "pullOutSelect" (formula "202") (term "0") (inst "selectSK=arr_67"))
         (rule "simplifySelectOfAnonEQ" (formula "202") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "202"))
         (rule "applyEqReverse" (formula "203") (term "0") (ifseqformula "202"))
         (rule "hideAuxiliaryEq" (formula "202"))
         (rule "inEqSimp_exactShadow3" (formula "203") (ifseqformula "204"))
         (rule "mul_literals" (formula "203") (term "0,0"))
         (rule "add_zero_left" (formula "203") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "203"))
         (rule "mul_literals" (formula "203") (term "1"))
         (rule "allLeft" (formula "205") (inst "t=z_45"))
         (rule "replaceKnownSelect_taclet110_99" (formula "205") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_100" (formula "205") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "205") (inst "sk=z_64"))
         (rule "andLeft" (formula "205"))
         (rule "andLeft" (formula "205"))
         (rule "applyEq" (formula "205") (term "1,1") (ifseqformula "148"))
         (rule "inEqSimp_contradInEq0" (formula "206") (term "1,0") (ifseqformula "150"))
         (rule "inEqSimp_homoInEq1" (formula "206") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "206") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "206") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "206") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "206") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "206") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "206") (term "0,0,1,0"))
         (rule "add_literals" (formula "206") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "206") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "206") (term "0,0,1,0"))
         (rule "leq_literals" (formula "206") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "206"))
         (rule "inEqSimp_contradInEq0" (formula "205") (term "1,0") (ifseqformula "150"))
         (rule "inEqSimp_homoInEq1" (formula "205") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "205") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "205") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "205") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "205") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "205") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "205") (term "0,0,1,0"))
         (rule "add_literals" (formula "205") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "205") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "205") (term "0,0,1,0"))
         (rule "leq_literals" (formula "205") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "205"))
         (rule "inEqSimp_contradInEq0" (formula "207") (term "1,0") (ifseqformula "150"))
         (rule "inEqSimp_homoInEq1" (formula "207") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "207") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "207") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "207") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "207") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "207") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "207") (term "0,0,1,0"))
         (rule "add_literals" (formula "207") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "207") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "207") (term "0,0,1,0"))
         (rule "leq_literals" (formula "207") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "207"))
         (rule "inEqSimp_contradInEq1" (formula "206") (term "0") (ifseqformula "149"))
         (rule "qeq_literals" (formula "206") (term "0,0"))
          (builtin "One Step Simplification" (formula "206"))
         (rule "inEqSimp_contradInEq1" (formula "207") (term "0") (ifseqformula "149"))
         (rule "qeq_literals" (formula "207") (term "0,0"))
          (builtin "One Step Simplification" (formula "207"))
         (rule "inEqSimp_contradInEq1" (formula "205") (term "0") (ifseqformula "149"))
         (rule "qeq_literals" (formula "205") (term "0,0"))
          (builtin "One Step Simplification" (formula "205"))
         (rule "pullOutSelect" (formula "205") (term "0") (inst "selectSK=arr_68"))
         (rule "simplifySelectOfAnonEQ" (formula "205") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "205"))
         (rule "applyEqReverse" (formula "206") (term "0") (ifseqformula "205"))
         (rule "hideAuxiliaryEq" (formula "205"))
         (rule "inEqSimp_exactShadow3" (formula "206") (ifseqformula "207"))
         (rule "mul_literals" (formula "206") (term "0,0"))
         (rule "add_zero_left" (formula "206") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "206"))
         (rule "mul_literals" (formula "206") (term "1"))
         (rule "allLeft" (formula "208") (inst "t=z_44"))
         (rule "replaceKnownSelect_taclet110_97" (formula "208") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_98" (formula "208") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "208") (inst "sk=z_65"))
         (rule "andLeft" (formula "208"))
         (rule "andLeft" (formula "208"))
         (rule "applyEq" (formula "208") (term "1,1") (ifseqformula "145"))
         (rule "inEqSimp_contradInEq0" (formula "208") (term "1,0") (ifseqformula "147"))
         (rule "inEqSimp_homoInEq1" (formula "208") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "208") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "208") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "208") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "208") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "208") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "208") (term "0,0,1,0"))
         (rule "add_literals" (formula "208") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "208") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "208") (term "0,0,1,0"))
         (rule "leq_literals" (formula "208") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "208"))
         (rule "inEqSimp_contradInEq0" (formula "209") (term "1,0") (ifseqformula "147"))
         (rule "inEqSimp_homoInEq1" (formula "209") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "209") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "209") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "209") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "209") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "209") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "209") (term "0,0,1,0"))
         (rule "add_literals" (formula "209") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "209") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "209") (term "0,0,1,0"))
         (rule "leq_literals" (formula "209") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "209"))
         (rule "inEqSimp_contradInEq0" (formula "210") (term "1,0") (ifseqformula "147"))
         (rule "inEqSimp_homoInEq1" (formula "210") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "210") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "210") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "210") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "210") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "210") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "210") (term "0,0,1,0"))
         (rule "add_literals" (formula "210") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "210") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "210") (term "0,0,1,0"))
         (rule "leq_literals" (formula "210") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "210"))
         (rule "inEqSimp_contradInEq1" (formula "210") (term "0") (ifseqformula "146"))
         (rule "qeq_literals" (formula "210") (term "0,0"))
          (builtin "One Step Simplification" (formula "210"))
         (rule "inEqSimp_contradInEq1" (formula "208") (term "0") (ifseqformula "146"))
         (rule "qeq_literals" (formula "208") (term "0,0"))
          (builtin "One Step Simplification" (formula "208"))
         (rule "inEqSimp_contradInEq1" (formula "209") (term "0") (ifseqformula "146"))
         (rule "qeq_literals" (formula "209") (term "0,0"))
          (builtin "One Step Simplification" (formula "209"))
         (rule "pullOutSelect" (formula "208") (term "0") (inst "selectSK=arr_69"))
         (rule "simplifySelectOfAnonEQ" (formula "208") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "208"))
         (rule "applyEqReverse" (formula "209") (term "0") (ifseqformula "208"))
         (rule "hideAuxiliaryEq" (formula "208"))
         (rule "inEqSimp_exactShadow3" (formula "209") (ifseqformula "210"))
         (rule "mul_literals" (formula "209") (term "0,0"))
         (rule "add_zero_left" (formula "209") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "209"))
         (rule "mul_literals" (formula "209") (term "1"))
         (rule "allLeft" (formula "211") (inst "t=z_65"))
         (rule "replaceKnownSelect_taclet110_139" (formula "211") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_140" (formula "211") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "211") (inst "sk=z_66"))
         (rule "andLeft" (formula "211"))
         (rule "andLeft" (formula "211"))
         (rule "applyEq" (formula "211") (term "1,1") (ifseqformula "208"))
         (rule "inEqSimp_contradInEq1" (formula "213") (term "0,0") (ifseqformula "209"))
         (rule "qeq_literals" (formula "213") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "213"))
         (rule "inEqSimp_contradInEq1" (formula "211") (term "0,0") (ifseqformula "209"))
         (rule "qeq_literals" (formula "211") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "211"))
         (rule "inEqSimp_contradInEq1" (formula "212") (term "0,0") (ifseqformula "209"))
         (rule "qeq_literals" (formula "212") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "212"))
         (rule "inEqSimp_contradInEq0" (formula "212") (term "0") (ifseqformula "210"))
         (rule "inEqSimp_homoInEq1" (formula "212") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "212") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "212") (term "1,0,0,0"))
         (rule "mul_literals" (formula "212") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "212") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "212") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "212") (term "0,0,0"))
         (rule "add_literals" (formula "212") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "212") (term "1,0,0,0"))
         (rule "add_literals" (formula "212") (term "0,0,0"))
         (rule "leq_literals" (formula "212") (term "0,0"))
          (builtin "One Step Simplification" (formula "212"))
         (rule "inEqSimp_contradInEq0" (formula "213") (term "0") (ifseqformula "210"))
         (rule "inEqSimp_homoInEq1" (formula "213") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "213") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "213") (term "1,0,0,0"))
         (rule "mul_literals" (formula "213") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "213") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "213") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "213") (term "0,0,0"))
         (rule "add_literals" (formula "213") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "213") (term "1,0,0,0"))
         (rule "add_literals" (formula "213") (term "0,0,0"))
         (rule "leq_literals" (formula "213") (term "0,0"))
          (builtin "One Step Simplification" (formula "213"))
         (rule "inEqSimp_contradInEq0" (formula "211") (term "0") (ifseqformula "210"))
         (rule "inEqSimp_homoInEq1" (formula "211") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "211") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "211") (term "1,0,0,0"))
         (rule "mul_literals" (formula "211") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "211") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "211") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "211") (term "0,0,0"))
         (rule "add_literals" (formula "211") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "211") (term "1,0,0,0"))
         (rule "add_literals" (formula "211") (term "0,0,0"))
         (rule "leq_literals" (formula "211") (term "0,0"))
          (builtin "One Step Simplification" (formula "211"))
         (rule "pullOutSelect" (formula "211") (term "0") (inst "selectSK=arr_70"))
         (rule "simplifySelectOfAnonEQ" (formula "211") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "211"))
         (rule "applyEqReverse" (formula "212") (term "0") (ifseqformula "211"))
         (rule "hideAuxiliaryEq" (formula "211"))
         (rule "inEqSimp_exactShadow3" (formula "212") (ifseqformula "213"))
         (rule "mul_literals" (formula "212") (term "0,0"))
         (rule "add_zero_left" (formula "212") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "212"))
         (rule "mul_literals" (formula "212") (term "1"))
         (rule "allLeft" (formula "214") (inst "t=z_64"))
         (rule "replaceKnownSelect_taclet110_137" (formula "214") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_138" (formula "214") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "214") (inst "sk=z_67"))
         (rule "andLeft" (formula "214"))
         (rule "andLeft" (formula "214"))
         (rule "applyEq" (formula "214") (term "1,1") (ifseqformula "205"))
         (rule "inEqSimp_contradInEq1" (formula "214") (term "0,0") (ifseqformula "206"))
         (rule "qeq_literals" (formula "214") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "214"))
         (rule "inEqSimp_contradInEq1" (formula "215") (term "0,0") (ifseqformula "206"))
         (rule "qeq_literals" (formula "215") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "215"))
         (rule "inEqSimp_contradInEq0" (formula "216") (term "1,0") (ifseqformula "207"))
         (rule "inEqSimp_homoInEq1" (formula "216") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "216") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "216") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "216") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "216") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "216") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "216") (term "0,0,1,0"))
         (rule "add_literals" (formula "216") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "216") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "216") (term "0,0,1,0"))
         (rule "leq_literals" (formula "216") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "216"))
         (rule "inEqSimp_contradInEq0" (formula "214") (term "0") (ifseqformula "207"))
         (rule "inEqSimp_homoInEq1" (formula "214") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "214") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "214") (term "1,0,0,0"))
         (rule "mul_literals" (formula "214") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "214") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "214") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "214") (term "0,0,0"))
         (rule "add_literals" (formula "214") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "214") (term "1,0,0,0"))
         (rule "add_literals" (formula "214") (term "0,0,0"))
         (rule "leq_literals" (formula "214") (term "0,0"))
          (builtin "One Step Simplification" (formula "214"))
         (rule "inEqSimp_contradInEq1" (formula "216") (term "0") (ifseqformula "206"))
         (rule "qeq_literals" (formula "216") (term "0,0"))
          (builtin "One Step Simplification" (formula "216"))
         (rule "inEqSimp_contradInEq0" (formula "215") (term "0") (ifseqformula "207"))
         (rule "inEqSimp_homoInEq1" (formula "215") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "215") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "215") (term "1,0,0,0"))
         (rule "mul_literals" (formula "215") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "215") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "215") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "215") (term "0,0,0"))
         (rule "add_literals" (formula "215") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "215") (term "1,0,0,0"))
         (rule "add_literals" (formula "215") (term "0,0,0"))
         (rule "leq_literals" (formula "215") (term "0,0"))
          (builtin "One Step Simplification" (formula "215"))
         (rule "pullOutSelect" (formula "214") (term "0") (inst "selectSK=arr_71"))
         (rule "simplifySelectOfAnonEQ" (formula "214") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "214"))
         (rule "applyEqReverse" (formula "215") (term "0") (ifseqformula "214"))
         (rule "hideAuxiliaryEq" (formula "214"))
         (rule "inEqSimp_exactShadow3" (formula "215") (ifseqformula "216"))
         (rule "mul_literals" (formula "215") (term "0,0"))
         (rule "add_zero_left" (formula "215") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "215"))
         (rule "mul_literals" (formula "215") (term "1"))
         (rule "allLeft" (formula "217") (inst "t=z_63"))
         (rule "replaceKnownSelect_taclet110_135" (formula "217") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_136" (formula "217") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "217") (inst "sk=z_68"))
         (rule "andLeft" (formula "217"))
         (rule "andLeft" (formula "217"))
         (rule "applyEq" (formula "217") (term "1,1") (ifseqformula "202"))
         (rule "inEqSimp_contradInEq1" (formula "217") (term "0,0") (ifseqformula "203"))
         (rule "qeq_literals" (formula "217") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "217"))
         (rule "inEqSimp_contradInEq0" (formula "218") (term "1,0") (ifseqformula "204"))
         (rule "inEqSimp_homoInEq1" (formula "218") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "218") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "218") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "218") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "218") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "218") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "218") (term "0,0,1,0"))
         (rule "add_literals" (formula "218") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "218") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "218") (term "0,0,1,0"))
         (rule "leq_literals" (formula "218") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "218"))
         (rule "inEqSimp_contradInEq0" (formula "219") (term "1,0") (ifseqformula "204"))
         (rule "inEqSimp_homoInEq1" (formula "219") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "219") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "219") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "219") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "219") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "219") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "219") (term "0,0,1,0"))
         (rule "add_literals" (formula "219") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "219") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "219") (term "0,0,1,0"))
         (rule "leq_literals" (formula "219") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "219"))
         (rule "inEqSimp_contradInEq0" (formula "217") (term "0") (ifseqformula "204"))
         (rule "inEqSimp_homoInEq1" (formula "217") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "217") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "217") (term "1,0,0,0"))
         (rule "mul_literals" (formula "217") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "217") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "217") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "217") (term "0,0,0"))
         (rule "add_literals" (formula "217") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "217") (term "1,0,0,0"))
         (rule "add_literals" (formula "217") (term "0,0,0"))
         (rule "leq_literals" (formula "217") (term "0,0"))
          (builtin "One Step Simplification" (formula "217"))
         (rule "inEqSimp_contradInEq1" (formula "218") (term "0") (ifseqformula "203"))
         (rule "qeq_literals" (formula "218") (term "0,0"))
          (builtin "One Step Simplification" (formula "218"))
         (rule "inEqSimp_contradInEq1" (formula "219") (term "0") (ifseqformula "203"))
         (rule "qeq_literals" (formula "219") (term "0,0"))
          (builtin "One Step Simplification" (formula "219"))
         (rule "pullOutSelect" (formula "217") (term "0") (inst "selectSK=arr_72"))
         (rule "simplifySelectOfAnonEQ" (formula "217") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "217"))
         (rule "applyEqReverse" (formula "218") (term "0") (ifseqformula "217"))
         (rule "hideAuxiliaryEq" (formula "217"))
         (rule "inEqSimp_exactShadow3" (formula "218") (ifseqformula "219"))
         (rule "mul_literals" (formula "218") (term "0,0"))
         (rule "add_zero_left" (formula "218") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "218"))
         (rule "mul_literals" (formula "218") (term "1"))
         (rule "allLeft" (formula "220") (inst "t=z_62"))
         (rule "replaceKnownSelect_taclet110_133" (formula "220") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_134" (formula "220") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "220") (inst "sk=z_69"))
         (rule "andLeft" (formula "220"))
         (rule "andLeft" (formula "220"))
         (rule "applyEq" (formula "220") (term "1,1") (ifseqformula "199"))
         (rule "inEqSimp_contradInEq0" (formula "222") (term "1,0") (ifseqformula "201"))
         (rule "inEqSimp_homoInEq1" (formula "222") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "222") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "222") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "222") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "222") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "222") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "222") (term "0,0,1,0"))
         (rule "add_literals" (formula "222") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "222") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "222") (term "0,0,1,0"))
         (rule "leq_literals" (formula "222") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "222"))
         (rule "inEqSimp_contradInEq1" (formula "221") (term "0,0") (ifseqformula "200"))
         (rule "qeq_literals" (formula "221") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "221"))
         (rule "inEqSimp_contradInEq1" (formula "220") (term "0,0") (ifseqformula "200"))
         (rule "qeq_literals" (formula "220") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "220"))
         (rule "inEqSimp_contradInEq1" (formula "222") (term "0") (ifseqformula "200"))
         (rule "qeq_literals" (formula "222") (term "0,0"))
          (builtin "One Step Simplification" (formula "222"))
         (rule "inEqSimp_contradInEq0" (formula "221") (term "0") (ifseqformula "201"))
         (rule "inEqSimp_homoInEq1" (formula "221") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "221") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "221") (term "1,0,0,0"))
         (rule "mul_literals" (formula "221") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "221") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "221") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "221") (term "0,0,0"))
         (rule "add_literals" (formula "221") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "221") (term "1,0,0,0"))
         (rule "add_literals" (formula "221") (term "0,0,0"))
         (rule "leq_literals" (formula "221") (term "0,0"))
          (builtin "One Step Simplification" (formula "221"))
         (rule "inEqSimp_contradInEq0" (formula "220") (term "0") (ifseqformula "201"))
         (rule "inEqSimp_homoInEq1" (formula "220") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "220") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "220") (term "1,0,0,0"))
         (rule "mul_literals" (formula "220") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "220") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "220") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "220") (term "0,0,0"))
         (rule "add_literals" (formula "220") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "220") (term "1,0,0,0"))
         (rule "add_literals" (formula "220") (term "0,0,0"))
         (rule "leq_literals" (formula "220") (term "0,0"))
          (builtin "One Step Simplification" (formula "220"))
         (rule "pullOutSelect" (formula "220") (term "0") (inst "selectSK=arr_73"))
         (rule "simplifySelectOfAnonEQ" (formula "220") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "220"))
         (rule "applyEqReverse" (formula "221") (term "0") (ifseqformula "220"))
         (rule "hideAuxiliaryEq" (formula "220"))
         (rule "inEqSimp_exactShadow3" (formula "221") (ifseqformula "222"))
         (rule "mul_literals" (formula "221") (term "0,0"))
         (rule "add_zero_left" (formula "221") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "221"))
         (rule "mul_literals" (formula "221") (term "1"))
         (rule "allLeft" (formula "223") (inst "t=z_61"))
         (rule "replaceKnownSelect_taclet110_131" (formula "223") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_132" (formula "223") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "223") (inst "sk=z_70"))
         (rule "andLeft" (formula "223"))
         (rule "andLeft" (formula "223"))
         (rule "applyEq" (formula "223") (term "1,1") (ifseqformula "196"))
         (rule "inEqSimp_contradInEq0" (formula "225") (term "1,0") (ifseqformula "198"))
         (rule "inEqSimp_homoInEq1" (formula "225") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "225") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "225") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "225") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "225") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "225") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "225") (term "0,0,1,0"))
         (rule "add_literals" (formula "225") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "225") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "225") (term "0,0,1,0"))
         (rule "leq_literals" (formula "225") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "225"))
         (rule "inEqSimp_contradInEq0" (formula "223") (term "1,0") (ifseqformula "198"))
         (rule "inEqSimp_homoInEq1" (formula "223") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "223") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "223") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "223") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "223") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "223") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "223") (term "0,0,1,0"))
         (rule "add_literals" (formula "223") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "223") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "223") (term "0,0,1,0"))
         (rule "leq_literals" (formula "223") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "223"))
         (rule "inEqSimp_contradInEq1" (formula "224") (term "0,0") (ifseqformula "197"))
         (rule "qeq_literals" (formula "224") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "224"))
         (rule "inEqSimp_contradInEq1" (formula "225") (term "0") (ifseqformula "197"))
         (rule "qeq_literals" (formula "225") (term "0,0"))
          (builtin "One Step Simplification" (formula "225"))
         (rule "inEqSimp_contradInEq0" (formula "224") (term "0") (ifseqformula "198"))
         (rule "inEqSimp_homoInEq1" (formula "224") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "224") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "224") (term "1,0,0,0"))
         (rule "mul_literals" (formula "224") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "224") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "224") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "224") (term "0,0,0"))
         (rule "add_literals" (formula "224") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "224") (term "1,0,0,0"))
         (rule "add_literals" (formula "224") (term "0,0,0"))
         (rule "leq_literals" (formula "224") (term "0,0"))
          (builtin "One Step Simplification" (formula "224"))
         (rule "inEqSimp_contradInEq1" (formula "223") (term "0") (ifseqformula "197"))
         (rule "qeq_literals" (formula "223") (term "0,0"))
          (builtin "One Step Simplification" (formula "223"))
         (rule "pullOutSelect" (formula "223") (term "0") (inst "selectSK=arr_74"))
         (rule "simplifySelectOfAnonEQ" (formula "223") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "223"))
         (rule "applyEqReverse" (formula "224") (term "0") (ifseqformula "223"))
         (rule "hideAuxiliaryEq" (formula "223"))
         (rule "inEqSimp_exactShadow3" (formula "224") (ifseqformula "225"))
         (rule "mul_literals" (formula "224") (term "0,0"))
         (rule "add_zero_left" (formula "224") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "224"))
         (rule "mul_literals" (formula "224") (term "1"))
         (rule "allLeft" (formula "226") (inst "t=z_60"))
         (rule "replaceKnownSelect_taclet110_129" (formula "226") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_130" (formula "226") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "226") (inst "sk=z_71"))
         (rule "andLeft" (formula "226"))
         (rule "andLeft" (formula "226"))
         (rule "applyEq" (formula "226") (term "1,1") (ifseqformula "193"))
         (rule "inEqSimp_contradInEq1" (formula "227") (term "0,0") (ifseqformula "194"))
         (rule "qeq_literals" (formula "227") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "227"))
         (rule "inEqSimp_contradInEq1" (formula "226") (term "0,0") (ifseqformula "194"))
         (rule "qeq_literals" (formula "226") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "226"))
         (rule "inEqSimp_contradInEq1" (formula "228") (term "0,0") (ifseqformula "194"))
         (rule "qeq_literals" (formula "228") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "228"))
         (rule "inEqSimp_contradInEq0" (formula "226") (term "0") (ifseqformula "195"))
         (rule "inEqSimp_homoInEq1" (formula "226") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "226") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "226") (term "1,0,0,0"))
         (rule "mul_literals" (formula "226") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "226") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "226") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "226") (term "0,0,0"))
         (rule "add_literals" (formula "226") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "226") (term "1,0,0,0"))
         (rule "add_literals" (formula "226") (term "0,0,0"))
         (rule "leq_literals" (formula "226") (term "0,0"))
          (builtin "One Step Simplification" (formula "226"))
         (rule "inEqSimp_contradInEq0" (formula "227") (term "0") (ifseqformula "195"))
         (rule "inEqSimp_homoInEq1" (formula "227") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "227") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "227") (term "1,0,0,0"))
         (rule "mul_literals" (formula "227") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "227") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "227") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "227") (term "0,0,0"))
         (rule "add_literals" (formula "227") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "227") (term "1,0,0,0"))
         (rule "add_literals" (formula "227") (term "0,0,0"))
         (rule "leq_literals" (formula "227") (term "0,0"))
          (builtin "One Step Simplification" (formula "227"))
         (rule "inEqSimp_contradInEq0" (formula "228") (term "0") (ifseqformula "195"))
         (rule "inEqSimp_homoInEq1" (formula "228") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "228") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "228") (term "1,0,0,0"))
         (rule "mul_literals" (formula "228") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "228") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "228") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "228") (term "0,0,0"))
         (rule "add_literals" (formula "228") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "228") (term "1,0,0,0"))
         (rule "add_literals" (formula "228") (term "0,0,0"))
         (rule "leq_literals" (formula "228") (term "0,0"))
          (builtin "One Step Simplification" (formula "228"))
         (rule "pullOutSelect" (formula "226") (term "0") (inst "selectSK=arr_75"))
         (rule "simplifySelectOfAnonEQ" (formula "226") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "226"))
         (rule "applyEqReverse" (formula "227") (term "0") (ifseqformula "226"))
         (rule "hideAuxiliaryEq" (formula "226"))
         (rule "inEqSimp_exactShadow3" (formula "227") (ifseqformula "228"))
         (rule "mul_literals" (formula "227") (term "0,0"))
         (rule "add_zero_left" (formula "227") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "227"))
         (rule "mul_literals" (formula "227") (term "1"))
         (rule "allLeft" (formula "229") (inst "t=z_59"))
         (rule "replaceKnownSelect_taclet110_127" (formula "229") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_128" (formula "229") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "229") (inst "sk=z_72"))
         (rule "andLeft" (formula "229"))
         (rule "andLeft" (formula "229"))
         (rule "applyEq" (formula "229") (term "1,1") (ifseqformula "190"))
         (rule "inEqSimp_contradInEq1" (formula "229") (term "0,0") (ifseqformula "191"))
         (rule "qeq_literals" (formula "229") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "229"))
         (rule "inEqSimp_contradInEq0" (formula "230") (term "1,0") (ifseqformula "192"))
         (rule "inEqSimp_homoInEq1" (formula "230") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "230") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "230") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "230") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "230") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "230") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "230") (term "0,0,1,0"))
         (rule "add_literals" (formula "230") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "230") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "230") (term "0,0,1,0"))
         (rule "leq_literals" (formula "230") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "230"))
         (rule "inEqSimp_contradInEq0" (formula "231") (term "1,0") (ifseqformula "192"))
         (rule "inEqSimp_homoInEq1" (formula "231") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "231") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "231") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "231") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "231") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "231") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "231") (term "0,0,1,0"))
         (rule "add_literals" (formula "231") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "231") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "231") (term "0,0,1,0"))
         (rule "leq_literals" (formula "231") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "231"))
         (rule "inEqSimp_contradInEq0" (formula "229") (term "0") (ifseqformula "192"))
         (rule "inEqSimp_homoInEq1" (formula "229") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "229") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "229") (term "1,0,0,0"))
         (rule "mul_literals" (formula "229") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "229") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "229") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "229") (term "0,0,0"))
         (rule "add_literals" (formula "229") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "229") (term "1,0,0,0"))
         (rule "add_literals" (formula "229") (term "0,0,0"))
         (rule "leq_literals" (formula "229") (term "0,0"))
          (builtin "One Step Simplification" (formula "229"))
         (rule "inEqSimp_contradInEq1" (formula "231") (term "0") (ifseqformula "191"))
         (rule "qeq_literals" (formula "231") (term "0,0"))
          (builtin "One Step Simplification" (formula "231"))
         (rule "inEqSimp_contradInEq1" (formula "230") (term "0") (ifseqformula "191"))
         (rule "qeq_literals" (formula "230") (term "0,0"))
          (builtin "One Step Simplification" (formula "230"))
         (rule "pullOutSelect" (formula "229") (term "0") (inst "selectSK=arr_76"))
         (rule "simplifySelectOfAnonEQ" (formula "229") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "229"))
         (rule "applyEqReverse" (formula "230") (term "0") (ifseqformula "229"))
         (rule "hideAuxiliaryEq" (formula "229"))
         (rule "inEqSimp_exactShadow3" (formula "230") (ifseqformula "231"))
         (rule "mul_literals" (formula "230") (term "0,0"))
         (rule "add_zero_left" (formula "230") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "230"))
         (rule "mul_literals" (formula "230") (term "1"))
         (rule "allLeft" (formula "232") (inst "t=z_58"))
         (rule "replaceKnownSelect_taclet110_125" (formula "232") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_126" (formula "232") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "232") (inst "sk=z_73"))
         (rule "andLeft" (formula "232"))
         (rule "andLeft" (formula "232"))
         (rule "applyEq" (formula "232") (term "1,1") (ifseqformula "187"))
         (rule "inEqSimp_contradInEq0" (formula "234") (term "1,0") (ifseqformula "189"))
         (rule "inEqSimp_homoInEq1" (formula "234") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "234") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "234") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "234") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "234") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "234") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "234") (term "0,0,1,0"))
         (rule "add_literals" (formula "234") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "234") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "234") (term "0,0,1,0"))
         (rule "leq_literals" (formula "234") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "234"))
         (rule "inEqSimp_contradInEq1" (formula "232") (term "0,0") (ifseqformula "188"))
         (rule "qeq_literals" (formula "232") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "232"))
         (rule "inEqSimp_contradInEq0" (formula "233") (term "1,0") (ifseqformula "189"))
         (rule "inEqSimp_homoInEq1" (formula "233") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "233") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "233") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "233") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "233") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "233") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "233") (term "0,0,1,0"))
         (rule "add_literals" (formula "233") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "233") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "233") (term "0,0,1,0"))
         (rule "leq_literals" (formula "233") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "233"))
         (rule "inEqSimp_contradInEq0" (formula "232") (term "0") (ifseqformula "189"))
         (rule "inEqSimp_homoInEq1" (formula "232") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "232") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "232") (term "1,0,0,0"))
         (rule "mul_literals" (formula "232") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "232") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "232") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "232") (term "0,0,0"))
         (rule "add_literals" (formula "232") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "232") (term "1,0,0,0"))
         (rule "add_literals" (formula "232") (term "0,0,0"))
         (rule "leq_literals" (formula "232") (term "0,0"))
          (builtin "One Step Simplification" (formula "232"))
         (rule "inEqSimp_contradInEq1" (formula "234") (term "0") (ifseqformula "188"))
         (rule "qeq_literals" (formula "234") (term "0,0"))
          (builtin "One Step Simplification" (formula "234"))
         (rule "inEqSimp_contradInEq1" (formula "233") (term "0") (ifseqformula "188"))
         (rule "qeq_literals" (formula "233") (term "0,0"))
          (builtin "One Step Simplification" (formula "233"))
         (rule "pullOutSelect" (formula "232") (term "0") (inst "selectSK=arr_77"))
         (rule "simplifySelectOfAnonEQ" (formula "232") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "232"))
         (rule "applyEqReverse" (formula "233") (term "0") (ifseqformula "232"))
         (rule "hideAuxiliaryEq" (formula "232"))
         (rule "inEqSimp_exactShadow3" (formula "233") (ifseqformula "234"))
         (rule "mul_literals" (formula "233") (term "0,0"))
         (rule "add_zero_left" (formula "233") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "233"))
         (rule "mul_literals" (formula "233") (term "1"))
         (rule "allLeft" (formula "235") (inst "t=z_57"))
         (rule "replaceKnownSelect_taclet110_123" (formula "235") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_124" (formula "235") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "235") (inst "sk=z_74"))
         (rule "andLeft" (formula "235"))
         (rule "andLeft" (formula "235"))
         (rule "applyEq" (formula "235") (term "1,1") (ifseqformula "184"))
         (rule "inEqSimp_contradInEq1" (formula "237") (term "0,0") (ifseqformula "185"))
         (rule "qeq_literals" (formula "237") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "237"))
         (rule "inEqSimp_contradInEq0" (formula "235") (term "1,0") (ifseqformula "186"))
         (rule "inEqSimp_homoInEq1" (formula "235") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "235") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "235") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "235") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "235") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "235") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "235") (term "0,0,1,0"))
         (rule "add_literals" (formula "235") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "235") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "235") (term "0,0,1,0"))
         (rule "leq_literals" (formula "235") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "235"))
         (rule "inEqSimp_contradInEq0" (formula "236") (term "1,0") (ifseqformula "186"))
         (rule "inEqSimp_homoInEq1" (formula "236") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "236") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "236") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "236") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "236") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "236") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "236") (term "0,0,1,0"))
         (rule "add_literals" (formula "236") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "236") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "236") (term "0,0,1,0"))
         (rule "leq_literals" (formula "236") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "236"))
         (rule "inEqSimp_contradInEq1" (formula "235") (term "0") (ifseqformula "185"))
         (rule "qeq_literals" (formula "235") (term "0,0"))
          (builtin "One Step Simplification" (formula "235"))
         (rule "inEqSimp_contradInEq0" (formula "237") (term "0") (ifseqformula "186"))
         (rule "inEqSimp_homoInEq1" (formula "237") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "237") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "237") (term "1,0,0,0"))
         (rule "mul_literals" (formula "237") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "237") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "237") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "237") (term "0,0,0"))
         (rule "add_literals" (formula "237") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "237") (term "1,0,0,0"))
         (rule "add_literals" (formula "237") (term "0,0,0"))
         (rule "leq_literals" (formula "237") (term "0,0"))
          (builtin "One Step Simplification" (formula "237"))
         (rule "inEqSimp_contradInEq1" (formula "236") (term "0") (ifseqformula "185"))
         (rule "qeq_literals" (formula "236") (term "0,0"))
          (builtin "One Step Simplification" (formula "236"))
         (rule "pullOutSelect" (formula "235") (term "0") (inst "selectSK=arr_78"))
         (rule "simplifySelectOfAnonEQ" (formula "235") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "235"))
         (rule "applyEqReverse" (formula "236") (term "0") (ifseqformula "235"))
         (rule "hideAuxiliaryEq" (formula "235"))
         (rule "inEqSimp_exactShadow3" (formula "236") (ifseqformula "237"))
         (rule "mul_literals" (formula "236") (term "0,0"))
         (rule "add_zero_left" (formula "236") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "236"))
         (rule "mul_literals" (formula "236") (term "1"))
         (rule "allLeft" (formula "238") (inst "t=z_56"))
         (rule "replaceKnownSelect_taclet110_121" (formula "238") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_122" (formula "238") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "238") (inst "sk=z_75"))
         (rule "andLeft" (formula "238"))
         (rule "andLeft" (formula "238"))
         (rule "applyEq" (formula "238") (term "1,1") (ifseqformula "181"))
         (rule "inEqSimp_contradInEq0" (formula "239") (term "1,0") (ifseqformula "183"))
         (rule "inEqSimp_homoInEq1" (formula "239") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "239") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "239") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "239") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "239") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "239") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "239") (term "0,0,1,0"))
         (rule "add_literals" (formula "239") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "239") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "239") (term "0,0,1,0"))
         (rule "leq_literals" (formula "239") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "239"))
         (rule "inEqSimp_contradInEq0" (formula "238") (term "1,0") (ifseqformula "183"))
         (rule "inEqSimp_homoInEq1" (formula "238") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "238") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "238") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "238") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "238") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "238") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "238") (term "0,0,1,0"))
         (rule "add_literals" (formula "238") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "238") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "238") (term "0,0,1,0"))
         (rule "leq_literals" (formula "238") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "238"))
         (rule "inEqSimp_contradInEq1" (formula "240") (term "0,0") (ifseqformula "182"))
         (rule "qeq_literals" (formula "240") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "240"))
         (rule "inEqSimp_contradInEq1" (formula "239") (term "0") (ifseqformula "182"))
         (rule "qeq_literals" (formula "239") (term "0,0"))
          (builtin "One Step Simplification" (formula "239"))
         (rule "inEqSimp_contradInEq0" (formula "240") (term "0") (ifseqformula "183"))
         (rule "inEqSimp_homoInEq1" (formula "240") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "240") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "240") (term "1,0,0,0"))
         (rule "mul_literals" (formula "240") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "240") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "240") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "240") (term "0,0,0"))
         (rule "add_literals" (formula "240") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "240") (term "1,0,0,0"))
         (rule "add_literals" (formula "240") (term "0,0,0"))
         (rule "leq_literals" (formula "240") (term "0,0"))
          (builtin "One Step Simplification" (formula "240"))
         (rule "inEqSimp_contradInEq1" (formula "238") (term "0") (ifseqformula "182"))
         (rule "qeq_literals" (formula "238") (term "0,0"))
          (builtin "One Step Simplification" (formula "238"))
         (rule "pullOutSelect" (formula "238") (term "0") (inst "selectSK=arr_79"))
         (rule "simplifySelectOfAnonEQ" (formula "238") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "238"))
         (rule "applyEqReverse" (formula "239") (term "0") (ifseqformula "238"))
         (rule "hideAuxiliaryEq" (formula "238"))
         (rule "inEqSimp_exactShadow3" (formula "239") (ifseqformula "240"))
         (rule "mul_literals" (formula "239") (term "0,0"))
         (rule "add_zero_left" (formula "239") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "239"))
         (rule "mul_literals" (formula "239") (term "1"))
         (rule "allLeft" (formula "241") (inst "t=z_55"))
         (rule "replaceKnownSelect_taclet110_119" (formula "241") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_120" (formula "241") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "241") (inst "sk=z_76"))
         (rule "andLeft" (formula "241"))
         (rule "andLeft" (formula "241"))
         (rule "applyEq" (formula "241") (term "1,1") (ifseqformula "178"))
         (rule "inEqSimp_contradInEq0" (formula "243") (term "1,0") (ifseqformula "180"))
         (rule "inEqSimp_homoInEq1" (formula "243") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "243") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "243") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "243") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "243") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "243") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "243") (term "0,0,1,0"))
         (rule "add_literals" (formula "243") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "243") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "243") (term "0,0,1,0"))
         (rule "leq_literals" (formula "243") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "243"))
         (rule "inEqSimp_contradInEq0" (formula "242") (term "1,0") (ifseqformula "180"))
         (rule "inEqSimp_homoInEq1" (formula "242") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "242") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "242") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "242") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "242") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "242") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "242") (term "0,0,1,0"))
         (rule "add_literals" (formula "242") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "242") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "242") (term "0,0,1,0"))
         (rule "leq_literals" (formula "242") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "242"))
         (rule "inEqSimp_contradInEq1" (formula "241") (term "0,0") (ifseqformula "179"))
         (rule "qeq_literals" (formula "241") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "241"))
         (rule "inEqSimp_contradInEq0" (formula "241") (term "0") (ifseqformula "180"))
         (rule "inEqSimp_homoInEq1" (formula "241") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "241") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "241") (term "1,0,0,0"))
         (rule "mul_literals" (formula "241") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "241") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "241") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "241") (term "0,0,0"))
         (rule "add_literals" (formula "241") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "241") (term "1,0,0,0"))
         (rule "add_literals" (formula "241") (term "0,0,0"))
         (rule "leq_literals" (formula "241") (term "0,0"))
          (builtin "One Step Simplification" (formula "241"))
         (rule "inEqSimp_contradInEq1" (formula "243") (term "0") (ifseqformula "179"))
         (rule "qeq_literals" (formula "243") (term "0,0"))
          (builtin "One Step Simplification" (formula "243"))
         (rule "inEqSimp_contradInEq1" (formula "242") (term "0") (ifseqformula "179"))
         (rule "qeq_literals" (formula "242") (term "0,0"))
          (builtin "One Step Simplification" (formula "242"))
         (rule "pullOutSelect" (formula "241") (term "0") (inst "selectSK=arr_80"))
         (rule "simplifySelectOfAnonEQ" (formula "241") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "241"))
         (rule "applyEqReverse" (formula "242") (term "0") (ifseqformula "241"))
         (rule "hideAuxiliaryEq" (formula "241"))
         (rule "inEqSimp_exactShadow3" (formula "242") (ifseqformula "243"))
         (rule "mul_literals" (formula "242") (term "0,0"))
         (rule "add_zero_left" (formula "242") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "242"))
         (rule "mul_literals" (formula "242") (term "1"))
         (rule "allLeft" (formula "244") (inst "t=z_76"))
         (rule "replaceKnownSelect_taclet110_161" (formula "244") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_162" (formula "244") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "244") (inst "sk=z_77"))
         (rule "andLeft" (formula "244"))
         (rule "andLeft" (formula "244"))
         (rule "applyEq" (formula "244") (term "1,1") (ifseqformula "241"))
         (rule "inEqSimp_contradInEq1" (formula "246") (term "0,0") (ifseqformula "242"))
         (rule "qeq_literals" (formula "246") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "246"))
         (rule "inEqSimp_contradInEq1" (formula "245") (term "0,0") (ifseqformula "242"))
         (rule "qeq_literals" (formula "245") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "245"))
         (rule "inEqSimp_contradInEq0" (formula "244") (term "1,0") (ifseqformula "243"))
         (rule "inEqSimp_homoInEq1" (formula "244") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "244") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "244") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "244") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "244") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "244") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "244") (term "0,0,1,0"))
         (rule "add_literals" (formula "244") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "244") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "244") (term "0,0,1,0"))
         (rule "leq_literals" (formula "244") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "244"))
         (rule "inEqSimp_contradInEq0" (formula "246") (term "0") (ifseqformula "243"))
         (rule "inEqSimp_homoInEq1" (formula "246") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "246") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "246") (term "1,0,0,0"))
         (rule "mul_literals" (formula "246") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "246") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "246") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "246") (term "0,0,0"))
         (rule "add_literals" (formula "246") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "246") (term "1,0,0,0"))
         (rule "add_literals" (formula "246") (term "0,0,0"))
         (rule "leq_literals" (formula "246") (term "0,0"))
          (builtin "One Step Simplification" (formula "246"))
         (rule "inEqSimp_contradInEq1" (formula "244") (term "0") (ifseqformula "242"))
         (rule "qeq_literals" (formula "244") (term "0,0"))
          (builtin "One Step Simplification" (formula "244"))
         (rule "inEqSimp_contradInEq0" (formula "245") (term "0") (ifseqformula "243"))
         (rule "inEqSimp_homoInEq1" (formula "245") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "245") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "245") (term "1,0,0,0"))
         (rule "mul_literals" (formula "245") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "245") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "245") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "245") (term "0,0,0"))
         (rule "add_literals" (formula "245") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "245") (term "1,0,0,0"))
         (rule "add_literals" (formula "245") (term "0,0,0"))
         (rule "leq_literals" (formula "245") (term "0,0"))
          (builtin "One Step Simplification" (formula "245"))
         (rule "pullOutSelect" (formula "244") (term "0") (inst "selectSK=arr_81"))
         (rule "simplifySelectOfAnonEQ" (formula "244") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "244"))
         (rule "applyEqReverse" (formula "245") (term "0") (ifseqformula "244"))
         (rule "hideAuxiliaryEq" (formula "244"))
         (rule "inEqSimp_exactShadow3" (formula "245") (ifseqformula "246"))
         (rule "mul_literals" (formula "245") (term "0,0"))
         (rule "add_zero_left" (formula "245") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "245"))
         (rule "mul_literals" (formula "245") (term "1"))
         (rule "allLeft" (formula "247") (inst "t=z_75"))
         (rule "replaceKnownSelect_taclet110_159" (formula "247") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_160" (formula "247") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "247") (inst "sk=z_78"))
         (rule "andLeft" (formula "247"))
         (rule "andLeft" (formula "247"))
         (rule "applyEq" (formula "247") (term "1,1") (ifseqformula "238"))
         (rule "inEqSimp_contradInEq0" (formula "249") (term "1,0") (ifseqformula "240"))
         (rule "inEqSimp_homoInEq1" (formula "249") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "249") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "249") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "249") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "249") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "249") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "249") (term "0,0,1,0"))
         (rule "add_literals" (formula "249") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "249") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "249") (term "0,0,1,0"))
         (rule "leq_literals" (formula "249") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "249"))
         (rule "inEqSimp_contradInEq1" (formula "248") (term "0,0") (ifseqformula "239"))
         (rule "qeq_literals" (formula "248") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "248"))
         (rule "inEqSimp_contradInEq0" (formula "247") (term "1,0") (ifseqformula "240"))
         (rule "inEqSimp_homoInEq1" (formula "247") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "247") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "247") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "247") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "247") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "247") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "247") (term "0,0,1,0"))
         (rule "add_literals" (formula "247") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "247") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "247") (term "0,0,1,0"))
         (rule "leq_literals" (formula "247") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "247"))
         (rule "inEqSimp_contradInEq0" (formula "248") (term "0") (ifseqformula "240"))
         (rule "inEqSimp_homoInEq1" (formula "248") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "248") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "248") (term "1,0,0,0"))
         (rule "mul_literals" (formula "248") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "248") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "248") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "248") (term "0,0,0"))
         (rule "add_literals" (formula "248") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "248") (term "1,0,0,0"))
         (rule "add_literals" (formula "248") (term "0,0,0"))
         (rule "leq_literals" (formula "248") (term "0,0"))
          (builtin "One Step Simplification" (formula "248"))
         (rule "inEqSimp_contradInEq1" (formula "249") (term "0") (ifseqformula "239"))
         (rule "qeq_literals" (formula "249") (term "0,0"))
          (builtin "One Step Simplification" (formula "249"))
         (rule "inEqSimp_contradInEq1" (formula "247") (term "0") (ifseqformula "239"))
         (rule "qeq_literals" (formula "247") (term "0,0"))
          (builtin "One Step Simplification" (formula "247"))
         (rule "pullOutSelect" (formula "247") (term "0") (inst "selectSK=arr_82"))
         (rule "simplifySelectOfAnonEQ" (formula "247") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "247"))
         (rule "applyEqReverse" (formula "248") (term "0") (ifseqformula "247"))
         (rule "hideAuxiliaryEq" (formula "247"))
         (rule "inEqSimp_exactShadow3" (formula "248") (ifseqformula "249"))
         (rule "mul_literals" (formula "248") (term "0,0"))
         (rule "add_zero_left" (formula "248") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "248"))
         (rule "mul_literals" (formula "248") (term "1"))
         (rule "allLeft" (formula "250") (inst "t=z_74"))
         (rule "replaceKnownSelect_taclet110_157" (formula "250") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_158" (formula "250") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "250") (inst "sk=z_79"))
         (rule "andLeft" (formula "250"))
         (rule "andLeft" (formula "250"))
         (rule "applyEq" (formula "250") (term "1,1") (ifseqformula "235"))
         (rule "inEqSimp_contradInEq1" (formula "250") (term "0,0") (ifseqformula "236"))
         (rule "qeq_literals" (formula "250") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "250"))
         (rule "inEqSimp_contradInEq1" (formula "251") (term "0,0") (ifseqformula "236"))
         (rule "qeq_literals" (formula "251") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "251"))
         (rule "inEqSimp_contradInEq0" (formula "252") (term "1,0") (ifseqformula "237"))
         (rule "inEqSimp_homoInEq1" (formula "252") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "252") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "252") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "252") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "252") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "252") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "252") (term "0,0,1,0"))
         (rule "add_literals" (formula "252") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "252") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "252") (term "0,0,1,0"))
         (rule "leq_literals" (formula "252") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "252"))
         (rule "inEqSimp_contradInEq0" (formula "250") (term "0") (ifseqformula "237"))
         (rule "inEqSimp_homoInEq1" (formula "250") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "250") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "250") (term "1,0,0,0"))
         (rule "mul_literals" (formula "250") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "250") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "250") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "250") (term "0,0,0"))
         (rule "add_literals" (formula "250") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "250") (term "1,0,0,0"))
         (rule "add_literals" (formula "250") (term "0,0,0"))
         (rule "leq_literals" (formula "250") (term "0,0"))
          (builtin "One Step Simplification" (formula "250"))
         (rule "inEqSimp_contradInEq1" (formula "252") (term "0") (ifseqformula "236"))
         (rule "qeq_literals" (formula "252") (term "0,0"))
          (builtin "One Step Simplification" (formula "252"))
         (rule "inEqSimp_contradInEq0" (formula "251") (term "0") (ifseqformula "237"))
         (rule "inEqSimp_homoInEq1" (formula "251") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "251") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "251") (term "1,0,0,0"))
         (rule "mul_literals" (formula "251") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "251") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "251") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "251") (term "0,0,0"))
         (rule "add_literals" (formula "251") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "251") (term "1,0,0,0"))
         (rule "add_literals" (formula "251") (term "0,0,0"))
         (rule "leq_literals" (formula "251") (term "0,0"))
          (builtin "One Step Simplification" (formula "251"))
         (rule "pullOutSelect" (formula "250") (term "0") (inst "selectSK=arr_83"))
         (rule "simplifySelectOfAnonEQ" (formula "250") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "250"))
         (rule "applyEqReverse" (formula "251") (term "0") (ifseqformula "250"))
         (rule "hideAuxiliaryEq" (formula "250"))
         (rule "inEqSimp_exactShadow3" (formula "251") (ifseqformula "252"))
         (rule "mul_literals" (formula "251") (term "0,0"))
         (rule "add_zero_left" (formula "251") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "251"))
         (rule "mul_literals" (formula "251") (term "1"))
         (rule "allLeft" (formula "253") (inst "t=z_73"))
         (rule "replaceKnownSelect_taclet110_155" (formula "253") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_156" (formula "253") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "253") (inst "sk=z_80"))
         (rule "andLeft" (formula "253"))
         (rule "andLeft" (formula "253"))
         (rule "applyEq" (formula "253") (term "1,1") (ifseqformula "232"))
         (rule "inEqSimp_contradInEq1" (formula "254") (term "0,0") (ifseqformula "233"))
         (rule "qeq_literals" (formula "254") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "254"))
         (rule "inEqSimp_contradInEq1" (formula "255") (term "0,0") (ifseqformula "233"))
         (rule "qeq_literals" (formula "255") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "255"))
         (rule "inEqSimp_contradInEq0" (formula "253") (term "1,0") (ifseqformula "234"))
         (rule "inEqSimp_homoInEq1" (formula "253") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "253") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "253") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "253") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "253") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "253") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "253") (term "0,0,1,0"))
         (rule "add_literals" (formula "253") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "253") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "253") (term "0,0,1,0"))
         (rule "leq_literals" (formula "253") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "253"))
         (rule "inEqSimp_contradInEq1" (formula "253") (term "0") (ifseqformula "233"))
         (rule "qeq_literals" (formula "253") (term "0,0"))
          (builtin "One Step Simplification" (formula "253"))
         (rule "inEqSimp_contradInEq0" (formula "254") (term "0") (ifseqformula "234"))
         (rule "inEqSimp_homoInEq1" (formula "254") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "254") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "254") (term "1,0,0,0"))
         (rule "mul_literals" (formula "254") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "254") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "254") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "254") (term "0,0,0"))
         (rule "add_literals" (formula "254") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "254") (term "1,0,0,0"))
         (rule "add_literals" (formula "254") (term "0,0,0"))
         (rule "leq_literals" (formula "254") (term "0,0"))
          (builtin "One Step Simplification" (formula "254"))
         (rule "inEqSimp_contradInEq0" (formula "255") (term "0") (ifseqformula "234"))
         (rule "inEqSimp_homoInEq1" (formula "255") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "255") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "255") (term "1,0,0,0"))
         (rule "mul_literals" (formula "255") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "255") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "255") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "255") (term "0,0,0"))
         (rule "add_literals" (formula "255") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "255") (term "1,0,0,0"))
         (rule "add_literals" (formula "255") (term "0,0,0"))
         (rule "leq_literals" (formula "255") (term "0,0"))
          (builtin "One Step Simplification" (formula "255"))
         (rule "pullOutSelect" (formula "253") (term "0") (inst "selectSK=arr_84"))
         (rule "simplifySelectOfAnonEQ" (formula "253") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "253"))
         (rule "applyEqReverse" (formula "254") (term "0") (ifseqformula "253"))
         (rule "hideAuxiliaryEq" (formula "253"))
         (rule "inEqSimp_exactShadow3" (formula "254") (ifseqformula "255"))
         (rule "mul_literals" (formula "254") (term "0,0"))
         (rule "add_zero_left" (formula "254") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "254"))
         (rule "mul_literals" (formula "254") (term "1"))
         (rule "allLeft" (formula "256") (inst "t=z_72"))
         (rule "replaceKnownSelect_taclet110_153" (formula "256") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_154" (formula "256") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "256") (inst "sk=z_81"))
         (rule "andLeft" (formula "256"))
         (rule "andLeft" (formula "256"))
         (rule "applyEq" (formula "256") (term "1,1") (ifseqformula "229"))
         (rule "inEqSimp_contradInEq0" (formula "258") (term "1,0") (ifseqformula "231"))
         (rule "inEqSimp_homoInEq1" (formula "258") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "258") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "258") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "258") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "258") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "258") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "258") (term "0,0,1,0"))
         (rule "add_literals" (formula "258") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "258") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "258") (term "0,0,1,0"))
         (rule "leq_literals" (formula "258") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "258"))
         (rule "inEqSimp_contradInEq0" (formula "256") (term "1,0") (ifseqformula "231"))
         (rule "inEqSimp_homoInEq1" (formula "256") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "256") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "256") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "256") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "256") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "256") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "256") (term "0,0,1,0"))
         (rule "add_literals" (formula "256") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "256") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "256") (term "0,0,1,0"))
         (rule "leq_literals" (formula "256") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "256"))
         (rule "inEqSimp_contradInEq0" (formula "257") (term "1,0") (ifseqformula "231"))
         (rule "inEqSimp_homoInEq1" (formula "257") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "257") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "257") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "257") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "257") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "257") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "257") (term "0,0,1,0"))
         (rule "add_literals" (formula "257") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "257") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "257") (term "0,0,1,0"))
         (rule "leq_literals" (formula "257") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "257"))
         (rule "inEqSimp_contradInEq1" (formula "258") (term "0") (ifseqformula "230"))
         (rule "qeq_literals" (formula "258") (term "0,0"))
          (builtin "One Step Simplification" (formula "258"))
         (rule "inEqSimp_contradInEq1" (formula "257") (term "0") (ifseqformula "230"))
         (rule "qeq_literals" (formula "257") (term "0,0"))
          (builtin "One Step Simplification" (formula "257"))
         (rule "inEqSimp_contradInEq1" (formula "256") (term "0") (ifseqformula "230"))
         (rule "qeq_literals" (formula "256") (term "0,0"))
          (builtin "One Step Simplification" (formula "256"))
         (rule "pullOutSelect" (formula "256") (term "0") (inst "selectSK=arr_85"))
         (rule "simplifySelectOfAnonEQ" (formula "256") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "256"))
         (rule "applyEqReverse" (formula "257") (term "0") (ifseqformula "256"))
         (rule "hideAuxiliaryEq" (formula "256"))
         (rule "inEqSimp_exactShadow3" (formula "257") (ifseqformula "258"))
         (rule "mul_literals" (formula "257") (term "0,0"))
         (rule "add_zero_left" (formula "257") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "257"))
         (rule "mul_literals" (formula "257") (term "1"))
         (rule "allLeft" (formula "259") (inst "t=z_71"))
         (rule "replaceKnownSelect_taclet110_151" (formula "259") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_152" (formula "259") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "259") (inst "sk=z_82"))
         (rule "andLeft" (formula "259"))
         (rule "andLeft" (formula "259"))
         (rule "applyEq" (formula "259") (term "1,1") (ifseqformula "226"))
         (rule "inEqSimp_contradInEq0" (formula "259") (term "1,0") (ifseqformula "228"))
         (rule "inEqSimp_homoInEq1" (formula "259") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "259") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "259") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "259") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "259") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "259") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "259") (term "0,0,1,0"))
         (rule "add_literals" (formula "259") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "259") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "259") (term "0,0,1,0"))
         (rule "leq_literals" (formula "259") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "259"))
         (rule "inEqSimp_contradInEq1" (formula "260") (term "0,0") (ifseqformula "227"))
         (rule "qeq_literals" (formula "260") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "260"))
         (rule "inEqSimp_contradInEq0" (formula "261") (term "1,0") (ifseqformula "228"))
         (rule "inEqSimp_homoInEq1" (formula "261") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "261") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "261") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "261") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "261") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "261") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "261") (term "0,0,1,0"))
         (rule "add_literals" (formula "261") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "261") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "261") (term "0,0,1,0"))
         (rule "leq_literals" (formula "261") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "261"))
         (rule "inEqSimp_contradInEq0" (formula "260") (term "0") (ifseqformula "228"))
         (rule "inEqSimp_homoInEq1" (formula "260") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "260") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "260") (term "1,0,0,0"))
         (rule "mul_literals" (formula "260") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "260") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "260") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "260") (term "0,0,0"))
         (rule "add_literals" (formula "260") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "260") (term "1,0,0,0"))
         (rule "add_literals" (formula "260") (term "0,0,0"))
         (rule "leq_literals" (formula "260") (term "0,0"))
          (builtin "One Step Simplification" (formula "260"))
         (rule "inEqSimp_contradInEq1" (formula "259") (term "0") (ifseqformula "227"))
         (rule "qeq_literals" (formula "259") (term "0,0"))
          (builtin "One Step Simplification" (formula "259"))
         (rule "inEqSimp_contradInEq1" (formula "261") (term "0") (ifseqformula "227"))
         (rule "qeq_literals" (formula "261") (term "0,0"))
          (builtin "One Step Simplification" (formula "261"))
         (rule "pullOutSelect" (formula "259") (term "0") (inst "selectSK=arr_86"))
         (rule "simplifySelectOfAnonEQ" (formula "259") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "259"))
         (rule "applyEqReverse" (formula "260") (term "0") (ifseqformula "259"))
         (rule "hideAuxiliaryEq" (formula "259"))
         (rule "inEqSimp_exactShadow3" (formula "260") (ifseqformula "261"))
         (rule "mul_literals" (formula "260") (term "0,0"))
         (rule "add_zero_left" (formula "260") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "260"))
         (rule "mul_literals" (formula "260") (term "1"))
         (rule "allLeft" (formula "262") (inst "t=z_70"))
         (rule "replaceKnownSelect_taclet110_149" (formula "262") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_150" (formula "262") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "262") (inst "sk=z_83"))
         (rule "andLeft" (formula "262"))
         (rule "andLeft" (formula "262"))
         (rule "applyEq" (formula "262") (term "1,1") (ifseqformula "223"))
         (rule "inEqSimp_contradInEq0" (formula "263") (term "1,0") (ifseqformula "225"))
         (rule "inEqSimp_homoInEq1" (formula "263") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "263") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "263") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "263") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "263") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "263") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "263") (term "0,0,1,0"))
         (rule "add_literals" (formula "263") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "263") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "263") (term "0,0,1,0"))
         (rule "leq_literals" (formula "263") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "263"))
         (rule "inEqSimp_contradInEq0" (formula "262") (term "1,0") (ifseqformula "225"))
         (rule "inEqSimp_homoInEq1" (formula "262") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "262") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "262") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "262") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "262") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "262") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "262") (term "0,0,1,0"))
         (rule "add_literals" (formula "262") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "262") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "262") (term "0,0,1,0"))
         (rule "leq_literals" (formula "262") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "262"))
         (rule "inEqSimp_contradInEq1" (formula "264") (term "0,0") (ifseqformula "224"))
         (rule "qeq_literals" (formula "264") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "264"))
         (rule "inEqSimp_contradInEq1" (formula "263") (term "0") (ifseqformula "224"))
         (rule "qeq_literals" (formula "263") (term "0,0"))
          (builtin "One Step Simplification" (formula "263"))
         (rule "inEqSimp_contradInEq0" (formula "264") (term "0") (ifseqformula "225"))
         (rule "inEqSimp_homoInEq1" (formula "264") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "264") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "264") (term "1,0,0,0"))
         (rule "mul_literals" (formula "264") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "264") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "264") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "264") (term "0,0,0"))
         (rule "add_literals" (formula "264") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "264") (term "1,0,0,0"))
         (rule "add_literals" (formula "264") (term "0,0,0"))
         (rule "leq_literals" (formula "264") (term "0,0"))
          (builtin "One Step Simplification" (formula "264"))
         (rule "inEqSimp_contradInEq1" (formula "262") (term "0") (ifseqformula "224"))
         (rule "qeq_literals" (formula "262") (term "0,0"))
          (builtin "One Step Simplification" (formula "262"))
         (rule "pullOutSelect" (formula "262") (term "0") (inst "selectSK=arr_87"))
         (rule "simplifySelectOfAnonEQ" (formula "262") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "262"))
         (rule "applyEqReverse" (formula "263") (term "0") (ifseqformula "262"))
         (rule "hideAuxiliaryEq" (formula "262"))
         (rule "inEqSimp_exactShadow3" (formula "263") (ifseqformula "264"))
         (rule "mul_literals" (formula "263") (term "0,0"))
         (rule "add_zero_left" (formula "263") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "263"))
         (rule "mul_literals" (formula "263") (term "1"))
         (rule "allLeft" (formula "265") (inst "t=z_69"))
         (rule "replaceKnownSelect_taclet110_147" (formula "265") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_148" (formula "265") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "265") (inst "sk=z_84"))
         (rule "andLeft" (formula "265"))
         (rule "andLeft" (formula "265"))
         (rule "applyEq" (formula "265") (term "1,1") (ifseqformula "220"))
         (rule "inEqSimp_contradInEq1" (formula "265") (term "0,0") (ifseqformula "221"))
         (rule "qeq_literals" (formula "265") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "265"))
         (rule "inEqSimp_contradInEq1" (formula "266") (term "0,0") (ifseqformula "221"))
         (rule "qeq_literals" (formula "266") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "266"))
         (rule "inEqSimp_contradInEq0" (formula "267") (term "1,0") (ifseqformula "222"))
         (rule "inEqSimp_homoInEq1" (formula "267") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "267") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "267") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "267") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "267") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "267") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "267") (term "0,0,1,0"))
         (rule "add_literals" (formula "267") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "267") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "267") (term "0,0,1,0"))
         (rule "leq_literals" (formula "267") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "267"))
         (rule "inEqSimp_contradInEq0" (formula "265") (term "0") (ifseqformula "222"))
         (rule "inEqSimp_homoInEq1" (formula "265") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "265") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "265") (term "1,0,0,0"))
         (rule "mul_literals" (formula "265") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "265") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "265") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "265") (term "0,0,0"))
         (rule "add_literals" (formula "265") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "265") (term "1,0,0,0"))
         (rule "add_literals" (formula "265") (term "0,0,0"))
         (rule "leq_literals" (formula "265") (term "0,0"))
          (builtin "One Step Simplification" (formula "265"))
         (rule "inEqSimp_contradInEq0" (formula "266") (term "0") (ifseqformula "222"))
         (rule "inEqSimp_homoInEq1" (formula "266") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "266") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "266") (term "1,0,0,0"))
         (rule "mul_literals" (formula "266") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "266") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "266") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "266") (term "0,0,0"))
         (rule "add_literals" (formula "266") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "266") (term "1,0,0,0"))
         (rule "add_literals" (formula "266") (term "0,0,0"))
         (rule "leq_literals" (formula "266") (term "0,0"))
          (builtin "One Step Simplification" (formula "266"))
         (rule "inEqSimp_contradInEq1" (formula "267") (term "0") (ifseqformula "221"))
         (rule "qeq_literals" (formula "267") (term "0,0"))
          (builtin "One Step Simplification" (formula "267"))
         (rule "pullOutSelect" (formula "265") (term "0") (inst "selectSK=arr_88"))
         (rule "simplifySelectOfAnonEQ" (formula "265") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "265"))
         (rule "applyEqReverse" (formula "266") (term "0") (ifseqformula "265"))
         (rule "hideAuxiliaryEq" (formula "265"))
         (rule "inEqSimp_exactShadow3" (formula "266") (ifseqformula "267"))
         (rule "mul_literals" (formula "266") (term "0,0"))
         (rule "add_zero_left" (formula "266") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "266"))
         (rule "mul_literals" (formula "266") (term "1"))
         (rule "allLeft" (formula "268") (inst "t=z_68"))
         (rule "replaceKnownSelect_taclet110_145" (formula "268") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_146" (formula "268") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "268") (inst "sk=z_85"))
         (rule "andLeft" (formula "268"))
         (rule "andLeft" (formula "268"))
         (rule "applyEq" (formula "268") (term "1,1") (ifseqformula "217"))
         (rule "inEqSimp_contradInEq0" (formula "268") (term "1,0") (ifseqformula "219"))
         (rule "inEqSimp_homoInEq1" (formula "268") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "268") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "268") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "268") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "268") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "268") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "268") (term "0,0,1,0"))
         (rule "add_literals" (formula "268") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "268") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "268") (term "0,0,1,0"))
         (rule "leq_literals" (formula "268") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "268"))
         (rule "inEqSimp_contradInEq0" (formula "270") (term "1,0") (ifseqformula "219"))
         (rule "inEqSimp_homoInEq1" (formula "270") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "270") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "270") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "270") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "270") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "270") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "270") (term "0,0,1,0"))
         (rule "add_literals" (formula "270") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "270") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "270") (term "0,0,1,0"))
         (rule "leq_literals" (formula "270") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "270"))
         (rule "inEqSimp_contradInEq1" (formula "269") (term "0,0") (ifseqformula "218"))
         (rule "qeq_literals" (formula "269") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "269"))
         (rule "inEqSimp_contradInEq1" (formula "268") (term "0") (ifseqformula "218"))
         (rule "qeq_literals" (formula "268") (term "0,0"))
          (builtin "One Step Simplification" (formula "268"))
         (rule "inEqSimp_contradInEq1" (formula "270") (term "0") (ifseqformula "218"))
         (rule "qeq_literals" (formula "270") (term "0,0"))
          (builtin "One Step Simplification" (formula "270"))
         (rule "inEqSimp_contradInEq0" (formula "269") (term "0") (ifseqformula "219"))
         (rule "inEqSimp_homoInEq1" (formula "269") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "269") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "269") (term "1,0,0,0"))
         (rule "mul_literals" (formula "269") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "269") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "269") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "269") (term "0,0,0"))
         (rule "add_literals" (formula "269") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "269") (term "1,0,0,0"))
         (rule "add_literals" (formula "269") (term "0,0,0"))
         (rule "leq_literals" (formula "269") (term "0,0"))
          (builtin "One Step Simplification" (formula "269"))
         (rule "pullOutSelect" (formula "268") (term "0") (inst "selectSK=arr_89"))
         (rule "simplifySelectOfAnonEQ" (formula "268") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "268"))
         (rule "applyEqReverse" (formula "269") (term "0") (ifseqformula "268"))
         (rule "hideAuxiliaryEq" (formula "268"))
         (rule "inEqSimp_exactShadow3" (formula "269") (ifseqformula "270"))
         (rule "mul_literals" (formula "269") (term "0,0"))
         (rule "add_zero_left" (formula "269") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "269"))
         (rule "mul_literals" (formula "269") (term "1"))
         (rule "allLeft" (formula "271") (inst "t=z_67"))
         (rule "replaceKnownSelect_taclet110_143" (formula "271") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_144" (formula "271") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "271") (inst "sk=z_86"))
         (rule "andLeft" (formula "271"))
         (rule "andLeft" (formula "271"))
         (rule "applyEq" (formula "271") (term "1,1") (ifseqformula "214"))
         (rule "inEqSimp_contradInEq0" (formula "273") (term "1,0") (ifseqformula "216"))
         (rule "inEqSimp_homoInEq1" (formula "273") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "273") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "273") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "273") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "273") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "273") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "273") (term "0,0,1,0"))
         (rule "add_literals" (formula "273") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "273") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "273") (term "0,0,1,0"))
         (rule "leq_literals" (formula "273") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "273"))
         (rule "inEqSimp_contradInEq0" (formula "272") (term "1,0") (ifseqformula "216"))
         (rule "inEqSimp_homoInEq1" (formula "272") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "272") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "272") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "272") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "272") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "272") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "272") (term "0,0,1,0"))
         (rule "add_literals" (formula "272") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "272") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "272") (term "0,0,1,0"))
         (rule "leq_literals" (formula "272") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "272"))
         (rule "inEqSimp_contradInEq1" (formula "271") (term "0,0") (ifseqformula "215"))
         (rule "qeq_literals" (formula "271") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "271"))
         (rule "inEqSimp_contradInEq1" (formula "273") (term "0") (ifseqformula "215"))
         (rule "qeq_literals" (formula "273") (term "0,0"))
          (builtin "One Step Simplification" (formula "273"))
         (rule "inEqSimp_contradInEq1" (formula "272") (term "0") (ifseqformula "215"))
         (rule "qeq_literals" (formula "272") (term "0,0"))
          (builtin "One Step Simplification" (formula "272"))
         (rule "inEqSimp_contradInEq0" (formula "271") (term "0") (ifseqformula "216"))
         (rule "inEqSimp_homoInEq1" (formula "271") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "271") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "271") (term "1,0,0,0"))
         (rule "mul_literals" (formula "271") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "271") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "271") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "271") (term "0,0,0"))
         (rule "add_literals" (formula "271") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "271") (term "1,0,0,0"))
         (rule "add_literals" (formula "271") (term "0,0,0"))
         (rule "leq_literals" (formula "271") (term "0,0"))
          (builtin "One Step Simplification" (formula "271"))
         (rule "pullOutSelect" (formula "271") (term "0") (inst "selectSK=arr_90"))
         (rule "simplifySelectOfAnonEQ" (formula "271") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "271"))
         (rule "applyEqReverse" (formula "272") (term "0") (ifseqformula "271"))
         (rule "hideAuxiliaryEq" (formula "271"))
         (rule "inEqSimp_exactShadow3" (formula "272") (ifseqformula "273"))
         (rule "mul_literals" (formula "272") (term "0,0"))
         (rule "add_zero_left" (formula "272") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "272"))
         (rule "mul_literals" (formula "272") (term "1"))
         (rule "allLeft" (formula "274") (inst "t=z_66"))
         (rule "replaceKnownSelect_taclet110_141" (formula "274") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_142" (formula "274") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "274") (inst "sk=z_87"))
         (rule "andLeft" (formula "274"))
         (rule "andLeft" (formula "274"))
         (rule "applyEq" (formula "274") (term "1,1") (ifseqformula "211"))
         (rule "inEqSimp_contradInEq1" (formula "275") (term "0,0") (ifseqformula "212"))
         (rule "qeq_literals" (formula "275") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "275"))
         (rule "inEqSimp_contradInEq1" (formula "274") (term "0,0") (ifseqformula "212"))
         (rule "qeq_literals" (formula "274") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "274"))
         (rule "inEqSimp_contradInEq0" (formula "276") (term "1,0") (ifseqformula "213"))
         (rule "inEqSimp_homoInEq1" (formula "276") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "276") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "276") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "276") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "276") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "276") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "276") (term "0,0,1,0"))
         (rule "add_literals" (formula "276") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "276") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "276") (term "0,0,1,0"))
         (rule "leq_literals" (formula "276") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "276"))
         (rule "inEqSimp_contradInEq0" (formula "275") (term "0") (ifseqformula "213"))
         (rule "inEqSimp_homoInEq1" (formula "275") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "275") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "275") (term "1,0,0,0"))
         (rule "mul_literals" (formula "275") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "275") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "275") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "275") (term "0,0,0"))
         (rule "add_literals" (formula "275") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "275") (term "1,0,0,0"))
         (rule "add_literals" (formula "275") (term "0,0,0"))
         (rule "leq_literals" (formula "275") (term "0,0"))
          (builtin "One Step Simplification" (formula "275"))
         (rule "inEqSimp_contradInEq0" (formula "274") (term "0") (ifseqformula "213"))
         (rule "inEqSimp_homoInEq1" (formula "274") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "274") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "274") (term "1,0,0,0"))
         (rule "mul_literals" (formula "274") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "274") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "274") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "274") (term "0,0,0"))
         (rule "add_literals" (formula "274") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "274") (term "1,0,0,0"))
         (rule "add_literals" (formula "274") (term "0,0,0"))
         (rule "leq_literals" (formula "274") (term "0,0"))
          (builtin "One Step Simplification" (formula "274"))
         (rule "inEqSimp_contradInEq1" (formula "276") (term "0") (ifseqformula "212"))
         (rule "qeq_literals" (formula "276") (term "0,0"))
          (builtin "One Step Simplification" (formula "276"))
         (rule "pullOutSelect" (formula "274") (term "0") (inst "selectSK=arr_91"))
         (rule "simplifySelectOfAnonEQ" (formula "274") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "274"))
         (rule "applyEqReverse" (formula "275") (term "0") (ifseqformula "274"))
         (rule "hideAuxiliaryEq" (formula "274"))
         (rule "inEqSimp_exactShadow3" (formula "275") (ifseqformula "276"))
         (rule "mul_literals" (formula "275") (term "0,0"))
         (rule "add_zero_left" (formula "275") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "275"))
         (rule "mul_literals" (formula "275") (term "1"))
         (rule "allLeft" (formula "277") (inst "t=z_87"))
         (rule "replaceKnownSelect_taclet110_183" (formula "277") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_184" (formula "277") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "277") (inst "sk=z_88"))
         (rule "andLeft" (formula "277"))
         (rule "andLeft" (formula "277"))
         (rule "applyEq" (formula "277") (term "1,1") (ifseqformula "274"))
         (rule "inEqSimp_contradInEq1" (formula "279") (term "0,0") (ifseqformula "275"))
         (rule "qeq_literals" (formula "279") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "279"))
         (rule "inEqSimp_contradInEq0" (formula "278") (term "1,0") (ifseqformula "276"))
         (rule "inEqSimp_homoInEq1" (formula "278") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "278") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "278") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "278") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "278") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "278") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "278") (term "0,0,1,0"))
         (rule "add_literals" (formula "278") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "278") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "278") (term "0,0,1,0"))
         (rule "leq_literals" (formula "278") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "278"))
         (rule "inEqSimp_contradInEq1" (formula "277") (term "0,0") (ifseqformula "275"))
         (rule "qeq_literals" (formula "277") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "277"))
         (rule "inEqSimp_contradInEq0" (formula "279") (term "0") (ifseqformula "276"))
         (rule "inEqSimp_homoInEq1" (formula "279") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "279") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "279") (term "1,0,0,0"))
         (rule "mul_literals" (formula "279") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "279") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "279") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "279") (term "0,0,0"))
         (rule "add_literals" (formula "279") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "279") (term "1,0,0,0"))
         (rule "add_literals" (formula "279") (term "0,0,0"))
         (rule "leq_literals" (formula "279") (term "0,0"))
          (builtin "One Step Simplification" (formula "279"))
         (rule "inEqSimp_contradInEq1" (formula "278") (term "0") (ifseqformula "275"))
         (rule "qeq_literals" (formula "278") (term "0,0"))
          (builtin "One Step Simplification" (formula "278"))
         (rule "inEqSimp_contradInEq0" (formula "277") (term "0") (ifseqformula "276"))
         (rule "inEqSimp_homoInEq1" (formula "277") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "277") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "277") (term "1,0,0,0"))
         (rule "mul_literals" (formula "277") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "277") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "277") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "277") (term "0,0,0"))
         (rule "add_literals" (formula "277") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "277") (term "1,0,0,0"))
         (rule "add_literals" (formula "277") (term "0,0,0"))
         (rule "leq_literals" (formula "277") (term "0,0"))
          (builtin "One Step Simplification" (formula "277"))
         (rule "pullOutSelect" (formula "277") (term "0") (inst "selectSK=arr_92"))
         (rule "simplifySelectOfAnonEQ" (formula "277") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "277"))
         (rule "applyEqReverse" (formula "278") (term "0") (ifseqformula "277"))
         (rule "hideAuxiliaryEq" (formula "277"))
         (rule "inEqSimp_exactShadow3" (formula "278") (ifseqformula "279"))
         (rule "mul_literals" (formula "278") (term "0,0"))
         (rule "add_zero_left" (formula "278") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "278"))
         (rule "mul_literals" (formula "278") (term "1"))
         (rule "allLeft" (formula "280") (inst "t=z_86"))
         (rule "replaceKnownSelect_taclet110_181" (formula "280") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_182" (formula "280") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "280") (inst "sk=z_89"))
         (rule "andLeft" (formula "280"))
         (rule "andLeft" (formula "280"))
         (rule "applyEq" (formula "280") (term "1,1") (ifseqformula "271"))
         (rule "inEqSimp_contradInEq1" (formula "282") (term "0,0") (ifseqformula "272"))
         (rule "qeq_literals" (formula "282") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "282"))
         (rule "inEqSimp_contradInEq0" (formula "280") (term "1,0") (ifseqformula "273"))
         (rule "inEqSimp_homoInEq1" (formula "280") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "280") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "280") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "280") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "280") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "280") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "280") (term "0,0,1,0"))
         (rule "add_literals" (formula "280") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "280") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "280") (term "0,0,1,0"))
         (rule "leq_literals" (formula "280") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "280"))
         (rule "inEqSimp_contradInEq0" (formula "281") (term "1,0") (ifseqformula "273"))
         (rule "inEqSimp_homoInEq1" (formula "281") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "281") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "281") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "281") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "281") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "281") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "281") (term "0,0,1,0"))
         (rule "add_literals" (formula "281") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "281") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "281") (term "0,0,1,0"))
         (rule "leq_literals" (formula "281") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "281"))
         (rule "inEqSimp_contradInEq0" (formula "282") (term "0") (ifseqformula "273"))
         (rule "inEqSimp_homoInEq1" (formula "282") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "282") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "282") (term "1,0,0,0"))
         (rule "mul_literals" (formula "282") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "282") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "282") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "282") (term "0,0,0"))
         (rule "add_literals" (formula "282") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "282") (term "1,0,0,0"))
         (rule "add_literals" (formula "282") (term "0,0,0"))
         (rule "leq_literals" (formula "282") (term "0,0"))
          (builtin "One Step Simplification" (formula "282"))
         (rule "inEqSimp_contradInEq1" (formula "281") (term "0") (ifseqformula "272"))
         (rule "qeq_literals" (formula "281") (term "0,0"))
          (builtin "One Step Simplification" (formula "281"))
         (rule "inEqSimp_contradInEq1" (formula "280") (term "0") (ifseqformula "272"))
         (rule "qeq_literals" (formula "280") (term "0,0"))
          (builtin "One Step Simplification" (formula "280"))
         (rule "pullOutSelect" (formula "280") (term "0") (inst "selectSK=arr_93"))
         (rule "simplifySelectOfAnonEQ" (formula "280") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "280"))
         (rule "applyEqReverse" (formula "281") (term "0") (ifseqformula "280"))
         (rule "hideAuxiliaryEq" (formula "280"))
         (rule "inEqSimp_exactShadow3" (formula "281") (ifseqformula "282"))
         (rule "mul_literals" (formula "281") (term "0,0"))
         (rule "add_zero_left" (formula "281") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "281"))
         (rule "mul_literals" (formula "281") (term "1"))
         (rule "allLeft" (formula "283") (inst "t=z_85"))
         (rule "replaceKnownSelect_taclet110_179" (formula "283") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_180" (formula "283") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "283") (inst "sk=z_90"))
         (rule "andLeft" (formula "283"))
         (rule "andLeft" (formula "283"))
         (rule "applyEq" (formula "283") (term "1,1") (ifseqformula "268"))
         (rule "inEqSimp_contradInEq0" (formula "285") (term "1,0") (ifseqformula "270"))
         (rule "inEqSimp_homoInEq1" (formula "285") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "285") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "285") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "285") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "285") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "285") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "285") (term "0,0,1,0"))
         (rule "add_literals" (formula "285") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "285") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "285") (term "0,0,1,0"))
         (rule "leq_literals" (formula "285") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "285"))
         (rule "inEqSimp_contradInEq0" (formula "284") (term "1,0") (ifseqformula "270"))
         (rule "inEqSimp_homoInEq1" (formula "284") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "284") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "284") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "284") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "284") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "284") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "284") (term "0,0,1,0"))
         (rule "add_literals" (formula "284") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "284") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "284") (term "0,0,1,0"))
         (rule "leq_literals" (formula "284") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "284"))
         (rule "inEqSimp_contradInEq1" (formula "283") (term "0,0") (ifseqformula "269"))
         (rule "qeq_literals" (formula "283") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "283"))
         (rule "inEqSimp_contradInEq1" (formula "285") (term "0") (ifseqformula "269"))
         (rule "qeq_literals" (formula "285") (term "0,0"))
          (builtin "One Step Simplification" (formula "285"))
         (rule "inEqSimp_contradInEq0" (formula "283") (term "0") (ifseqformula "270"))
         (rule "inEqSimp_homoInEq1" (formula "283") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "283") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "283") (term "1,0,0,0"))
         (rule "mul_literals" (formula "283") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "283") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "283") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "283") (term "0,0,0"))
         (rule "add_literals" (formula "283") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "283") (term "1,0,0,0"))
         (rule "add_literals" (formula "283") (term "0,0,0"))
         (rule "leq_literals" (formula "283") (term "0,0"))
          (builtin "One Step Simplification" (formula "283"))
         (rule "inEqSimp_contradInEq1" (formula "284") (term "0") (ifseqformula "269"))
         (rule "qeq_literals" (formula "284") (term "0,0"))
          (builtin "One Step Simplification" (formula "284"))
         (rule "pullOutSelect" (formula "283") (term "0") (inst "selectSK=arr_94"))
         (rule "simplifySelectOfAnonEQ" (formula "283") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "283"))
         (rule "applyEqReverse" (formula "284") (term "0") (ifseqformula "283"))
         (rule "hideAuxiliaryEq" (formula "283"))
         (rule "inEqSimp_exactShadow3" (formula "284") (ifseqformula "285"))
         (rule "mul_literals" (formula "284") (term "0,0"))
         (rule "add_zero_left" (formula "284") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "284"))
         (rule "mul_literals" (formula "284") (term "1"))
         (rule "allLeft" (formula "286") (inst "t=z_84"))
         (rule "replaceKnownSelect_taclet110_177" (formula "286") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_178" (formula "286") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "286") (inst "sk=z_91"))
         (rule "andLeft" (formula "286"))
         (rule "andLeft" (formula "286"))
         (rule "applyEq" (formula "286") (term "1,1") (ifseqformula "265"))
         (rule "inEqSimp_contradInEq0" (formula "287") (term "1,0") (ifseqformula "267"))
         (rule "inEqSimp_homoInEq1" (formula "287") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "287") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "287") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "287") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "287") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "287") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "287") (term "0,0,1,0"))
         (rule "add_literals" (formula "287") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "287") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "287") (term "0,0,1,0"))
         (rule "leq_literals" (formula "287") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "287"))
         (rule "inEqSimp_contradInEq1" (formula "286") (term "0,0") (ifseqformula "266"))
         (rule "qeq_literals" (formula "286") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "286"))
         (rule "inEqSimp_contradInEq0" (formula "288") (term "1,0") (ifseqformula "267"))
         (rule "inEqSimp_homoInEq1" (formula "288") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "288") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "288") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "288") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "288") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "288") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "288") (term "0,0,1,0"))
         (rule "add_literals" (formula "288") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "288") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "288") (term "0,0,1,0"))
         (rule "leq_literals" (formula "288") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "288"))
         (rule "inEqSimp_contradInEq1" (formula "287") (term "0") (ifseqformula "266"))
         (rule "qeq_literals" (formula "287") (term "0,0"))
          (builtin "One Step Simplification" (formula "287"))
         (rule "inEqSimp_contradInEq0" (formula "286") (term "0") (ifseqformula "267"))
         (rule "inEqSimp_homoInEq1" (formula "286") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "286") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "286") (term "1,0,0,0"))
         (rule "mul_literals" (formula "286") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "286") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "286") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "286") (term "0,0,0"))
         (rule "add_literals" (formula "286") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "286") (term "1,0,0,0"))
         (rule "add_literals" (formula "286") (term "0,0,0"))
         (rule "leq_literals" (formula "286") (term "0,0"))
          (builtin "One Step Simplification" (formula "286"))
         (rule "inEqSimp_contradInEq1" (formula "288") (term "0") (ifseqformula "266"))
         (rule "qeq_literals" (formula "288") (term "0,0"))
          (builtin "One Step Simplification" (formula "288"))
         (rule "pullOutSelect" (formula "286") (term "0") (inst "selectSK=arr_95"))
         (rule "simplifySelectOfAnonEQ" (formula "286") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "286"))
         (rule "applyEqReverse" (formula "287") (term "0") (ifseqformula "286"))
         (rule "hideAuxiliaryEq" (formula "286"))
         (rule "inEqSimp_exactShadow3" (formula "287") (ifseqformula "288"))
         (rule "mul_literals" (formula "287") (term "0,0"))
         (rule "add_zero_left" (formula "287") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "287"))
         (rule "mul_literals" (formula "287") (term "1"))
         (rule "allLeft" (formula "289") (inst "t=z_83"))
         (rule "replaceKnownSelect_taclet110_175" (formula "289") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_176" (formula "289") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "289") (inst "sk=z_92"))
         (rule "andLeft" (formula "289"))
         (rule "andLeft" (formula "289"))
         (rule "applyEq" (formula "289") (term "1,1") (ifseqformula "262"))
         (rule "inEqSimp_contradInEq1" (formula "291") (term "0,0") (ifseqformula "263"))
         (rule "qeq_literals" (formula "291") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "291"))
         (rule "inEqSimp_contradInEq1" (formula "289") (term "0,0") (ifseqformula "263"))
         (rule "qeq_literals" (formula "289") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "289"))
         (rule "inEqSimp_contradInEq1" (formula "290") (term "0,0") (ifseqformula "263"))
         (rule "qeq_literals" (formula "290") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "290"))
         (rule "inEqSimp_contradInEq0" (formula "290") (term "0") (ifseqformula "264"))
         (rule "inEqSimp_homoInEq1" (formula "290") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "290") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "290") (term "1,0,0,0"))
         (rule "mul_literals" (formula "290") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "290") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "290") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "290") (term "0,0,0"))
         (rule "add_literals" (formula "290") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "290") (term "1,0,0,0"))
         (rule "add_literals" (formula "290") (term "0,0,0"))
         (rule "leq_literals" (formula "290") (term "0,0"))
          (builtin "One Step Simplification" (formula "290"))
         (rule "inEqSimp_contradInEq0" (formula "291") (term "0") (ifseqformula "264"))
         (rule "inEqSimp_homoInEq1" (formula "291") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "291") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "291") (term "1,0,0,0"))
         (rule "mul_literals" (formula "291") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "291") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "291") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "291") (term "0,0,0"))
         (rule "add_literals" (formula "291") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "291") (term "1,0,0,0"))
         (rule "add_literals" (formula "291") (term "0,0,0"))
         (rule "leq_literals" (formula "291") (term "0,0"))
          (builtin "One Step Simplification" (formula "291"))
         (rule "inEqSimp_contradInEq0" (formula "289") (term "0") (ifseqformula "264"))
         (rule "inEqSimp_homoInEq1" (formula "289") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "289") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "289") (term "1,0,0,0"))
         (rule "mul_literals" (formula "289") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "289") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "289") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "289") (term "0,0,0"))
         (rule "add_literals" (formula "289") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "289") (term "1,0,0,0"))
         (rule "add_literals" (formula "289") (term "0,0,0"))
         (rule "leq_literals" (formula "289") (term "0,0"))
          (builtin "One Step Simplification" (formula "289"))
         (rule "pullOutSelect" (formula "289") (term "0") (inst "selectSK=arr_96"))
         (rule "simplifySelectOfAnonEQ" (formula "289") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "289"))
         (rule "applyEqReverse" (formula "290") (term "0") (ifseqformula "289"))
         (rule "hideAuxiliaryEq" (formula "289"))
         (rule "inEqSimp_exactShadow3" (formula "290") (ifseqformula "291"))
         (rule "mul_literals" (formula "290") (term "0,0"))
         (rule "add_zero_left" (formula "290") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "290"))
         (rule "mul_literals" (formula "290") (term "1"))
         (rule "allLeft" (formula "292") (inst "t=z_82"))
         (rule "replaceKnownSelect_taclet110_173" (formula "292") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_174" (formula "292") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "292") (inst "sk=z_93"))
         (rule "andLeft" (formula "292"))
         (rule "andLeft" (formula "292"))
         (rule "applyEq" (formula "292") (term "1,1") (ifseqformula "259"))
         (rule "inEqSimp_contradInEq0" (formula "294") (term "1,0") (ifseqformula "261"))
         (rule "inEqSimp_homoInEq1" (formula "294") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "294") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "294") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "294") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "294") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "294") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "294") (term "0,0,1,0"))
         (rule "add_literals" (formula "294") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "294") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "294") (term "0,0,1,0"))
         (rule "leq_literals" (formula "294") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "294"))
         (rule "inEqSimp_contradInEq0" (formula "292") (term "1,0") (ifseqformula "261"))
         (rule "inEqSimp_homoInEq1" (formula "292") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "292") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "292") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "292") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "292") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "292") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "292") (term "0,0,1,0"))
         (rule "add_literals" (formula "292") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "292") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "292") (term "0,0,1,0"))
         (rule "leq_literals" (formula "292") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "292"))
         (rule "inEqSimp_contradInEq1" (formula "293") (term "0,0") (ifseqformula "260"))
         (rule "qeq_literals" (formula "293") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "293"))
         (rule "inEqSimp_contradInEq1" (formula "294") (term "0") (ifseqformula "260"))
         (rule "qeq_literals" (formula "294") (term "0,0"))
          (builtin "One Step Simplification" (formula "294"))
         (rule "inEqSimp_contradInEq1" (formula "292") (term "0") (ifseqformula "260"))
         (rule "qeq_literals" (formula "292") (term "0,0"))
          (builtin "One Step Simplification" (formula "292"))
         (rule "inEqSimp_contradInEq0" (formula "293") (term "0") (ifseqformula "261"))
         (rule "inEqSimp_homoInEq1" (formula "293") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "293") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "293") (term "1,0,0,0"))
         (rule "mul_literals" (formula "293") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "293") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "293") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "293") (term "0,0,0"))
         (rule "add_literals" (formula "293") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "293") (term "1,0,0,0"))
         (rule "add_literals" (formula "293") (term "0,0,0"))
         (rule "leq_literals" (formula "293") (term "0,0"))
          (builtin "One Step Simplification" (formula "293"))
         (rule "pullOutSelect" (formula "292") (term "0") (inst "selectSK=arr_97"))
         (rule "simplifySelectOfAnonEQ" (formula "292") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "292"))
         (rule "applyEqReverse" (formula "293") (term "0") (ifseqformula "292"))
         (rule "hideAuxiliaryEq" (formula "292"))
         (rule "inEqSimp_exactShadow3" (formula "293") (ifseqformula "294"))
         (rule "mul_literals" (formula "293") (term "0,0"))
         (rule "add_zero_left" (formula "293") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "293"))
         (rule "mul_literals" (formula "293") (term "1"))
         (rule "allLeft" (formula "295") (inst "t=z_81"))
         (rule "replaceKnownSelect_taclet110_171" (formula "295") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_172" (formula "295") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "295") (inst "sk=z_94"))
         (rule "andLeft" (formula "295"))
         (rule "andLeft" (formula "295"))
         (rule "applyEq" (formula "295") (term "1,1") (ifseqformula "256"))
         (rule "inEqSimp_contradInEq1" (formula "297") (term "0,0") (ifseqformula "257"))
         (rule "qeq_literals" (formula "297") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "297"))
         (rule "inEqSimp_contradInEq1" (formula "296") (term "0,0") (ifseqformula "257"))
         (rule "qeq_literals" (formula "296") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "296"))
         (rule "inEqSimp_contradInEq0" (formula "295") (term "1,0") (ifseqformula "258"))
         (rule "inEqSimp_homoInEq1" (formula "295") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "295") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "295") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "295") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "295") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "295") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "295") (term "0,0,1,0"))
         (rule "add_literals" (formula "295") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "295") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "295") (term "0,0,1,0"))
         (rule "leq_literals" (formula "295") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "295"))
         (rule "inEqSimp_contradInEq0" (formula "297") (term "0") (ifseqformula "258"))
         (rule "inEqSimp_homoInEq1" (formula "297") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "297") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "297") (term "1,0,0,0"))
         (rule "mul_literals" (formula "297") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "297") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "297") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "297") (term "0,0,0"))
         (rule "add_literals" (formula "297") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "297") (term "1,0,0,0"))
         (rule "add_literals" (formula "297") (term "0,0,0"))
         (rule "leq_literals" (formula "297") (term "0,0"))
          (builtin "One Step Simplification" (formula "297"))
         (rule "inEqSimp_contradInEq0" (formula "296") (term "0") (ifseqformula "258"))
         (rule "inEqSimp_homoInEq1" (formula "296") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "296") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "296") (term "1,0,0,0"))
         (rule "mul_literals" (formula "296") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "296") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "296") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "296") (term "0,0,0"))
         (rule "add_literals" (formula "296") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "296") (term "1,0,0,0"))
         (rule "add_literals" (formula "296") (term "0,0,0"))
         (rule "leq_literals" (formula "296") (term "0,0"))
          (builtin "One Step Simplification" (formula "296"))
         (rule "inEqSimp_contradInEq1" (formula "295") (term "0") (ifseqformula "257"))
         (rule "qeq_literals" (formula "295") (term "0,0"))
          (builtin "One Step Simplification" (formula "295"))
         (rule "pullOutSelect" (formula "295") (term "0") (inst "selectSK=arr_98"))
         (rule "simplifySelectOfAnonEQ" (formula "295") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "295"))
         (rule "applyEqReverse" (formula "296") (term "0") (ifseqformula "295"))
         (rule "hideAuxiliaryEq" (formula "295"))
         (rule "inEqSimp_exactShadow3" (formula "296") (ifseqformula "297"))
         (rule "mul_literals" (formula "296") (term "0,0"))
         (rule "add_zero_left" (formula "296") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "296"))
         (rule "mul_literals" (formula "296") (term "1"))
         (rule "allLeft" (formula "298") (inst "t=z_80"))
         (rule "replaceKnownSelect_taclet110_169" (formula "298") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_170" (formula "298") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "298") (inst "sk=z_95"))
         (rule "andLeft" (formula "298"))
         (rule "andLeft" (formula "298"))
         (rule "applyEq" (formula "298") (term "1,1") (ifseqformula "253"))
         (rule "inEqSimp_contradInEq1" (formula "300") (term "0,0") (ifseqformula "254"))
         (rule "qeq_literals" (formula "300") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "300"))
         (rule "inEqSimp_contradInEq1" (formula "298") (term "0,0") (ifseqformula "254"))
         (rule "qeq_literals" (formula "298") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "298"))
         (rule "inEqSimp_contradInEq1" (formula "299") (term "0,0") (ifseqformula "254"))
         (rule "qeq_literals" (formula "299") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "299"))
         (rule "inEqSimp_contradInEq0" (formula "300") (term "0") (ifseqformula "255"))
         (rule "inEqSimp_homoInEq1" (formula "300") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "300") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "300") (term "1,0,0,0"))
         (rule "mul_literals" (formula "300") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "300") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "300") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "300") (term "0,0,0"))
         (rule "add_literals" (formula "300") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "300") (term "1,0,0,0"))
         (rule "add_literals" (formula "300") (term "0,0,0"))
         (rule "leq_literals" (formula "300") (term "0,0"))
          (builtin "One Step Simplification" (formula "300"))
         (rule "inEqSimp_contradInEq0" (formula "299") (term "0") (ifseqformula "255"))
         (rule "inEqSimp_homoInEq1" (formula "299") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "299") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "299") (term "1,0,0,0"))
         (rule "mul_literals" (formula "299") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "299") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "299") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "299") (term "0,0,0"))
         (rule "add_literals" (formula "299") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "299") (term "1,0,0,0"))
         (rule "add_literals" (formula "299") (term "0,0,0"))
         (rule "leq_literals" (formula "299") (term "0,0"))
          (builtin "One Step Simplification" (formula "299"))
         (rule "inEqSimp_contradInEq0" (formula "298") (term "0") (ifseqformula "255"))
         (rule "inEqSimp_homoInEq1" (formula "298") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "298") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "298") (term "1,0,0,0"))
         (rule "mul_literals" (formula "298") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "298") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "298") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "298") (term "0,0,0"))
         (rule "add_literals" (formula "298") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "298") (term "1,0,0,0"))
         (rule "add_literals" (formula "298") (term "0,0,0"))
         (rule "leq_literals" (formula "298") (term "0,0"))
          (builtin "One Step Simplification" (formula "298"))
         (rule "pullOutSelect" (formula "298") (term "0") (inst "selectSK=arr_99"))
         (rule "simplifySelectOfAnonEQ" (formula "298") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "298"))
         (rule "applyEqReverse" (formula "299") (term "0") (ifseqformula "298"))
         (rule "hideAuxiliaryEq" (formula "298"))
         (rule "inEqSimp_exactShadow3" (formula "299") (ifseqformula "300"))
         (rule "mul_literals" (formula "299") (term "0,0"))
         (rule "add_zero_left" (formula "299") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "299"))
         (rule "mul_literals" (formula "299") (term "1"))
         (rule "allLeft" (formula "301") (inst "t=z_79"))
         (rule "replaceKnownSelect_taclet110_167" (formula "301") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_168" (formula "301") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "301") (inst "sk=z_96"))
         (rule "andLeft" (formula "301"))
         (rule "andLeft" (formula "301"))
         (rule "applyEq" (formula "301") (term "1,1") (ifseqformula "250"))
         (rule "inEqSimp_contradInEq0" (formula "303") (term "1,0") (ifseqformula "252"))
         (rule "inEqSimp_homoInEq1" (formula "303") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "303") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "303") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "303") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "303") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "303") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "303") (term "0,0,1,0"))
         (rule "add_literals" (formula "303") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "303") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "303") (term "0,0,1,0"))
         (rule "leq_literals" (formula "303") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "303"))
         (rule "inEqSimp_contradInEq1" (formula "302") (term "0,0") (ifseqformula "251"))
         (rule "qeq_literals" (formula "302") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "302"))
         (rule "inEqSimp_contradInEq1" (formula "301") (term "0,0") (ifseqformula "251"))
         (rule "qeq_literals" (formula "301") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "301"))
         (rule "inEqSimp_contradInEq1" (formula "303") (term "0") (ifseqformula "251"))
         (rule "qeq_literals" (formula "303") (term "0,0"))
          (builtin "One Step Simplification" (formula "303"))
         (rule "inEqSimp_contradInEq0" (formula "301") (term "0") (ifseqformula "252"))
         (rule "inEqSimp_homoInEq1" (formula "301") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "301") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "301") (term "1,0,0,0"))
         (rule "mul_literals" (formula "301") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "301") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "301") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "301") (term "0,0,0"))
         (rule "add_literals" (formula "301") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "301") (term "1,0,0,0"))
         (rule "add_literals" (formula "301") (term "0,0,0"))
         (rule "leq_literals" (formula "301") (term "0,0"))
          (builtin "One Step Simplification" (formula "301"))
         (rule "inEqSimp_contradInEq0" (formula "302") (term "0") (ifseqformula "252"))
         (rule "inEqSimp_homoInEq1" (formula "302") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "302") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "302") (term "1,0,0,0"))
         (rule "mul_literals" (formula "302") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "302") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "302") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "302") (term "0,0,0"))
         (rule "add_literals" (formula "302") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "302") (term "1,0,0,0"))
         (rule "add_literals" (formula "302") (term "0,0,0"))
         (rule "leq_literals" (formula "302") (term "0,0"))
          (builtin "One Step Simplification" (formula "302"))
         (rule "pullOutSelect" (formula "301") (term "0") (inst "selectSK=arr_100"))
         (rule "simplifySelectOfAnonEQ" (formula "301") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "301"))
         (rule "applyEqReverse" (formula "302") (term "0") (ifseqformula "301"))
         (rule "hideAuxiliaryEq" (formula "301"))
         (rule "inEqSimp_exactShadow3" (formula "302") (ifseqformula "303"))
         (rule "mul_literals" (formula "302") (term "0,0"))
         (rule "add_zero_left" (formula "302") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "302"))
         (rule "mul_literals" (formula "302") (term "1"))
         (rule "allLeft" (formula "304") (inst "t=z_78"))
         (rule "replaceKnownSelect_taclet110_165" (formula "304") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_166" (formula "304") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "304") (inst "sk=z_97"))
         (rule "andLeft" (formula "304"))
         (rule "andLeft" (formula "304"))
         (rule "applyEq" (formula "304") (term "1,1") (ifseqformula "247"))
         (rule "inEqSimp_contradInEq1" (formula "306") (term "0,0") (ifseqformula "248"))
         (rule "qeq_literals" (formula "306") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "306"))
         (rule "inEqSimp_contradInEq1" (formula "304") (term "0,0") (ifseqformula "248"))
         (rule "qeq_literals" (formula "304") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "304"))
         (rule "inEqSimp_contradInEq1" (formula "305") (term "0,0") (ifseqformula "248"))
         (rule "qeq_literals" (formula "305") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "305"))
         (rule "inEqSimp_contradInEq0" (formula "306") (term "0") (ifseqformula "249"))
         (rule "inEqSimp_homoInEq1" (formula "306") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "306") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "306") (term "1,0,0,0"))
         (rule "mul_literals" (formula "306") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "306") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "306") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "306") (term "0,0,0"))
         (rule "add_literals" (formula "306") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "306") (term "1,0,0,0"))
         (rule "add_literals" (formula "306") (term "0,0,0"))
         (rule "leq_literals" (formula "306") (term "0,0"))
          (builtin "One Step Simplification" (formula "306"))
         (rule "inEqSimp_contradInEq0" (formula "304") (term "0") (ifseqformula "249"))
         (rule "inEqSimp_homoInEq1" (formula "304") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "304") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "304") (term "1,0,0,0"))
         (rule "mul_literals" (formula "304") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "304") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "304") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "304") (term "0,0,0"))
         (rule "add_literals" (formula "304") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "304") (term "1,0,0,0"))
         (rule "add_literals" (formula "304") (term "0,0,0"))
         (rule "leq_literals" (formula "304") (term "0,0"))
          (builtin "One Step Simplification" (formula "304"))
         (rule "inEqSimp_contradInEq0" (formula "305") (term "0") (ifseqformula "249"))
         (rule "inEqSimp_homoInEq1" (formula "305") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "305") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "305") (term "1,0,0,0"))
         (rule "mul_literals" (formula "305") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "305") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "305") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "305") (term "0,0,0"))
         (rule "add_literals" (formula "305") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "305") (term "1,0,0,0"))
         (rule "add_literals" (formula "305") (term "0,0,0"))
         (rule "leq_literals" (formula "305") (term "0,0"))
          (builtin "One Step Simplification" (formula "305"))
         (rule "pullOutSelect" (formula "304") (term "0") (inst "selectSK=arr_101"))
         (rule "simplifySelectOfAnonEQ" (formula "304") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "304"))
         (rule "applyEqReverse" (formula "305") (term "0") (ifseqformula "304"))
         (rule "hideAuxiliaryEq" (formula "304"))
         (rule "inEqSimp_exactShadow3" (formula "305") (ifseqformula "306"))
         (rule "mul_literals" (formula "305") (term "0,0"))
         (rule "add_zero_left" (formula "305") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "305"))
         (rule "mul_literals" (formula "305") (term "1"))
         (rule "allLeft" (formula "307") (inst "t=z_77"))
         (rule "replaceKnownSelect_taclet110_163" (formula "307") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_164" (formula "307") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "307") (inst "sk=z_98"))
         (rule "andLeft" (formula "307"))
         (rule "andLeft" (formula "307"))
         (rule "applyEq" (formula "307") (term "1,1") (ifseqformula "244"))
         (rule "inEqSimp_contradInEq0" (formula "309") (term "1,0") (ifseqformula "246"))
         (rule "inEqSimp_homoInEq1" (formula "309") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "309") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "309") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "309") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "309") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "309") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "309") (term "0,0,1,0"))
         (rule "add_literals" (formula "309") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "309") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "309") (term "0,0,1,0"))
         (rule "leq_literals" (formula "309") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "309"))
         (rule "inEqSimp_contradInEq1" (formula "308") (term "0,0") (ifseqformula "245"))
         (rule "qeq_literals" (formula "308") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "308"))
         (rule "inEqSimp_contradInEq1" (formula "307") (term "0,0") (ifseqformula "245"))
         (rule "qeq_literals" (formula "307") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "307"))
         (rule "inEqSimp_contradInEq1" (formula "309") (term "0") (ifseqformula "245"))
         (rule "qeq_literals" (formula "309") (term "0,0"))
          (builtin "One Step Simplification" (formula "309"))
         (rule "inEqSimp_contradInEq0" (formula "307") (term "0") (ifseqformula "246"))
         (rule "inEqSimp_homoInEq1" (formula "307") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "307") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "307") (term "1,0,0,0"))
         (rule "mul_literals" (formula "307") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "307") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "307") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "307") (term "0,0,0"))
         (rule "add_literals" (formula "307") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "307") (term "1,0,0,0"))
         (rule "add_literals" (formula "307") (term "0,0,0"))
         (rule "leq_literals" (formula "307") (term "0,0"))
          (builtin "One Step Simplification" (formula "307"))
         (rule "inEqSimp_contradInEq0" (formula "308") (term "0") (ifseqformula "246"))
         (rule "inEqSimp_homoInEq1" (formula "308") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "308") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "308") (term "1,0,0,0"))
         (rule "mul_literals" (formula "308") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "308") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "308") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "308") (term "0,0,0"))
         (rule "add_literals" (formula "308") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "308") (term "1,0,0,0"))
         (rule "add_literals" (formula "308") (term "0,0,0"))
         (rule "leq_literals" (formula "308") (term "0,0"))
          (builtin "One Step Simplification" (formula "308"))
         (rule "pullOutSelect" (formula "307") (term "0") (inst "selectSK=arr_102"))
         (rule "simplifySelectOfAnonEQ" (formula "307") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "307"))
         (rule "applyEqReverse" (formula "308") (term "0") (ifseqformula "307"))
         (rule "hideAuxiliaryEq" (formula "307"))
         (rule "inEqSimp_exactShadow3" (formula "308") (ifseqformula "309"))
         (rule "mul_literals" (formula "308") (term "0,0"))
         (rule "add_zero_left" (formula "308") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "308"))
         (rule "mul_literals" (formula "308") (term "1"))
         (rule "allLeft" (formula "310") (inst "t=z_98"))
         (rule "replaceKnownSelect_taclet110_205" (formula "310") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_206" (formula "310") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "310") (inst "sk=z_99"))
         (rule "andLeft" (formula "310"))
         (rule "andLeft" (formula "310"))
         (rule "applyEq" (formula "310") (term "1,1") (ifseqformula "307"))
         (rule "inEqSimp_contradInEq1" (formula "312") (term "0,0") (ifseqformula "308"))
         (rule "qeq_literals" (formula "312") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "312"))
         (rule "inEqSimp_contradInEq0" (formula "310") (term "1,0") (ifseqformula "309"))
         (rule "inEqSimp_homoInEq1" (formula "310") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "310") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "310") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "310") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "310") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "310") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "310") (term "0,0,1,0"))
         (rule "add_literals" (formula "310") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "310") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "310") (term "0,0,1,0"))
         (rule "leq_literals" (formula "310") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "310"))
         (rule "inEqSimp_contradInEq0" (formula "311") (term "1,0") (ifseqformula "309"))
         (rule "inEqSimp_homoInEq1" (formula "311") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "311") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "311") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "311") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "311") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "311") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "311") (term "0,0,1,0"))
         (rule "add_literals" (formula "311") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "311") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "311") (term "0,0,1,0"))
         (rule "leq_literals" (formula "311") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "311"))
         (rule "inEqSimp_contradInEq0" (formula "312") (term "0") (ifseqformula "309"))
         (rule "inEqSimp_homoInEq1" (formula "312") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "312") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "312") (term "1,0,0,0"))
         (rule "mul_literals" (formula "312") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "312") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "312") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "312") (term "0,0,0"))
         (rule "add_literals" (formula "312") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "312") (term "1,0,0,0"))
         (rule "add_literals" (formula "312") (term "0,0,0"))
         (rule "leq_literals" (formula "312") (term "0,0"))
          (builtin "One Step Simplification" (formula "312"))
         (rule "inEqSimp_contradInEq1" (formula "311") (term "0") (ifseqformula "308"))
         (rule "qeq_literals" (formula "311") (term "0,0"))
          (builtin "One Step Simplification" (formula "311"))
         (rule "inEqSimp_contradInEq1" (formula "310") (term "0") (ifseqformula "308"))
         (rule "qeq_literals" (formula "310") (term "0,0"))
          (builtin "One Step Simplification" (formula "310"))
         (rule "pullOutSelect" (formula "310") (term "0") (inst "selectSK=arr_103"))
         (rule "simplifySelectOfAnonEQ" (formula "310") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "310"))
         (rule "applyEqReverse" (formula "311") (term "0") (ifseqformula "310"))
         (rule "hideAuxiliaryEq" (formula "310"))
         (rule "inEqSimp_exactShadow3" (formula "311") (ifseqformula "312"))
         (rule "mul_literals" (formula "311") (term "0,0"))
         (rule "add_zero_left" (formula "311") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "311"))
         (rule "mul_literals" (formula "311") (term "1"))
         (rule "allLeft" (formula "313") (inst "t=z_97"))
         (rule "replaceKnownSelect_taclet110_203" (formula "313") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_204" (formula "313") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "313") (inst "sk=z_100"))
         (rule "andLeft" (formula "313"))
         (rule "andLeft" (formula "313"))
         (rule "applyEq" (formula "313") (term "1,1") (ifseqformula "304"))
         (rule "inEqSimp_contradInEq0" (formula "315") (term "1,0") (ifseqformula "306"))
         (rule "inEqSimp_homoInEq1" (formula "315") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "315") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "315") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "315") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "315") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "315") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "315") (term "0,0,1,0"))
         (rule "add_literals" (formula "315") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "315") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "315") (term "0,0,1,0"))
         (rule "leq_literals" (formula "315") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "315"))
         (rule "inEqSimp_contradInEq0" (formula "313") (term "1,0") (ifseqformula "306"))
         (rule "inEqSimp_homoInEq1" (formula "313") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "313") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "313") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "313") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "313") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "313") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "313") (term "0,0,1,0"))
         (rule "add_literals" (formula "313") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "313") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "313") (term "0,0,1,0"))
         (rule "leq_literals" (formula "313") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "313"))
         (rule "inEqSimp_contradInEq1" (formula "314") (term "0,0") (ifseqformula "305"))
         (rule "qeq_literals" (formula "314") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "314"))
         (rule "inEqSimp_contradInEq1" (formula "315") (term "0") (ifseqformula "305"))
         (rule "qeq_literals" (formula "315") (term "0,0"))
          (builtin "One Step Simplification" (formula "315"))
         (rule "inEqSimp_contradInEq0" (formula "314") (term "0") (ifseqformula "306"))
         (rule "inEqSimp_homoInEq1" (formula "314") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "314") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "314") (term "1,0,0,0"))
         (rule "mul_literals" (formula "314") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "314") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "314") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "314") (term "0,0,0"))
         (rule "add_literals" (formula "314") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "314") (term "1,0,0,0"))
         (rule "add_literals" (formula "314") (term "0,0,0"))
         (rule "leq_literals" (formula "314") (term "0,0"))
          (builtin "One Step Simplification" (formula "314"))
         (rule "inEqSimp_contradInEq1" (formula "313") (term "0") (ifseqformula "305"))
         (rule "qeq_literals" (formula "313") (term "0,0"))
          (builtin "One Step Simplification" (formula "313"))
         (rule "pullOutSelect" (formula "313") (term "0") (inst "selectSK=arr_104"))
         (rule "simplifySelectOfAnonEQ" (formula "313") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "313"))
         (rule "applyEqReverse" (formula "314") (term "0") (ifseqformula "313"))
         (rule "hideAuxiliaryEq" (formula "313"))
         (rule "inEqSimp_exactShadow3" (formula "314") (ifseqformula "315"))
         (rule "mul_literals" (formula "314") (term "0,0"))
         (rule "add_zero_left" (formula "314") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "314"))
         (rule "mul_literals" (formula "314") (term "1"))
         (rule "allLeft" (formula "316") (inst "t=z_96"))
         (rule "replaceKnownSelect_taclet110_201" (formula "316") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_202" (formula "316") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "316") (inst "sk=z_101"))
         (rule "andLeft" (formula "316"))
         (rule "andLeft" (formula "316"))
         (rule "applyEq" (formula "316") (term "1,1") (ifseqformula "301"))
         (rule "inEqSimp_contradInEq1" (formula "316") (term "0,0") (ifseqformula "302"))
         (rule "qeq_literals" (formula "316") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "316"))
         (rule "inEqSimp_contradInEq0" (formula "318") (term "1,0") (ifseqformula "303"))
         (rule "inEqSimp_homoInEq1" (formula "318") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "318") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "318") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "318") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "318") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "318") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "318") (term "0,0,1,0"))
         (rule "add_literals" (formula "318") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "318") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "318") (term "0,0,1,0"))
         (rule "leq_literals" (formula "318") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "318"))
         (rule "inEqSimp_contradInEq0" (formula "317") (term "1,0") (ifseqformula "303"))
         (rule "inEqSimp_homoInEq1" (formula "317") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "317") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "317") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "317") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "317") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "317") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "317") (term "0,0,1,0"))
         (rule "add_literals" (formula "317") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "317") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "317") (term "0,0,1,0"))
         (rule "leq_literals" (formula "317") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "317"))
         (rule "inEqSimp_contradInEq0" (formula "316") (term "0") (ifseqformula "303"))
         (rule "inEqSimp_homoInEq1" (formula "316") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "316") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "316") (term "1,0,0,0"))
         (rule "mul_literals" (formula "316") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "316") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "316") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "316") (term "0,0,0"))
         (rule "add_literals" (formula "316") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "316") (term "1,0,0,0"))
         (rule "add_literals" (formula "316") (term "0,0,0"))
         (rule "leq_literals" (formula "316") (term "0,0"))
          (builtin "One Step Simplification" (formula "316"))
         (rule "inEqSimp_contradInEq1" (formula "317") (term "0") (ifseqformula "302"))
         (rule "qeq_literals" (formula "317") (term "0,0"))
          (builtin "One Step Simplification" (formula "317"))
         (rule "inEqSimp_contradInEq1" (formula "318") (term "0") (ifseqformula "302"))
         (rule "qeq_literals" (formula "318") (term "0,0"))
          (builtin "One Step Simplification" (formula "318"))
         (rule "pullOutSelect" (formula "316") (term "0") (inst "selectSK=arr_105"))
         (rule "simplifySelectOfAnonEQ" (formula "316") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "316"))
         (rule "applyEqReverse" (formula "317") (term "0") (ifseqformula "316"))
         (rule "hideAuxiliaryEq" (formula "316"))
         (rule "inEqSimp_exactShadow3" (formula "317") (ifseqformula "318"))
         (rule "mul_literals" (formula "317") (term "0,0"))
         (rule "add_zero_left" (formula "317") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "317"))
         (rule "mul_literals" (formula "317") (term "1"))
         (rule "allLeft" (formula "319") (inst "t=z_95"))
         (rule "replaceKnownSelect_taclet110_199" (formula "319") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_200" (formula "319") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "319") (inst "sk=z_102"))
         (rule "andLeft" (formula "319"))
         (rule "andLeft" (formula "319"))
         (rule "applyEq" (formula "319") (term "1,1") (ifseqformula "298"))
         (rule "inEqSimp_contradInEq1" (formula "321") (term "0,0") (ifseqformula "299"))
         (rule "qeq_literals" (formula "321") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "321"))
         (rule "inEqSimp_contradInEq1" (formula "319") (term "0,0") (ifseqformula "299"))
         (rule "qeq_literals" (formula "319") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "319"))
         (rule "inEqSimp_contradInEq0" (formula "320") (term "1,0") (ifseqformula "300"))
         (rule "inEqSimp_homoInEq1" (formula "320") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "320") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "320") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "320") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "320") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "320") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "320") (term "0,0,1,0"))
         (rule "add_literals" (formula "320") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "320") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "320") (term "0,0,1,0"))
         (rule "leq_literals" (formula "320") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "320"))
         (rule "inEqSimp_contradInEq1" (formula "320") (term "0") (ifseqformula "299"))
         (rule "qeq_literals" (formula "320") (term "0,0"))
          (builtin "One Step Simplification" (formula "320"))
         (rule "inEqSimp_contradInEq0" (formula "321") (term "0") (ifseqformula "300"))
         (rule "inEqSimp_homoInEq1" (formula "321") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "321") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "321") (term "1,0,0,0"))
         (rule "mul_literals" (formula "321") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "321") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "321") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "321") (term "0,0,0"))
         (rule "add_literals" (formula "321") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "321") (term "1,0,0,0"))
         (rule "add_literals" (formula "321") (term "0,0,0"))
         (rule "leq_literals" (formula "321") (term "0,0"))
          (builtin "One Step Simplification" (formula "321"))
         (rule "inEqSimp_contradInEq0" (formula "319") (term "0") (ifseqformula "300"))
         (rule "inEqSimp_homoInEq1" (formula "319") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "319") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "319") (term "1,0,0,0"))
         (rule "mul_literals" (formula "319") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "319") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "319") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "319") (term "0,0,0"))
         (rule "add_literals" (formula "319") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "319") (term "1,0,0,0"))
         (rule "add_literals" (formula "319") (term "0,0,0"))
         (rule "leq_literals" (formula "319") (term "0,0"))
          (builtin "One Step Simplification" (formula "319"))
         (rule "pullOutSelect" (formula "319") (term "0") (inst "selectSK=arr_106"))
         (rule "simplifySelectOfAnonEQ" (formula "319") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "319"))
         (rule "applyEqReverse" (formula "320") (term "0") (ifseqformula "319"))
         (rule "hideAuxiliaryEq" (formula "319"))
         (rule "inEqSimp_exactShadow3" (formula "320") (ifseqformula "321"))
         (rule "mul_literals" (formula "320") (term "0,0"))
         (rule "add_zero_left" (formula "320") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "320"))
         (rule "mul_literals" (formula "320") (term "1"))
         (rule "allLeft" (formula "322") (inst "t=z_94"))
         (rule "replaceKnownSelect_taclet110_197" (formula "322") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_198" (formula "322") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "322") (inst "sk=z_103"))
         (rule "andLeft" (formula "322"))
         (rule "andLeft" (formula "322"))
         (rule "applyEq" (formula "322") (term "1,1") (ifseqformula "295"))
         (rule "inEqSimp_contradInEq1" (formula "324") (term "0,0") (ifseqformula "296"))
         (rule "qeq_literals" (formula "324") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "324"))
         (rule "inEqSimp_contradInEq1" (formula "322") (term "0,0") (ifseqformula "296"))
         (rule "qeq_literals" (formula "322") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "322"))
         (rule "inEqSimp_contradInEq0" (formula "323") (term "1,0") (ifseqformula "297"))
         (rule "inEqSimp_homoInEq1" (formula "323") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "323") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "323") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "323") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "323") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "323") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "323") (term "0,0,1,0"))
         (rule "add_literals" (formula "323") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "323") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "323") (term "0,0,1,0"))
         (rule "leq_literals" (formula "323") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "323"))
         (rule "inEqSimp_contradInEq0" (formula "324") (term "0") (ifseqformula "297"))
         (rule "inEqSimp_homoInEq1" (formula "324") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "324") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "324") (term "1,0,0,0"))
         (rule "mul_literals" (formula "324") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "324") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "324") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "324") (term "0,0,0"))
         (rule "add_literals" (formula "324") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "324") (term "1,0,0,0"))
         (rule "add_literals" (formula "324") (term "0,0,0"))
         (rule "leq_literals" (formula "324") (term "0,0"))
          (builtin "One Step Simplification" (formula "324"))
         (rule "inEqSimp_contradInEq1" (formula "323") (term "0") (ifseqformula "296"))
         (rule "qeq_literals" (formula "323") (term "0,0"))
          (builtin "One Step Simplification" (formula "323"))
         (rule "inEqSimp_contradInEq0" (formula "322") (term "0") (ifseqformula "297"))
         (rule "inEqSimp_homoInEq1" (formula "322") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "322") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "322") (term "1,0,0,0"))
         (rule "mul_literals" (formula "322") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "322") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "322") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "322") (term "0,0,0"))
         (rule "add_literals" (formula "322") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "322") (term "1,0,0,0"))
         (rule "add_literals" (formula "322") (term "0,0,0"))
         (rule "leq_literals" (formula "322") (term "0,0"))
          (builtin "One Step Simplification" (formula "322"))
         (rule "pullOutSelect" (formula "322") (term "0") (inst "selectSK=arr_107"))
         (rule "simplifySelectOfAnonEQ" (formula "322") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "322"))
         (rule "applyEqReverse" (formula "323") (term "0") (ifseqformula "322"))
         (rule "hideAuxiliaryEq" (formula "322"))
         (rule "inEqSimp_exactShadow3" (formula "323") (ifseqformula "324"))
         (rule "mul_literals" (formula "323") (term "0,0"))
         (rule "add_zero_left" (formula "323") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "323"))
         (rule "mul_literals" (formula "323") (term "1"))
         (rule "allLeft" (formula "325") (inst "t=z_93"))
         (rule "replaceKnownSelect_taclet110_195" (formula "325") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_196" (formula "325") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "325") (inst "sk=z_104"))
         (rule "andLeft" (formula "325"))
         (rule "andLeft" (formula "325"))
         (rule "applyEq" (formula "325") (term "1,1") (ifseqformula "292"))
         (rule "inEqSimp_contradInEq1" (formula "327") (term "0,0") (ifseqformula "293"))
         (rule "qeq_literals" (formula "327") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "327"))
         (rule "inEqSimp_contradInEq0" (formula "325") (term "1,0") (ifseqformula "294"))
         (rule "inEqSimp_homoInEq1" (formula "325") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "325") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "325") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "325") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "325") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "325") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "325") (term "0,0,1,0"))
         (rule "add_literals" (formula "325") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "325") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "325") (term "0,0,1,0"))
         (rule "leq_literals" (formula "325") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "325"))
         (rule "inEqSimp_contradInEq1" (formula "326") (term "0,0") (ifseqformula "293"))
         (rule "qeq_literals" (formula "326") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "326"))
         (rule "inEqSimp_contradInEq1" (formula "325") (term "0") (ifseqformula "293"))
         (rule "qeq_literals" (formula "325") (term "0,0"))
          (builtin "One Step Simplification" (formula "325"))
         (rule "inEqSimp_contradInEq0" (formula "327") (term "0") (ifseqformula "294"))
         (rule "inEqSimp_homoInEq1" (formula "327") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "327") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "327") (term "1,0,0,0"))
         (rule "mul_literals" (formula "327") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "327") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "327") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "327") (term "0,0,0"))
         (rule "add_literals" (formula "327") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "327") (term "1,0,0,0"))
         (rule "add_literals" (formula "327") (term "0,0,0"))
         (rule "leq_literals" (formula "327") (term "0,0"))
          (builtin "One Step Simplification" (formula "327"))
         (rule "inEqSimp_contradInEq0" (formula "326") (term "0") (ifseqformula "294"))
         (rule "inEqSimp_homoInEq1" (formula "326") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "326") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "326") (term "1,0,0,0"))
         (rule "mul_literals" (formula "326") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "326") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "326") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "326") (term "0,0,0"))
         (rule "add_literals" (formula "326") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "326") (term "1,0,0,0"))
         (rule "add_literals" (formula "326") (term "0,0,0"))
         (rule "leq_literals" (formula "326") (term "0,0"))
          (builtin "One Step Simplification" (formula "326"))
         (rule "pullOutSelect" (formula "325") (term "0") (inst "selectSK=arr_108"))
         (rule "simplifySelectOfAnonEQ" (formula "325") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "325"))
         (rule "applyEqReverse" (formula "326") (term "0") (ifseqformula "325"))
         (rule "hideAuxiliaryEq" (formula "325"))
         (rule "inEqSimp_exactShadow3" (formula "326") (ifseqformula "327"))
         (rule "mul_literals" (formula "326") (term "0,0"))
         (rule "add_zero_left" (formula "326") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "326"))
         (rule "mul_literals" (formula "326") (term "1"))
         (rule "allLeft" (formula "328") (inst "t=z_92"))
         (rule "replaceKnownSelect_taclet110_193" (formula "328") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_194" (formula "328") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "328") (inst "sk=z_105"))
         (rule "andLeft" (formula "328"))
         (rule "andLeft" (formula "328"))
         (rule "applyEq" (formula "328") (term "1,1") (ifseqformula "289"))
         (rule "inEqSimp_contradInEq0" (formula "328") (term "1,0") (ifseqformula "291"))
         (rule "inEqSimp_homoInEq1" (formula "328") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "328") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "328") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "328") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "328") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "328") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "328") (term "0,0,1,0"))
         (rule "add_literals" (formula "328") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "328") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "328") (term "0,0,1,0"))
         (rule "leq_literals" (formula "328") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "328"))
         (rule "inEqSimp_contradInEq0" (formula "329") (term "1,0") (ifseqformula "291"))
         (rule "inEqSimp_homoInEq1" (formula "329") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "329") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "329") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "329") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "329") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "329") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "329") (term "0,0,1,0"))
         (rule "add_literals" (formula "329") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "329") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "329") (term "0,0,1,0"))
         (rule "leq_literals" (formula "329") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "329"))
         (rule "inEqSimp_contradInEq0" (formula "330") (term "1,0") (ifseqformula "291"))
         (rule "inEqSimp_homoInEq1" (formula "330") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "330") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "330") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "330") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "330") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "330") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "330") (term "0,0,1,0"))
         (rule "add_literals" (formula "330") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "330") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "330") (term "0,0,1,0"))
         (rule "leq_literals" (formula "330") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "330"))
         (rule "inEqSimp_contradInEq1" (formula "328") (term "0") (ifseqformula "290"))
         (rule "qeq_literals" (formula "328") (term "0,0"))
          (builtin "One Step Simplification" (formula "328"))
         (rule "inEqSimp_contradInEq1" (formula "330") (term "0") (ifseqformula "290"))
         (rule "qeq_literals" (formula "330") (term "0,0"))
          (builtin "One Step Simplification" (formula "330"))
         (rule "inEqSimp_contradInEq1" (formula "329") (term "0") (ifseqformula "290"))
         (rule "qeq_literals" (formula "329") (term "0,0"))
          (builtin "One Step Simplification" (formula "329"))
         (rule "pullOutSelect" (formula "328") (term "0") (inst "selectSK=arr_109"))
         (rule "simplifySelectOfAnonEQ" (formula "328") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "328"))
         (rule "applyEqReverse" (formula "329") (term "0") (ifseqformula "328"))
         (rule "hideAuxiliaryEq" (formula "328"))
         (rule "inEqSimp_exactShadow3" (formula "329") (ifseqformula "330"))
         (rule "mul_literals" (formula "329") (term "0,0"))
         (rule "add_zero_left" (formula "329") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "329"))
         (rule "mul_literals" (formula "329") (term "1"))
         (rule "allLeft" (formula "331") (inst "t=z_91"))
         (rule "replaceKnownSelect_taclet110_191" (formula "331") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_192" (formula "331") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "331") (inst "sk=z_106"))
         (rule "andLeft" (formula "331"))
         (rule "andLeft" (formula "331"))
         (rule "applyEq" (formula "331") (term "1,1") (ifseqformula "286"))
         (rule "inEqSimp_contradInEq0" (formula "333") (term "1,0") (ifseqformula "288"))
         (rule "inEqSimp_homoInEq1" (formula "333") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "333") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "333") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "333") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "333") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "333") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "333") (term "0,0,1,0"))
         (rule "add_literals" (formula "333") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "333") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "333") (term "0,0,1,0"))
         (rule "leq_literals" (formula "333") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "333"))
         (rule "inEqSimp_contradInEq1" (formula "331") (term "0,0") (ifseqformula "287"))
         (rule "qeq_literals" (formula "331") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "331"))
         (rule "inEqSimp_contradInEq0" (formula "332") (term "1,0") (ifseqformula "288"))
         (rule "inEqSimp_homoInEq1" (formula "332") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "332") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "332") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "332") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "332") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "332") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "332") (term "0,0,1,0"))
         (rule "add_literals" (formula "332") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "332") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "332") (term "0,0,1,0"))
         (rule "leq_literals" (formula "332") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "332"))
         (rule "inEqSimp_contradInEq1" (formula "333") (term "0") (ifseqformula "287"))
         (rule "qeq_literals" (formula "333") (term "0,0"))
          (builtin "One Step Simplification" (formula "333"))
         (rule "inEqSimp_contradInEq0" (formula "331") (term "0") (ifseqformula "288"))
         (rule "inEqSimp_homoInEq1" (formula "331") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "331") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "331") (term "1,0,0,0"))
         (rule "mul_literals" (formula "331") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "331") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "331") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "331") (term "0,0,0"))
         (rule "add_literals" (formula "331") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "331") (term "1,0,0,0"))
         (rule "add_literals" (formula "331") (term "0,0,0"))
         (rule "leq_literals" (formula "331") (term "0,0"))
          (builtin "One Step Simplification" (formula "331"))
         (rule "inEqSimp_contradInEq1" (formula "332") (term "0") (ifseqformula "287"))
         (rule "qeq_literals" (formula "332") (term "0,0"))
          (builtin "One Step Simplification" (formula "332"))
         (rule "pullOutSelect" (formula "331") (term "0") (inst "selectSK=arr_110"))
         (rule "simplifySelectOfAnonEQ" (formula "331") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "331"))
         (rule "applyEqReverse" (formula "332") (term "0") (ifseqformula "331"))
         (rule "hideAuxiliaryEq" (formula "331"))
         (rule "inEqSimp_exactShadow3" (formula "332") (ifseqformula "333"))
         (rule "mul_literals" (formula "332") (term "0,0"))
         (rule "add_zero_left" (formula "332") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "332"))
         (rule "mul_literals" (formula "332") (term "1"))
         (rule "allLeft" (formula "334") (inst "t=z_90"))
         (rule "replaceKnownSelect_taclet110_189" (formula "334") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_190" (formula "334") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "334") (inst "sk=z_107"))
         (rule "andLeft" (formula "334"))
         (rule "andLeft" (formula "334"))
         (rule "applyEq" (formula "334") (term "1,1") (ifseqformula "283"))
         (rule "inEqSimp_contradInEq1" (formula "335") (term "0,0") (ifseqformula "284"))
         (rule "qeq_literals" (formula "335") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "335"))
         (rule "inEqSimp_contradInEq0" (formula "334") (term "1,0") (ifseqformula "285"))
         (rule "inEqSimp_homoInEq1" (formula "334") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "334") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "334") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "334") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "334") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "334") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "334") (term "0,0,1,0"))
         (rule "add_literals" (formula "334") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "334") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "334") (term "0,0,1,0"))
         (rule "leq_literals" (formula "334") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "334"))
         (rule "inEqSimp_contradInEq1" (formula "336") (term "0,0") (ifseqformula "284"))
         (rule "qeq_literals" (formula "336") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "336"))
         (rule "inEqSimp_contradInEq0" (formula "335") (term "0") (ifseqformula "285"))
         (rule "inEqSimp_homoInEq1" (formula "335") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "335") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "335") (term "1,0,0,0"))
         (rule "mul_literals" (formula "335") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "335") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "335") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "335") (term "0,0,0"))
         (rule "add_literals" (formula "335") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "335") (term "1,0,0,0"))
         (rule "add_literals" (formula "335") (term "0,0,0"))
         (rule "leq_literals" (formula "335") (term "0,0"))
          (builtin "One Step Simplification" (formula "335"))
         (rule "inEqSimp_contradInEq1" (formula "334") (term "0") (ifseqformula "284"))
         (rule "qeq_literals" (formula "334") (term "0,0"))
          (builtin "One Step Simplification" (formula "334"))
         (rule "inEqSimp_contradInEq0" (formula "336") (term "0") (ifseqformula "285"))
         (rule "inEqSimp_homoInEq1" (formula "336") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "336") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "336") (term "1,0,0,0"))
         (rule "mul_literals" (formula "336") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "336") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "336") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "336") (term "0,0,0"))
         (rule "add_literals" (formula "336") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "336") (term "1,0,0,0"))
         (rule "add_literals" (formula "336") (term "0,0,0"))
         (rule "leq_literals" (formula "336") (term "0,0"))
          (builtin "One Step Simplification" (formula "336"))
         (rule "pullOutSelect" (formula "334") (term "0") (inst "selectSK=arr_111"))
         (rule "simplifySelectOfAnonEQ" (formula "334") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "334"))
         (rule "applyEqReverse" (formula "335") (term "0") (ifseqformula "334"))
         (rule "hideAuxiliaryEq" (formula "334"))
         (rule "inEqSimp_exactShadow3" (formula "335") (ifseqformula "336"))
         (rule "mul_literals" (formula "335") (term "0,0"))
         (rule "add_zero_left" (formula "335") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "335"))
         (rule "mul_literals" (formula "335") (term "1"))
         (rule "allLeft" (formula "337") (inst "t=z_89"))
         (rule "replaceKnownSelect_taclet110_187" (formula "337") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_188" (formula "337") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "337") (inst "sk=z_108"))
         (rule "andLeft" (formula "337"))
         (rule "andLeft" (formula "337"))
         (rule "applyEq" (formula "337") (term "1,1") (ifseqformula "280"))
         (rule "inEqSimp_contradInEq1" (formula "339") (term "0,0") (ifseqformula "281"))
         (rule "qeq_literals" (formula "339") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "339"))
         (rule "inEqSimp_contradInEq0" (formula "338") (term "1,0") (ifseqformula "282"))
         (rule "inEqSimp_homoInEq1" (formula "338") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "338") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "338") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "338") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "338") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "338") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "338") (term "0,0,1,0"))
         (rule "add_literals" (formula "338") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "338") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "338") (term "0,0,1,0"))
         (rule "leq_literals" (formula "338") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "338"))
         (rule "inEqSimp_contradInEq0" (formula "337") (term "1,0") (ifseqformula "282"))
         (rule "inEqSimp_homoInEq1" (formula "337") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "337") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "337") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "337") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "337") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "337") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "337") (term "0,0,1,0"))
         (rule "add_literals" (formula "337") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "337") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "337") (term "0,0,1,0"))
         (rule "leq_literals" (formula "337") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "337"))
         (rule "inEqSimp_contradInEq0" (formula "339") (term "0") (ifseqformula "282"))
         (rule "inEqSimp_homoInEq1" (formula "339") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "339") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "339") (term "1,0,0,0"))
         (rule "mul_literals" (formula "339") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "339") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "339") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "339") (term "0,0,0"))
         (rule "add_literals" (formula "339") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "339") (term "1,0,0,0"))
         (rule "add_literals" (formula "339") (term "0,0,0"))
         (rule "leq_literals" (formula "339") (term "0,0"))
          (builtin "One Step Simplification" (formula "339"))
         (rule "inEqSimp_contradInEq1" (formula "337") (term "0") (ifseqformula "281"))
         (rule "qeq_literals" (formula "337") (term "0,0"))
          (builtin "One Step Simplification" (formula "337"))
         (rule "inEqSimp_contradInEq1" (formula "338") (term "0") (ifseqformula "281"))
         (rule "qeq_literals" (formula "338") (term "0,0"))
          (builtin "One Step Simplification" (formula "338"))
         (rule "pullOutSelect" (formula "337") (term "0") (inst "selectSK=arr_112"))
         (rule "simplifySelectOfAnonEQ" (formula "337") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "337"))
         (rule "applyEqReverse" (formula "338") (term "0") (ifseqformula "337"))
         (rule "hideAuxiliaryEq" (formula "337"))
         (rule "inEqSimp_exactShadow3" (formula "338") (ifseqformula "339"))
         (rule "mul_literals" (formula "338") (term "0,0"))
         (rule "add_zero_left" (formula "338") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "338"))
         (rule "mul_literals" (formula "338") (term "1"))
         (rule "allLeft" (formula "340") (inst "t=z_88"))
         (rule "replaceKnownSelect_taclet110_185" (formula "340") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_186" (formula "340") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "340") (inst "sk=z_109"))
         (rule "andLeft" (formula "340"))
         (rule "andLeft" (formula "340"))
         (rule "applyEq" (formula "340") (term "1,1") (ifseqformula "277"))
         (rule "inEqSimp_contradInEq1" (formula "341") (term "0,0") (ifseqformula "278"))
         (rule "qeq_literals" (formula "341") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "341"))
         (rule "inEqSimp_contradInEq0" (formula "340") (term "1,0") (ifseqformula "279"))
         (rule "inEqSimp_homoInEq1" (formula "340") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "340") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "340") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "340") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "340") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "340") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "340") (term "0,0,1,0"))
         (rule "add_literals" (formula "340") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "340") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "340") (term "0,0,1,0"))
         (rule "leq_literals" (formula "340") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "340"))
         (rule "inEqSimp_contradInEq1" (formula "342") (term "0,0") (ifseqformula "278"))
         (rule "qeq_literals" (formula "342") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "342"))
         (rule "inEqSimp_contradInEq0" (formula "342") (term "0") (ifseqformula "279"))
         (rule "inEqSimp_homoInEq1" (formula "342") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "342") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "342") (term "1,0,0,0"))
         (rule "mul_literals" (formula "342") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "342") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "342") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "342") (term "0,0,0"))
         (rule "add_literals" (formula "342") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "342") (term "1,0,0,0"))
         (rule "add_literals" (formula "342") (term "0,0,0"))
         (rule "leq_literals" (formula "342") (term "0,0"))
          (builtin "One Step Simplification" (formula "342"))
         (rule "inEqSimp_contradInEq0" (formula "341") (term "0") (ifseqformula "279"))
         (rule "inEqSimp_homoInEq1" (formula "341") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "341") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "341") (term "1,0,0,0"))
         (rule "mul_literals" (formula "341") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "341") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "341") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "341") (term "0,0,0"))
         (rule "add_literals" (formula "341") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "341") (term "1,0,0,0"))
         (rule "add_literals" (formula "341") (term "0,0,0"))
         (rule "leq_literals" (formula "341") (term "0,0"))
          (builtin "One Step Simplification" (formula "341"))
         (rule "inEqSimp_contradInEq1" (formula "340") (term "0") (ifseqformula "278"))
         (rule "qeq_literals" (formula "340") (term "0,0"))
          (builtin "One Step Simplification" (formula "340"))
         (rule "pullOutSelect" (formula "340") (term "0") (inst "selectSK=arr_113"))
         (rule "simplifySelectOfAnonEQ" (formula "340") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "340"))
         (rule "applyEqReverse" (formula "341") (term "0") (ifseqformula "340"))
         (rule "hideAuxiliaryEq" (formula "340"))
         (rule "inEqSimp_exactShadow3" (formula "341") (ifseqformula "342"))
         (rule "mul_literals" (formula "341") (term "0,0"))
         (rule "add_zero_left" (formula "341") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "341"))
         (rule "mul_literals" (formula "341") (term "1"))
         (rule "allLeft" (formula "343") (inst "t=z_109"))
         (rule "replaceKnownSelect_taclet110_227" (formula "343") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_228" (formula "343") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "343") (inst "sk=z_110"))
         (rule "andLeft" (formula "343"))
         (rule "andLeft" (formula "343"))
         (rule "applyEq" (formula "343") (term "1,1") (ifseqformula "340"))
         (rule "inEqSimp_contradInEq1" (formula "344") (term "0,0") (ifseqformula "341"))
         (rule "qeq_literals" (formula "344") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "344"))
         (rule "inEqSimp_contradInEq1" (formula "343") (term "0,0") (ifseqformula "341"))
         (rule "qeq_literals" (formula "343") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "343"))
         (rule "inEqSimp_contradInEq0" (formula "345") (term "1,0") (ifseqformula "342"))
         (rule "inEqSimp_homoInEq1" (formula "345") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "345") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "345") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "345") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "345") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "345") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "345") (term "0,0,1,0"))
         (rule "add_literals" (formula "345") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "345") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "345") (term "0,0,1,0"))
         (rule "leq_literals" (formula "345") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "345"))
         (rule "inEqSimp_contradInEq0" (formula "344") (term "0") (ifseqformula "342"))
         (rule "inEqSimp_homoInEq1" (formula "344") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "344") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "344") (term "1,0,0,0"))
         (rule "mul_literals" (formula "344") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "344") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "344") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "344") (term "0,0,0"))
         (rule "add_literals" (formula "344") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "344") (term "1,0,0,0"))
         (rule "add_literals" (formula "344") (term "0,0,0"))
         (rule "leq_literals" (formula "344") (term "0,0"))
          (builtin "One Step Simplification" (formula "344"))
         (rule "inEqSimp_contradInEq1" (formula "345") (term "0") (ifseqformula "341"))
         (rule "qeq_literals" (formula "345") (term "0,0"))
          (builtin "One Step Simplification" (formula "345"))
         (rule "inEqSimp_contradInEq0" (formula "343") (term "0") (ifseqformula "342"))
         (rule "inEqSimp_homoInEq1" (formula "343") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "343") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "343") (term "1,0,0,0"))
         (rule "mul_literals" (formula "343") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "343") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "343") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "343") (term "0,0,0"))
         (rule "add_literals" (formula "343") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "343") (term "1,0,0,0"))
         (rule "add_literals" (formula "343") (term "0,0,0"))
         (rule "leq_literals" (formula "343") (term "0,0"))
          (builtin "One Step Simplification" (formula "343"))
         (rule "pullOutSelect" (formula "343") (term "0") (inst "selectSK=arr_114"))
         (rule "simplifySelectOfAnonEQ" (formula "343") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "343"))
         (rule "applyEqReverse" (formula "344") (term "0") (ifseqformula "343"))
         (rule "hideAuxiliaryEq" (formula "343"))
         (rule "inEqSimp_exactShadow3" (formula "344") (ifseqformula "345"))
         (rule "mul_literals" (formula "344") (term "0,0"))
         (rule "add_zero_left" (formula "344") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "344"))
         (rule "mul_literals" (formula "344") (term "1"))
         (rule "allLeft" (formula "346") (inst "t=z_108"))
         (rule "replaceKnownSelect_taclet110_225" (formula "346") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_226" (formula "346") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "346") (inst "sk=z_111"))
         (rule "andLeft" (formula "346"))
         (rule "andLeft" (formula "346"))
         (rule "applyEq" (formula "346") (term "1,1") (ifseqformula "337"))
         (rule "inEqSimp_contradInEq0" (formula "348") (term "1,0") (ifseqformula "339"))
         (rule "inEqSimp_homoInEq1" (formula "348") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "348") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "348") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "348") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "348") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "348") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "348") (term "0,0,1,0"))
         (rule "add_literals" (formula "348") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "348") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "348") (term "0,0,1,0"))
         (rule "leq_literals" (formula "348") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "348"))
         (rule "inEqSimp_contradInEq1" (formula "346") (term "0,0") (ifseqformula "338"))
         (rule "qeq_literals" (formula "346") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "346"))
         (rule "inEqSimp_contradInEq1" (formula "347") (term "0,0") (ifseqformula "338"))
         (rule "qeq_literals" (formula "347") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "347"))
         (rule "inEqSimp_contradInEq1" (formula "348") (term "0") (ifseqformula "338"))
         (rule "qeq_literals" (formula "348") (term "0,0"))
          (builtin "One Step Simplification" (formula "348"))
         (rule "inEqSimp_contradInEq0" (formula "346") (term "0") (ifseqformula "339"))
         (rule "inEqSimp_homoInEq1" (formula "346") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "346") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "346") (term "1,0,0,0"))
         (rule "mul_literals" (formula "346") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "346") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "346") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "346") (term "0,0,0"))
         (rule "add_literals" (formula "346") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "346") (term "1,0,0,0"))
         (rule "add_literals" (formula "346") (term "0,0,0"))
         (rule "leq_literals" (formula "346") (term "0,0"))
          (builtin "One Step Simplification" (formula "346"))
         (rule "inEqSimp_contradInEq0" (formula "347") (term "0") (ifseqformula "339"))
         (rule "inEqSimp_homoInEq1" (formula "347") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "347") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "347") (term "1,0,0,0"))
         (rule "mul_literals" (formula "347") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "347") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "347") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "347") (term "0,0,0"))
         (rule "add_literals" (formula "347") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "347") (term "1,0,0,0"))
         (rule "add_literals" (formula "347") (term "0,0,0"))
         (rule "leq_literals" (formula "347") (term "0,0"))
          (builtin "One Step Simplification" (formula "347"))
         (rule "pullOutSelect" (formula "346") (term "0") (inst "selectSK=arr_115"))
         (rule "simplifySelectOfAnonEQ" (formula "346") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "346"))
         (rule "applyEqReverse" (formula "347") (term "0") (ifseqformula "346"))
         (rule "hideAuxiliaryEq" (formula "346"))
         (rule "inEqSimp_exactShadow3" (formula "347") (ifseqformula "348"))
         (rule "mul_literals" (formula "347") (term "0,0"))
         (rule "add_zero_left" (formula "347") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "347"))
         (rule "mul_literals" (formula "347") (term "1"))
         (rule "allLeft" (formula "349") (inst "t=z_107"))
         (rule "replaceKnownSelect_taclet110_223" (formula "349") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_224" (formula "349") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "349") (inst "sk=z_112"))
         (rule "andLeft" (formula "349"))
         (rule "andLeft" (formula "349"))
         (rule "applyEq" (formula "349") (term "1,1") (ifseqformula "334"))
         (rule "inEqSimp_contradInEq1" (formula "351") (term "0,0") (ifseqformula "335"))
         (rule "qeq_literals" (formula "351") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "351"))
         (rule "inEqSimp_contradInEq1" (formula "349") (term "0,0") (ifseqformula "335"))
         (rule "qeq_literals" (formula "349") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "349"))
         (rule "inEqSimp_contradInEq0" (formula "350") (term "1,0") (ifseqformula "336"))
         (rule "inEqSimp_homoInEq1" (formula "350") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "350") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "350") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "350") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "350") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "350") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "350") (term "0,0,1,0"))
         (rule "add_literals" (formula "350") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "350") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "350") (term "0,0,1,0"))
         (rule "leq_literals" (formula "350") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "350"))
         (rule "inEqSimp_contradInEq0" (formula "351") (term "0") (ifseqformula "336"))
         (rule "inEqSimp_homoInEq1" (formula "351") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "351") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "351") (term "1,0,0,0"))
         (rule "mul_literals" (formula "351") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "351") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "351") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "351") (term "0,0,0"))
         (rule "add_literals" (formula "351") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "351") (term "1,0,0,0"))
         (rule "add_literals" (formula "351") (term "0,0,0"))
         (rule "leq_literals" (formula "351") (term "0,0"))
          (builtin "One Step Simplification" (formula "351"))
         (rule "inEqSimp_contradInEq1" (formula "350") (term "0") (ifseqformula "335"))
         (rule "qeq_literals" (formula "350") (term "0,0"))
          (builtin "One Step Simplification" (formula "350"))
         (rule "inEqSimp_contradInEq0" (formula "349") (term "0") (ifseqformula "336"))
         (rule "inEqSimp_homoInEq1" (formula "349") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "349") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "349") (term "1,0,0,0"))
         (rule "mul_literals" (formula "349") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "349") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "349") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "349") (term "0,0,0"))
         (rule "add_literals" (formula "349") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "349") (term "1,0,0,0"))
         (rule "add_literals" (formula "349") (term "0,0,0"))
         (rule "leq_literals" (formula "349") (term "0,0"))
          (builtin "One Step Simplification" (formula "349"))
         (rule "pullOutSelect" (formula "349") (term "0") (inst "selectSK=arr_116"))
         (rule "simplifySelectOfAnonEQ" (formula "349") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "349"))
         (rule "applyEqReverse" (formula "350") (term "0") (ifseqformula "349"))
         (rule "hideAuxiliaryEq" (formula "349"))
         (rule "inEqSimp_exactShadow3" (formula "350") (ifseqformula "351"))
         (rule "mul_literals" (formula "350") (term "0,0"))
         (rule "add_zero_left" (formula "350") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "350"))
         (rule "mul_literals" (formula "350") (term "1"))
         (rule "allLeft" (formula "352") (inst "t=z_106"))
         (rule "replaceKnownSelect_taclet110_221" (formula "352") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_222" (formula "352") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "352") (inst "sk=z_113"))
         (rule "andLeft" (formula "352"))
         (rule "andLeft" (formula "352"))
         (rule "applyEq" (formula "352") (term "1,1") (ifseqformula "331"))
         (rule "inEqSimp_contradInEq1" (formula "354") (term "0,0") (ifseqformula "332"))
         (rule "qeq_literals" (formula "354") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "354"))
         (rule "inEqSimp_contradInEq1" (formula "352") (term "0,0") (ifseqformula "332"))
         (rule "qeq_literals" (formula "352") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "352"))
         (rule "inEqSimp_contradInEq0" (formula "353") (term "1,0") (ifseqformula "333"))
         (rule "inEqSimp_homoInEq1" (formula "353") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "353") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "353") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "353") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "353") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "353") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "353") (term "0,0,1,0"))
         (rule "add_literals" (formula "353") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "353") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "353") (term "0,0,1,0"))
         (rule "leq_literals" (formula "353") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "353"))
         (rule "inEqSimp_contradInEq0" (formula "354") (term "0") (ifseqformula "333"))
         (rule "inEqSimp_homoInEq1" (formula "354") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "354") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "354") (term "1,0,0,0"))
         (rule "mul_literals" (formula "354") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "354") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "354") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "354") (term "0,0,0"))
         (rule "add_literals" (formula "354") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "354") (term "1,0,0,0"))
         (rule "add_literals" (formula "354") (term "0,0,0"))
         (rule "leq_literals" (formula "354") (term "0,0"))
          (builtin "One Step Simplification" (formula "354"))
         (rule "inEqSimp_contradInEq1" (formula "353") (term "0") (ifseqformula "332"))
         (rule "qeq_literals" (formula "353") (term "0,0"))
          (builtin "One Step Simplification" (formula "353"))
         (rule "inEqSimp_contradInEq0" (formula "352") (term "0") (ifseqformula "333"))
         (rule "inEqSimp_homoInEq1" (formula "352") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "352") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "352") (term "1,0,0,0"))
         (rule "mul_literals" (formula "352") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "352") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "352") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "352") (term "0,0,0"))
         (rule "add_literals" (formula "352") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "352") (term "1,0,0,0"))
         (rule "add_literals" (formula "352") (term "0,0,0"))
         (rule "leq_literals" (formula "352") (term "0,0"))
          (builtin "One Step Simplification" (formula "352"))
         (rule "pullOutSelect" (formula "352") (term "0") (inst "selectSK=arr_117"))
         (rule "simplifySelectOfAnonEQ" (formula "352") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "352"))
         (rule "applyEqReverse" (formula "353") (term "0") (ifseqformula "352"))
         (rule "hideAuxiliaryEq" (formula "352"))
         (rule "inEqSimp_exactShadow3" (formula "353") (ifseqformula "354"))
         (rule "mul_literals" (formula "353") (term "0,0"))
         (rule "add_zero_left" (formula "353") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "353"))
         (rule "mul_literals" (formula "353") (term "1"))
         (rule "allLeft" (formula "355") (inst "t=z_105"))
         (rule "replaceKnownSelect_taclet110_219" (formula "355") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_220" (formula "355") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "355") (inst "sk=z_114"))
         (rule "andLeft" (formula "355"))
         (rule "andLeft" (formula "355"))
         (rule "applyEq" (formula "355") (term "1,1") (ifseqformula "328"))
         (rule "inEqSimp_contradInEq0" (formula "357") (term "1,0") (ifseqformula "330"))
         (rule "inEqSimp_homoInEq1" (formula "357") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "357") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "357") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "357") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "357") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "357") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "357") (term "0,0,1,0"))
         (rule "add_literals" (formula "357") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "357") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "357") (term "0,0,1,0"))
         (rule "leq_literals" (formula "357") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "357"))
         (rule "inEqSimp_contradInEq1" (formula "355") (term "0,0") (ifseqformula "329"))
         (rule "qeq_literals" (formula "355") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "355"))
         (rule "inEqSimp_contradInEq0" (formula "356") (term "1,0") (ifseqformula "330"))
         (rule "inEqSimp_homoInEq1" (formula "356") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "356") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "356") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "356") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "356") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "356") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "356") (term "0,0,1,0"))
         (rule "add_literals" (formula "356") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "356") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "356") (term "0,0,1,0"))
         (rule "leq_literals" (formula "356") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "356"))
         (rule "inEqSimp_contradInEq0" (formula "355") (term "0") (ifseqformula "330"))
         (rule "inEqSimp_homoInEq1" (formula "355") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "355") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "355") (term "1,0,0,0"))
         (rule "mul_literals" (formula "355") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "355") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "355") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "355") (term "0,0,0"))
         (rule "add_literals" (formula "355") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "355") (term "1,0,0,0"))
         (rule "add_literals" (formula "355") (term "0,0,0"))
         (rule "leq_literals" (formula "355") (term "0,0"))
          (builtin "One Step Simplification" (formula "355"))
         (rule "inEqSimp_contradInEq1" (formula "357") (term "0") (ifseqformula "329"))
         (rule "qeq_literals" (formula "357") (term "0,0"))
          (builtin "One Step Simplification" (formula "357"))
         (rule "inEqSimp_contradInEq1" (formula "356") (term "0") (ifseqformula "329"))
         (rule "qeq_literals" (formula "356") (term "0,0"))
          (builtin "One Step Simplification" (formula "356"))
         (rule "pullOutSelect" (formula "355") (term "0") (inst "selectSK=arr_118"))
         (rule "simplifySelectOfAnonEQ" (formula "355") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "355"))
         (rule "applyEqReverse" (formula "356") (term "0") (ifseqformula "355"))
         (rule "hideAuxiliaryEq" (formula "355"))
         (rule "inEqSimp_exactShadow3" (formula "356") (ifseqformula "357"))
         (rule "mul_literals" (formula "356") (term "0,0"))
         (rule "add_zero_left" (formula "356") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "356"))
         (rule "mul_literals" (formula "356") (term "1"))
         (rule "allLeft" (formula "358") (inst "t=z_104"))
         (rule "replaceKnownSelect_taclet110_217" (formula "358") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_218" (formula "358") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "358") (inst "sk=z_115"))
         (rule "andLeft" (formula "358"))
         (rule "andLeft" (formula "358"))
         (rule "applyEq" (formula "358") (term "1,1") (ifseqformula "325"))
         (rule "inEqSimp_contradInEq1" (formula "360") (term "0,0") (ifseqformula "326"))
         (rule "qeq_literals" (formula "360") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "360"))
         (rule "inEqSimp_contradInEq1" (formula "359") (term "0,0") (ifseqformula "326"))
         (rule "qeq_literals" (formula "359") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "359"))
         (rule "inEqSimp_contradInEq1" (formula "358") (term "0,0") (ifseqformula "326"))
         (rule "qeq_literals" (formula "358") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "358"))
         (rule "inEqSimp_contradInEq0" (formula "359") (term "0") (ifseqformula "327"))
         (rule "inEqSimp_homoInEq1" (formula "359") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "359") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "359") (term "1,0,0,0"))
         (rule "mul_literals" (formula "359") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "359") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "359") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "359") (term "0,0,0"))
         (rule "add_literals" (formula "359") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "359") (term "1,0,0,0"))
         (rule "add_literals" (formula "359") (term "0,0,0"))
         (rule "leq_literals" (formula "359") (term "0,0"))
          (builtin "One Step Simplification" (formula "359"))
         (rule "inEqSimp_contradInEq0" (formula "360") (term "0") (ifseqformula "327"))
         (rule "inEqSimp_homoInEq1" (formula "360") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "360") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "360") (term "1,0,0,0"))
         (rule "mul_literals" (formula "360") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "360") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "360") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "360") (term "0,0,0"))
         (rule "add_literals" (formula "360") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "360") (term "1,0,0,0"))
         (rule "add_literals" (formula "360") (term "0,0,0"))
         (rule "leq_literals" (formula "360") (term "0,0"))
          (builtin "One Step Simplification" (formula "360"))
         (rule "inEqSimp_contradInEq0" (formula "358") (term "0") (ifseqformula "327"))
         (rule "inEqSimp_homoInEq1" (formula "358") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "358") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "358") (term "1,0,0,0"))
         (rule "mul_literals" (formula "358") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "358") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "358") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "358") (term "0,0,0"))
         (rule "add_literals" (formula "358") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "358") (term "1,0,0,0"))
         (rule "add_literals" (formula "358") (term "0,0,0"))
         (rule "leq_literals" (formula "358") (term "0,0"))
          (builtin "One Step Simplification" (formula "358"))
         (rule "pullOutSelect" (formula "358") (term "0") (inst "selectSK=arr_119"))
         (rule "simplifySelectOfAnonEQ" (formula "358") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "358"))
         (rule "applyEqReverse" (formula "359") (term "0") (ifseqformula "358"))
         (rule "hideAuxiliaryEq" (formula "358"))
         (rule "inEqSimp_exactShadow3" (formula "359") (ifseqformula "360"))
         (rule "mul_literals" (formula "359") (term "0,0"))
         (rule "add_zero_left" (formula "359") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "359"))
         (rule "mul_literals" (formula "359") (term "1"))
         (rule "allLeft" (formula "361") (inst "t=z_103"))
         (rule "replaceKnownSelect_taclet110_215" (formula "361") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_216" (formula "361") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "361") (inst "sk=z_116"))
         (rule "andLeft" (formula "361"))
         (rule "andLeft" (formula "361"))
         (rule "applyEq" (formula "361") (term "1,1") (ifseqformula "322"))
         (rule "inEqSimp_contradInEq0" (formula "363") (term "1,0") (ifseqformula "324"))
         (rule "inEqSimp_homoInEq1" (formula "363") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "363") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "363") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "363") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "363") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "363") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "363") (term "0,0,1,0"))
         (rule "add_literals" (formula "363") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "363") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "363") (term "0,0,1,0"))
         (rule "leq_literals" (formula "363") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "363"))
         (rule "inEqSimp_contradInEq0" (formula "361") (term "1,0") (ifseqformula "324"))
         (rule "inEqSimp_homoInEq1" (formula "361") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "361") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "361") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "361") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "361") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "361") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "361") (term "0,0,1,0"))
         (rule "add_literals" (formula "361") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "361") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "361") (term "0,0,1,0"))
         (rule "leq_literals" (formula "361") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "361"))
         (rule "inEqSimp_contradInEq0" (formula "362") (term "1,0") (ifseqformula "324"))
         (rule "inEqSimp_homoInEq1" (formula "362") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "362") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "362") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "362") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "362") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "362") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "362") (term "0,0,1,0"))
         (rule "add_literals" (formula "362") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "362") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "362") (term "0,0,1,0"))
         (rule "leq_literals" (formula "362") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "362"))
         (rule "inEqSimp_contradInEq1" (formula "362") (term "0") (ifseqformula "323"))
         (rule "qeq_literals" (formula "362") (term "0,0"))
          (builtin "One Step Simplification" (formula "362"))
         (rule "inEqSimp_contradInEq1" (formula "363") (term "0") (ifseqformula "323"))
         (rule "qeq_literals" (formula "363") (term "0,0"))
          (builtin "One Step Simplification" (formula "363"))
         (rule "inEqSimp_contradInEq1" (formula "361") (term "0") (ifseqformula "323"))
         (rule "qeq_literals" (formula "361") (term "0,0"))
          (builtin "One Step Simplification" (formula "361"))
         (rule "pullOutSelect" (formula "361") (term "0") (inst "selectSK=arr_120"))
         (rule "simplifySelectOfAnonEQ" (formula "361") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "361"))
         (rule "applyEqReverse" (formula "362") (term "0") (ifseqformula "361"))
         (rule "hideAuxiliaryEq" (formula "361"))
         (rule "inEqSimp_exactShadow3" (formula "362") (ifseqformula "363"))
         (rule "mul_literals" (formula "362") (term "0,0"))
         (rule "add_zero_left" (formula "362") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "362"))
         (rule "mul_literals" (formula "362") (term "1"))
         (rule "allLeft" (formula "364") (inst "t=z_102"))
         (rule "replaceKnownSelect_taclet110_213" (formula "364") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_214" (formula "364") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "364") (inst "sk=z_117"))
         (rule "andLeft" (formula "364"))
         (rule "andLeft" (formula "364"))
         (rule "applyEq" (formula "364") (term "1,1") (ifseqformula "319"))
         (rule "inEqSimp_contradInEq1" (formula "365") (term "0,0") (ifseqformula "320"))
         (rule "qeq_literals" (formula "365") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "365"))
         (rule "inEqSimp_contradInEq0" (formula "366") (term "1,0") (ifseqformula "321"))
         (rule "inEqSimp_homoInEq1" (formula "366") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "366") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "366") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "366") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "366") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "366") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "366") (term "0,0,1,0"))
         (rule "add_literals" (formula "366") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "366") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "366") (term "0,0,1,0"))
         (rule "leq_literals" (formula "366") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "366"))
         (rule "inEqSimp_contradInEq0" (formula "364") (term "1,0") (ifseqformula "321"))
         (rule "inEqSimp_homoInEq1" (formula "364") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "364") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "364") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "364") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "364") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "364") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "364") (term "0,0,1,0"))
         (rule "add_literals" (formula "364") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "364") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "364") (term "0,0,1,0"))
         (rule "leq_literals" (formula "364") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "364"))
         (rule "inEqSimp_contradInEq0" (formula "365") (term "0") (ifseqformula "321"))
         (rule "inEqSimp_homoInEq1" (formula "365") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "365") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "365") (term "1,0,0,0"))
         (rule "mul_literals" (formula "365") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "365") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "365") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "365") (term "0,0,0"))
         (rule "add_literals" (formula "365") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "365") (term "1,0,0,0"))
         (rule "add_literals" (formula "365") (term "0,0,0"))
         (rule "leq_literals" (formula "365") (term "0,0"))
          (builtin "One Step Simplification" (formula "365"))
         (rule "inEqSimp_contradInEq1" (formula "364") (term "0") (ifseqformula "320"))
         (rule "qeq_literals" (formula "364") (term "0,0"))
          (builtin "One Step Simplification" (formula "364"))
         (rule "inEqSimp_contradInEq1" (formula "366") (term "0") (ifseqformula "320"))
         (rule "qeq_literals" (formula "366") (term "0,0"))
          (builtin "One Step Simplification" (formula "366"))
         (rule "pullOutSelect" (formula "364") (term "0") (inst "selectSK=arr_121"))
         (rule "simplifySelectOfAnonEQ" (formula "364") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "364"))
         (rule "applyEqReverse" (formula "365") (term "0") (ifseqformula "364"))
         (rule "hideAuxiliaryEq" (formula "364"))
         (rule "inEqSimp_exactShadow3" (formula "365") (ifseqformula "366"))
         (rule "mul_literals" (formula "365") (term "0,0"))
         (rule "add_zero_left" (formula "365") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "365"))
         (rule "mul_literals" (formula "365") (term "1"))
         (rule "allLeft" (formula "367") (inst "t=z_101"))
         (rule "replaceKnownSelect_taclet110_211" (formula "367") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_212" (formula "367") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "367") (inst "sk=z_118"))
         (rule "andLeft" (formula "367"))
         (rule "andLeft" (formula "367"))
         (rule "applyEq" (formula "367") (term "1,1") (ifseqformula "316"))
         (rule "inEqSimp_contradInEq1" (formula "369") (term "0,0") (ifseqformula "317"))
         (rule "qeq_literals" (formula "369") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "369"))
         (rule "inEqSimp_contradInEq1" (formula "367") (term "0,0") (ifseqformula "317"))
         (rule "qeq_literals" (formula "367") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "367"))
         (rule "inEqSimp_contradInEq1" (formula "368") (term "0,0") (ifseqformula "317"))
         (rule "qeq_literals" (formula "368") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "368"))
         (rule "inEqSimp_contradInEq0" (formula "369") (term "0") (ifseqformula "318"))
         (rule "inEqSimp_homoInEq1" (formula "369") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "369") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "369") (term "1,0,0,0"))
         (rule "mul_literals" (formula "369") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "369") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "369") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "369") (term "0,0,0"))
         (rule "add_literals" (formula "369") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "369") (term "1,0,0,0"))
         (rule "add_literals" (formula "369") (term "0,0,0"))
         (rule "leq_literals" (formula "369") (term "0,0"))
          (builtin "One Step Simplification" (formula "369"))
         (rule "inEqSimp_contradInEq0" (formula "368") (term "0") (ifseqformula "318"))
         (rule "inEqSimp_homoInEq1" (formula "368") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "368") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "368") (term "1,0,0,0"))
         (rule "mul_literals" (formula "368") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "368") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "368") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "368") (term "0,0,0"))
         (rule "add_literals" (formula "368") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "368") (term "1,0,0,0"))
         (rule "add_literals" (formula "368") (term "0,0,0"))
         (rule "leq_literals" (formula "368") (term "0,0"))
          (builtin "One Step Simplification" (formula "368"))
         (rule "inEqSimp_contradInEq0" (formula "367") (term "0") (ifseqformula "318"))
         (rule "inEqSimp_homoInEq1" (formula "367") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "367") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "367") (term "1,0,0,0"))
         (rule "mul_literals" (formula "367") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "367") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "367") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "367") (term "0,0,0"))
         (rule "add_literals" (formula "367") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "367") (term "1,0,0,0"))
         (rule "add_literals" (formula "367") (term "0,0,0"))
         (rule "leq_literals" (formula "367") (term "0,0"))
          (builtin "One Step Simplification" (formula "367"))
         (rule "pullOutSelect" (formula "367") (term "0") (inst "selectSK=arr_122"))
         (rule "simplifySelectOfAnonEQ" (formula "367") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "367"))
         (rule "applyEqReverse" (formula "368") (term "0") (ifseqformula "367"))
         (rule "hideAuxiliaryEq" (formula "367"))
         (rule "inEqSimp_exactShadow3" (formula "368") (ifseqformula "369"))
         (rule "mul_literals" (formula "368") (term "0,0"))
         (rule "add_zero_left" (formula "368") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "368"))
         (rule "mul_literals" (formula "368") (term "1"))
         (rule "allLeft" (formula "370") (inst "t=z_100"))
         (rule "replaceKnownSelect_taclet110_209" (formula "370") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_210" (formula "370") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "370") (inst "sk=z_119"))
         (rule "andLeft" (formula "370"))
         (rule "andLeft" (formula "370"))
         (rule "applyEq" (formula "370") (term "1,1") (ifseqformula "313"))
         (rule "inEqSimp_contradInEq0" (formula "372") (term "1,0") (ifseqformula "315"))
         (rule "inEqSimp_homoInEq1" (formula "372") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "372") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "372") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "372") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "372") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "372") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "372") (term "0,0,1,0"))
         (rule "add_literals" (formula "372") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "372") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "372") (term "0,0,1,0"))
         (rule "leq_literals" (formula "372") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "372"))
         (rule "inEqSimp_contradInEq1" (formula "370") (term "0,0") (ifseqformula "314"))
         (rule "qeq_literals" (formula "370") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "370"))
         (rule "inEqSimp_contradInEq0" (formula "371") (term "1,0") (ifseqformula "315"))
         (rule "inEqSimp_homoInEq1" (formula "371") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "371") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "371") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "371") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "371") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "371") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "371") (term "0,0,1,0"))
         (rule "add_literals" (formula "371") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "371") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "371") (term "0,0,1,0"))
         (rule "leq_literals" (formula "371") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "371"))
         (rule "inEqSimp_contradInEq0" (formula "370") (term "0") (ifseqformula "315"))
         (rule "inEqSimp_homoInEq1" (formula "370") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "370") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "370") (term "1,0,0,0"))
         (rule "mul_literals" (formula "370") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "370") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "370") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "370") (term "0,0,0"))
         (rule "add_literals" (formula "370") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "370") (term "1,0,0,0"))
         (rule "add_literals" (formula "370") (term "0,0,0"))
         (rule "leq_literals" (formula "370") (term "0,0"))
          (builtin "One Step Simplification" (formula "370"))
         (rule "inEqSimp_contradInEq1" (formula "372") (term "0") (ifseqformula "314"))
         (rule "qeq_literals" (formula "372") (term "0,0"))
          (builtin "One Step Simplification" (formula "372"))
         (rule "inEqSimp_contradInEq1" (formula "371") (term "0") (ifseqformula "314"))
         (rule "qeq_literals" (formula "371") (term "0,0"))
          (builtin "One Step Simplification" (formula "371"))
         (rule "pullOutSelect" (formula "370") (term "0") (inst "selectSK=arr_123"))
         (rule "simplifySelectOfAnonEQ" (formula "370") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "370"))
         (rule "applyEqReverse" (formula "371") (term "0") (ifseqformula "370"))
         (rule "hideAuxiliaryEq" (formula "370"))
         (rule "inEqSimp_exactShadow3" (formula "371") (ifseqformula "372"))
         (rule "mul_literals" (formula "371") (term "0,0"))
         (rule "add_zero_left" (formula "371") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "371"))
         (rule "mul_literals" (formula "371") (term "1"))
         (rule "allLeft" (formula "373") (inst "t=z_99"))
         (rule "replaceKnownSelect_taclet110_207" (formula "373") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_208" (formula "373") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "373") (inst "sk=z_120"))
         (rule "andLeft" (formula "373"))
         (rule "andLeft" (formula "373"))
         (rule "applyEq" (formula "373") (term "1,1") (ifseqformula "310"))
         (rule "inEqSimp_contradInEq1" (formula "375") (term "0,0") (ifseqformula "311"))
         (rule "qeq_literals" (formula "375") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "375"))
         (rule "inEqSimp_contradInEq0" (formula "374") (term "1,0") (ifseqformula "312"))
         (rule "inEqSimp_homoInEq1" (formula "374") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "374") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "374") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "374") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "374") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "374") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "374") (term "0,0,1,0"))
         (rule "add_literals" (formula "374") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "374") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "374") (term "0,0,1,0"))
         (rule "leq_literals" (formula "374") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "374"))
         (rule "inEqSimp_contradInEq1" (formula "373") (term "0,0") (ifseqformula "311"))
         (rule "qeq_literals" (formula "373") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "373"))
         (rule "inEqSimp_contradInEq0" (formula "373") (term "0") (ifseqformula "312"))
         (rule "inEqSimp_homoInEq1" (formula "373") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "373") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "373") (term "1,0,0,0"))
         (rule "mul_literals" (formula "373") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "373") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "373") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "373") (term "0,0,0"))
         (rule "add_literals" (formula "373") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "373") (term "1,0,0,0"))
         (rule "add_literals" (formula "373") (term "0,0,0"))
         (rule "leq_literals" (formula "373") (term "0,0"))
          (builtin "One Step Simplification" (formula "373"))
         (rule "inEqSimp_contradInEq0" (formula "375") (term "0") (ifseqformula "312"))
         (rule "inEqSimp_homoInEq1" (formula "375") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "375") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "375") (term "1,0,0,0"))
         (rule "mul_literals" (formula "375") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "375") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "375") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "375") (term "0,0,0"))
         (rule "add_literals" (formula "375") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "375") (term "1,0,0,0"))
         (rule "add_literals" (formula "375") (term "0,0,0"))
         (rule "leq_literals" (formula "375") (term "0,0"))
          (builtin "One Step Simplification" (formula "375"))
         (rule "inEqSimp_contradInEq1" (formula "374") (term "0") (ifseqformula "311"))
         (rule "qeq_literals" (formula "374") (term "0,0"))
          (builtin "One Step Simplification" (formula "374"))
         (rule "pullOutSelect" (formula "373") (term "0") (inst "selectSK=arr_124"))
         (rule "simplifySelectOfAnonEQ" (formula "373") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "373"))
         (rule "applyEqReverse" (formula "374") (term "0") (ifseqformula "373"))
         (rule "hideAuxiliaryEq" (formula "373"))
         (rule "inEqSimp_exactShadow3" (formula "374") (ifseqformula "375"))
         (rule "mul_literals" (formula "374") (term "0,0"))
         (rule "add_zero_left" (formula "374") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "374"))
         (rule "mul_literals" (formula "374") (term "1"))
         (rule "allLeft" (formula "376") (inst "t=z_120"))
         (rule "replaceKnownSelect_taclet110_249" (formula "376") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_250" (formula "376") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "376") (inst "sk=z_121"))
         (rule "andLeft" (formula "376"))
         (rule "andLeft" (formula "376"))
         (rule "applyEq" (formula "376") (term "1,1") (ifseqformula "373"))
         (rule "inEqSimp_contradInEq1" (formula "377") (term "0,0") (ifseqformula "374"))
         (rule "qeq_literals" (formula "377") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "377"))
         (rule "inEqSimp_contradInEq0" (formula "376") (term "1,0") (ifseqformula "375"))
         (rule "inEqSimp_homoInEq1" (formula "376") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "376") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "376") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "376") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "376") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "376") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "376") (term "0,0,1,0"))
         (rule "add_literals" (formula "376") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "376") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "376") (term "0,0,1,0"))
         (rule "leq_literals" (formula "376") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "376"))
         (rule "inEqSimp_contradInEq0" (formula "378") (term "1,0") (ifseqformula "375"))
         (rule "inEqSimp_homoInEq1" (formula "378") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "378") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "378") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "378") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "378") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "378") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "378") (term "0,0,1,0"))
         (rule "add_literals" (formula "378") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "378") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "378") (term "0,0,1,0"))
         (rule "leq_literals" (formula "378") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "378"))
         (rule "inEqSimp_contradInEq0" (formula "377") (term "0") (ifseqformula "375"))
         (rule "inEqSimp_homoInEq1" (formula "377") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "377") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "377") (term "1,0,0,0"))
         (rule "mul_literals" (formula "377") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "377") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "377") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "377") (term "0,0,0"))
         (rule "add_literals" (formula "377") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "377") (term "1,0,0,0"))
         (rule "add_literals" (formula "377") (term "0,0,0"))
         (rule "leq_literals" (formula "377") (term "0,0"))
          (builtin "One Step Simplification" (formula "377"))
         (rule "inEqSimp_contradInEq1" (formula "376") (term "0") (ifseqformula "374"))
         (rule "qeq_literals" (formula "376") (term "0,0"))
          (builtin "One Step Simplification" (formula "376"))
         (rule "inEqSimp_contradInEq1" (formula "378") (term "0") (ifseqformula "374"))
         (rule "qeq_literals" (formula "378") (term "0,0"))
          (builtin "One Step Simplification" (formula "378"))
         (rule "pullOutSelect" (formula "376") (term "0") (inst "selectSK=arr_125"))
         (rule "simplifySelectOfAnonEQ" (formula "376") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "376"))
         (rule "applyEqReverse" (formula "377") (term "0") (ifseqformula "376"))
         (rule "hideAuxiliaryEq" (formula "376"))
         (rule "inEqSimp_exactShadow3" (formula "377") (ifseqformula "378"))
         (rule "mul_literals" (formula "377") (term "0,0"))
         (rule "add_zero_left" (formula "377") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "377"))
         (rule "mul_literals" (formula "377") (term "1"))
         (rule "allLeft" (formula "379") (inst "t=z_119"))
         (rule "replaceKnownSelect_taclet110_247" (formula "379") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_248" (formula "379") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "379") (inst "sk=z_122"))
         (rule "andLeft" (formula "379"))
         (rule "andLeft" (formula "379"))
         (rule "applyEq" (formula "379") (term "1,1") (ifseqformula "370"))
         (rule "inEqSimp_contradInEq1" (formula "379") (term "0,0") (ifseqformula "371"))
         (rule "qeq_literals" (formula "379") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "379"))
         (rule "inEqSimp_contradInEq1" (formula "381") (term "0,0") (ifseqformula "371"))
         (rule "qeq_literals" (formula "381") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "381"))
         (rule "inEqSimp_contradInEq1" (formula "380") (term "0,0") (ifseqformula "371"))
         (rule "qeq_literals" (formula "380") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "380"))
         (rule "inEqSimp_contradInEq0" (formula "379") (term "0") (ifseqformula "372"))
         (rule "inEqSimp_homoInEq1" (formula "379") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "379") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "379") (term "1,0,0,0"))
         (rule "mul_literals" (formula "379") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "379") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "379") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "379") (term "0,0,0"))
         (rule "add_literals" (formula "379") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "379") (term "1,0,0,0"))
         (rule "add_literals" (formula "379") (term "0,0,0"))
         (rule "leq_literals" (formula "379") (term "0,0"))
          (builtin "One Step Simplification" (formula "379"))
         (rule "inEqSimp_contradInEq0" (formula "380") (term "0") (ifseqformula "372"))
         (rule "inEqSimp_homoInEq1" (formula "380") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "380") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "380") (term "1,0,0,0"))
         (rule "mul_literals" (formula "380") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "380") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "380") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "380") (term "0,0,0"))
         (rule "add_literals" (formula "380") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "380") (term "1,0,0,0"))
         (rule "add_literals" (formula "380") (term "0,0,0"))
         (rule "leq_literals" (formula "380") (term "0,0"))
          (builtin "One Step Simplification" (formula "380"))
         (rule "inEqSimp_contradInEq0" (formula "381") (term "0") (ifseqformula "372"))
         (rule "inEqSimp_homoInEq1" (formula "381") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "381") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "381") (term "1,0,0,0"))
         (rule "mul_literals" (formula "381") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "381") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "381") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "381") (term "0,0,0"))
         (rule "add_literals" (formula "381") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "381") (term "1,0,0,0"))
         (rule "add_literals" (formula "381") (term "0,0,0"))
         (rule "leq_literals" (formula "381") (term "0,0"))
          (builtin "One Step Simplification" (formula "381"))
         (rule "pullOutSelect" (formula "379") (term "0") (inst "selectSK=arr_126"))
         (rule "simplifySelectOfAnonEQ" (formula "379") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "379"))
         (rule "applyEqReverse" (formula "380") (term "0") (ifseqformula "379"))
         (rule "hideAuxiliaryEq" (formula "379"))
         (rule "inEqSimp_exactShadow3" (formula "380") (ifseqformula "381"))
         (rule "mul_literals" (formula "380") (term "0,0"))
         (rule "add_zero_left" (formula "380") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "380"))
         (rule "mul_literals" (formula "380") (term "1"))
         (rule "allLeft" (formula "382") (inst "t=z_118"))
         (rule "replaceKnownSelect_taclet110_245" (formula "382") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_246" (formula "382") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "382") (inst "sk=z_123"))
         (rule "andLeft" (formula "382"))
         (rule "andLeft" (formula "382"))
         (rule "applyEq" (formula "382") (term "1,1") (ifseqformula "367"))
         (rule "inEqSimp_contradInEq1" (formula "384") (term "0,0") (ifseqformula "368"))
         (rule "qeq_literals" (formula "384") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "384"))
         (rule "inEqSimp_contradInEq1" (formula "382") (term "0,0") (ifseqformula "368"))
         (rule "qeq_literals" (formula "382") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "382"))
         (rule "inEqSimp_contradInEq1" (formula "383") (term "0,0") (ifseqformula "368"))
         (rule "qeq_literals" (formula "383") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "383"))
         (rule "inEqSimp_contradInEq0" (formula "384") (term "0") (ifseqformula "369"))
         (rule "inEqSimp_homoInEq1" (formula "384") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "384") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "384") (term "1,0,0,0"))
         (rule "mul_literals" (formula "384") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "384") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "384") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "384") (term "0,0,0"))
         (rule "add_literals" (formula "384") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "384") (term "1,0,0,0"))
         (rule "add_literals" (formula "384") (term "0,0,0"))
         (rule "leq_literals" (formula "384") (term "0,0"))
          (builtin "One Step Simplification" (formula "384"))
         (rule "inEqSimp_contradInEq0" (formula "382") (term "0") (ifseqformula "369"))
         (rule "inEqSimp_homoInEq1" (formula "382") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "382") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "382") (term "1,0,0,0"))
         (rule "mul_literals" (formula "382") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "382") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "382") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "382") (term "0,0,0"))
         (rule "add_literals" (formula "382") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "382") (term "1,0,0,0"))
         (rule "add_literals" (formula "382") (term "0,0,0"))
         (rule "leq_literals" (formula "382") (term "0,0"))
          (builtin "One Step Simplification" (formula "382"))
         (rule "inEqSimp_contradInEq0" (formula "383") (term "0") (ifseqformula "369"))
         (rule "inEqSimp_homoInEq1" (formula "383") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "383") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "383") (term "1,0,0,0"))
         (rule "mul_literals" (formula "383") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "383") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "383") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "383") (term "0,0,0"))
         (rule "add_literals" (formula "383") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "383") (term "1,0,0,0"))
         (rule "add_literals" (formula "383") (term "0,0,0"))
         (rule "leq_literals" (formula "383") (term "0,0"))
          (builtin "One Step Simplification" (formula "383"))
         (rule "pullOutSelect" (formula "382") (term "0") (inst "selectSK=arr_127"))
         (rule "simplifySelectOfAnonEQ" (formula "382") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "382"))
         (rule "applyEqReverse" (formula "383") (term "0") (ifseqformula "382"))
         (rule "hideAuxiliaryEq" (formula "382"))
         (rule "inEqSimp_exactShadow3" (formula "383") (ifseqformula "384"))
         (rule "mul_literals" (formula "383") (term "0,0"))
         (rule "add_zero_left" (formula "383") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "383"))
         (rule "mul_literals" (formula "383") (term "1"))
         (rule "allLeft" (formula "385") (inst "t=z_117"))
         (rule "replaceKnownSelect_taclet110_243" (formula "385") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_244" (formula "385") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "385") (inst "sk=z_124"))
         (rule "andLeft" (formula "385"))
         (rule "andLeft" (formula "385"))
         (rule "applyEq" (formula "385") (term "1,1") (ifseqformula "364"))
         (rule "inEqSimp_contradInEq0" (formula "386") (term "1,0") (ifseqformula "366"))
         (rule "inEqSimp_homoInEq1" (formula "386") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "386") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "386") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "386") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "386") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "386") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "386") (term "0,0,1,0"))
         (rule "add_literals" (formula "386") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "386") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "386") (term "0,0,1,0"))
         (rule "leq_literals" (formula "386") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "386"))
         (rule "inEqSimp_contradInEq0" (formula "385") (term "1,0") (ifseqformula "366"))
         (rule "inEqSimp_homoInEq1" (formula "385") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "385") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "385") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "385") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "385") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "385") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "385") (term "0,0,1,0"))
         (rule "add_literals" (formula "385") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "385") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "385") (term "0,0,1,0"))
         (rule "leq_literals" (formula "385") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "385"))
         (rule "inEqSimp_contradInEq0" (formula "387") (term "1,0") (ifseqformula "366"))
         (rule "inEqSimp_homoInEq1" (formula "387") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "387") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "387") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "387") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "387") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "387") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "387") (term "0,0,1,0"))
         (rule "add_literals" (formula "387") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "387") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "387") (term "0,0,1,0"))
         (rule "leq_literals" (formula "387") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "387"))
         (rule "inEqSimp_contradInEq1" (formula "387") (term "0") (ifseqformula "365"))
         (rule "qeq_literals" (formula "387") (term "0,0"))
          (builtin "One Step Simplification" (formula "387"))
         (rule "inEqSimp_contradInEq1" (formula "386") (term "0") (ifseqformula "365"))
         (rule "qeq_literals" (formula "386") (term "0,0"))
          (builtin "One Step Simplification" (formula "386"))
         (rule "inEqSimp_contradInEq1" (formula "385") (term "0") (ifseqformula "365"))
         (rule "qeq_literals" (formula "385") (term "0,0"))
          (builtin "One Step Simplification" (formula "385"))
         (rule "pullOutSelect" (formula "385") (term "0") (inst "selectSK=arr_128"))
         (rule "simplifySelectOfAnonEQ" (formula "385") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "385"))
         (rule "applyEqReverse" (formula "386") (term "0") (ifseqformula "385"))
         (rule "hideAuxiliaryEq" (formula "385"))
         (rule "inEqSimp_exactShadow3" (formula "386") (ifseqformula "387"))
         (rule "mul_literals" (formula "386") (term "0,0"))
         (rule "add_zero_left" (formula "386") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "386"))
         (rule "mul_literals" (formula "386") (term "1"))
         (rule "allLeft" (formula "388") (inst "t=z_116"))
         (rule "replaceKnownSelect_taclet110_241" (formula "388") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_242" (formula "388") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "388") (inst "sk=z_125"))
         (rule "andLeft" (formula "388"))
         (rule "andLeft" (formula "388"))
         (rule "applyEq" (formula "388") (term "1,1") (ifseqformula "361"))
         (rule "inEqSimp_contradInEq0" (formula "390") (term "1,0") (ifseqformula "363"))
         (rule "inEqSimp_homoInEq1" (formula "390") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "390") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "390") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "390") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "390") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "390") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "390") (term "0,0,1,0"))
         (rule "add_literals" (formula "390") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "390") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "390") (term "0,0,1,0"))
         (rule "leq_literals" (formula "390") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "390"))
         (rule "inEqSimp_contradInEq1" (formula "389") (term "0,0") (ifseqformula "362"))
         (rule "qeq_literals" (formula "389") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "389"))
         (rule "inEqSimp_contradInEq0" (formula "388") (term "1,0") (ifseqformula "363"))
         (rule "inEqSimp_homoInEq1" (formula "388") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "388") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "388") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "388") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "388") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "388") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "388") (term "0,0,1,0"))
         (rule "add_literals" (formula "388") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "388") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "388") (term "0,0,1,0"))
         (rule "leq_literals" (formula "388") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "388"))
         (rule "inEqSimp_contradInEq1" (formula "390") (term "0") (ifseqformula "362"))
         (rule "qeq_literals" (formula "390") (term "0,0"))
          (builtin "One Step Simplification" (formula "390"))
         (rule "inEqSimp_contradInEq0" (formula "389") (term "0") (ifseqformula "363"))
         (rule "inEqSimp_homoInEq1" (formula "389") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "389") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "389") (term "1,0,0,0"))
         (rule "mul_literals" (formula "389") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "389") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "389") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "389") (term "0,0,0"))
         (rule "add_literals" (formula "389") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "389") (term "1,0,0,0"))
         (rule "add_literals" (formula "389") (term "0,0,0"))
         (rule "leq_literals" (formula "389") (term "0,0"))
          (builtin "One Step Simplification" (formula "389"))
         (rule "inEqSimp_contradInEq1" (formula "388") (term "0") (ifseqformula "362"))
         (rule "qeq_literals" (formula "388") (term "0,0"))
          (builtin "One Step Simplification" (formula "388"))
         (rule "pullOutSelect" (formula "388") (term "0") (inst "selectSK=arr_129"))
         (rule "simplifySelectOfAnonEQ" (formula "388") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "388"))
         (rule "applyEqReverse" (formula "389") (term "0") (ifseqformula "388"))
         (rule "hideAuxiliaryEq" (formula "388"))
         (rule "inEqSimp_exactShadow3" (formula "389") (ifseqformula "390"))
         (rule "mul_literals" (formula "389") (term "0,0"))
         (rule "add_zero_left" (formula "389") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "389"))
         (rule "mul_literals" (formula "389") (term "1"))
         (rule "allLeft" (formula "391") (inst "t=z_115"))
         (rule "replaceKnownSelect_taclet110_239" (formula "391") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_240" (formula "391") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "391") (inst "sk=z_126"))
         (rule "andLeft" (formula "391"))
         (rule "andLeft" (formula "391"))
         (rule "applyEq" (formula "391") (term "1,1") (ifseqformula "358"))
         (rule "inEqSimp_contradInEq1" (formula "392") (term "0,0") (ifseqformula "359"))
         (rule "qeq_literals" (formula "392") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "392"))
         (rule "inEqSimp_contradInEq1" (formula "391") (term "0,0") (ifseqformula "359"))
         (rule "qeq_literals" (formula "391") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "391"))
         (rule "inEqSimp_contradInEq1" (formula "393") (term "0,0") (ifseqformula "359"))
         (rule "qeq_literals" (formula "393") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "393"))
         (rule "inEqSimp_contradInEq0" (formula "392") (term "0") (ifseqformula "360"))
         (rule "inEqSimp_homoInEq1" (formula "392") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "392") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "392") (term "1,0,0,0"))
         (rule "mul_literals" (formula "392") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "392") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "392") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "392") (term "0,0,0"))
         (rule "add_literals" (formula "392") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "392") (term "1,0,0,0"))
         (rule "add_literals" (formula "392") (term "0,0,0"))
         (rule "leq_literals" (formula "392") (term "0,0"))
          (builtin "One Step Simplification" (formula "392"))
         (rule "inEqSimp_contradInEq0" (formula "391") (term "0") (ifseqformula "360"))
         (rule "inEqSimp_homoInEq1" (formula "391") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "391") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "391") (term "1,0,0,0"))
         (rule "mul_literals" (formula "391") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "391") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "391") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "391") (term "0,0,0"))
         (rule "add_literals" (formula "391") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "391") (term "1,0,0,0"))
         (rule "add_literals" (formula "391") (term "0,0,0"))
         (rule "leq_literals" (formula "391") (term "0,0"))
          (builtin "One Step Simplification" (formula "391"))
         (rule "inEqSimp_contradInEq0" (formula "393") (term "0") (ifseqformula "360"))
         (rule "inEqSimp_homoInEq1" (formula "393") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "393") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "393") (term "1,0,0,0"))
         (rule "mul_literals" (formula "393") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "393") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "393") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "393") (term "0,0,0"))
         (rule "add_literals" (formula "393") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "393") (term "1,0,0,0"))
         (rule "add_literals" (formula "393") (term "0,0,0"))
         (rule "leq_literals" (formula "393") (term "0,0"))
          (builtin "One Step Simplification" (formula "393"))
         (rule "pullOutSelect" (formula "391") (term "0") (inst "selectSK=arr_130"))
         (rule "simplifySelectOfAnonEQ" (formula "391") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "391"))
         (rule "applyEqReverse" (formula "392") (term "0") (ifseqformula "391"))
         (rule "hideAuxiliaryEq" (formula "391"))
         (rule "inEqSimp_exactShadow3" (formula "392") (ifseqformula "393"))
         (rule "mul_literals" (formula "392") (term "0,0"))
         (rule "add_zero_left" (formula "392") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "392"))
         (rule "mul_literals" (formula "392") (term "1"))
         (rule "allLeft" (formula "394") (inst "t=z_114"))
         (rule "replaceKnownSelect_taclet110_237" (formula "394") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_238" (formula "394") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "394") (inst "sk=z_127"))
         (rule "andLeft" (formula "394"))
         (rule "andLeft" (formula "394"))
         (rule "applyEq" (formula "394") (term "1,1") (ifseqformula "355"))
         (rule "inEqSimp_contradInEq0" (formula "395") (term "1,0") (ifseqformula "357"))
         (rule "inEqSimp_homoInEq1" (formula "395") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "395") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "395") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "395") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "395") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "395") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "395") (term "0,0,1,0"))
         (rule "add_literals" (formula "395") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "395") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "395") (term "0,0,1,0"))
         (rule "leq_literals" (formula "395") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "395"))
         (rule "inEqSimp_contradInEq0" (formula "396") (term "1,0") (ifseqformula "357"))
         (rule "inEqSimp_homoInEq1" (formula "396") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "396") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "396") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "396") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "396") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "396") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "396") (term "0,0,1,0"))
         (rule "add_literals" (formula "396") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "396") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "396") (term "0,0,1,0"))
         (rule "leq_literals" (formula "396") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "396"))
         (rule "inEqSimp_contradInEq0" (formula "394") (term "1,0") (ifseqformula "357"))
         (rule "inEqSimp_homoInEq1" (formula "394") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "394") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "394") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "394") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "394") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "394") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "394") (term "0,0,1,0"))
         (rule "add_literals" (formula "394") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "394") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "394") (term "0,0,1,0"))
         (rule "leq_literals" (formula "394") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "394"))
         (rule "inEqSimp_contradInEq1" (formula "396") (term "0") (ifseqformula "356"))
         (rule "qeq_literals" (formula "396") (term "0,0"))
          (builtin "One Step Simplification" (formula "396"))
         (rule "inEqSimp_contradInEq1" (formula "395") (term "0") (ifseqformula "356"))
         (rule "qeq_literals" (formula "395") (term "0,0"))
          (builtin "One Step Simplification" (formula "395"))
         (rule "inEqSimp_contradInEq1" (formula "394") (term "0") (ifseqformula "356"))
         (rule "qeq_literals" (formula "394") (term "0,0"))
          (builtin "One Step Simplification" (formula "394"))
         (rule "pullOutSelect" (formula "394") (term "0") (inst "selectSK=arr_131"))
         (rule "simplifySelectOfAnonEQ" (formula "394") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "394"))
         (rule "applyEqReverse" (formula "395") (term "0") (ifseqformula "394"))
         (rule "hideAuxiliaryEq" (formula "394"))
         (rule "inEqSimp_exactShadow3" (formula "395") (ifseqformula "396"))
         (rule "mul_literals" (formula "395") (term "0,0"))
         (rule "add_zero_left" (formula "395") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "395"))
         (rule "mul_literals" (formula "395") (term "1"))
         (rule "allLeft" (formula "397") (inst "t=z_113"))
         (rule "replaceKnownSelect_taclet110_235" (formula "397") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_236" (formula "397") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "397") (inst "sk=z_128"))
         (rule "andLeft" (formula "397"))
         (rule "andLeft" (formula "397"))
         (rule "applyEq" (formula "397") (term "1,1") (ifseqformula "352"))
         (rule "inEqSimp_contradInEq0" (formula "399") (term "1,0") (ifseqformula "354"))
         (rule "inEqSimp_homoInEq1" (formula "399") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "399") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "399") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "399") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "399") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "399") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "399") (term "0,0,1,0"))
         (rule "add_literals" (formula "399") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "399") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "399") (term "0,0,1,0"))
         (rule "leq_literals" (formula "399") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "399"))
         (rule "inEqSimp_contradInEq1" (formula "397") (term "0,0") (ifseqformula "353"))
         (rule "qeq_literals" (formula "397") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "397"))
         (rule "inEqSimp_contradInEq1" (formula "398") (term "0,0") (ifseqformula "353"))
         (rule "qeq_literals" (formula "398") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "398"))
         (rule "inEqSimp_contradInEq0" (formula "397") (term "0") (ifseqformula "354"))
         (rule "inEqSimp_homoInEq1" (formula "397") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "397") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "397") (term "1,0,0,0"))
         (rule "mul_literals" (formula "397") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "397") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "397") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "397") (term "0,0,0"))
         (rule "add_literals" (formula "397") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "397") (term "1,0,0,0"))
         (rule "add_literals" (formula "397") (term "0,0,0"))
         (rule "leq_literals" (formula "397") (term "0,0"))
          (builtin "One Step Simplification" (formula "397"))
         (rule "inEqSimp_contradInEq1" (formula "399") (term "0") (ifseqformula "353"))
         (rule "qeq_literals" (formula "399") (term "0,0"))
          (builtin "One Step Simplification" (formula "399"))
         (rule "inEqSimp_contradInEq0" (formula "398") (term "0") (ifseqformula "354"))
         (rule "inEqSimp_homoInEq1" (formula "398") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "398") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "398") (term "1,0,0,0"))
         (rule "mul_literals" (formula "398") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "398") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "398") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "398") (term "0,0,0"))
         (rule "add_literals" (formula "398") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "398") (term "1,0,0,0"))
         (rule "add_literals" (formula "398") (term "0,0,0"))
         (rule "leq_literals" (formula "398") (term "0,0"))
          (builtin "One Step Simplification" (formula "398"))
         (rule "pullOutSelect" (formula "397") (term "0") (inst "selectSK=arr_132"))
         (rule "simplifySelectOfAnonEQ" (formula "397") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "397"))
         (rule "applyEqReverse" (formula "398") (term "0") (ifseqformula "397"))
         (rule "hideAuxiliaryEq" (formula "397"))
         (rule "inEqSimp_exactShadow3" (formula "398") (ifseqformula "399"))
         (rule "mul_literals" (formula "398") (term "0,0"))
         (rule "add_zero_left" (formula "398") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "398"))
         (rule "mul_literals" (formula "398") (term "1"))
         (rule "allLeft" (formula "400") (inst "t=z_112"))
         (rule "replaceKnownSelect_taclet110_233" (formula "400") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_234" (formula "400") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "400") (inst "sk=z_129"))
         (rule "andLeft" (formula "400"))
         (rule "andLeft" (formula "400"))
         (rule "applyEq" (formula "400") (term "1,1") (ifseqformula "349"))
         (rule "inEqSimp_contradInEq1" (formula "402") (term "0,0") (ifseqformula "350"))
         (rule "qeq_literals" (formula "402") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "402"))
         (rule "inEqSimp_contradInEq1" (formula "401") (term "0,0") (ifseqformula "350"))
         (rule "qeq_literals" (formula "401") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "401"))
         (rule "inEqSimp_contradInEq0" (formula "400") (term "1,0") (ifseqformula "351"))
         (rule "inEqSimp_homoInEq1" (formula "400") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "400") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "400") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "400") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "400") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "400") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "400") (term "0,0,1,0"))
         (rule "add_literals" (formula "400") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "400") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "400") (term "0,0,1,0"))
         (rule "leq_literals" (formula "400") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "400"))
         (rule "inEqSimp_contradInEq0" (formula "402") (term "0") (ifseqformula "351"))
         (rule "inEqSimp_homoInEq1" (formula "402") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "402") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "402") (term "1,0,0,0"))
         (rule "mul_literals" (formula "402") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "402") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "402") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "402") (term "0,0,0"))
         (rule "add_literals" (formula "402") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "402") (term "1,0,0,0"))
         (rule "add_literals" (formula "402") (term "0,0,0"))
         (rule "leq_literals" (formula "402") (term "0,0"))
          (builtin "One Step Simplification" (formula "402"))
         (rule "inEqSimp_contradInEq1" (formula "400") (term "0") (ifseqformula "350"))
         (rule "qeq_literals" (formula "400") (term "0,0"))
          (builtin "One Step Simplification" (formula "400"))
         (rule "inEqSimp_contradInEq0" (formula "401") (term "0") (ifseqformula "351"))
         (rule "inEqSimp_homoInEq1" (formula "401") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "401") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "401") (term "1,0,0,0"))
         (rule "mul_literals" (formula "401") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "401") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "401") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "401") (term "0,0,0"))
         (rule "add_literals" (formula "401") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "401") (term "1,0,0,0"))
         (rule "add_literals" (formula "401") (term "0,0,0"))
         (rule "leq_literals" (formula "401") (term "0,0"))
          (builtin "One Step Simplification" (formula "401"))
         (rule "pullOutSelect" (formula "400") (term "0") (inst "selectSK=arr_133"))
         (rule "simplifySelectOfAnonEQ" (formula "400") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "400"))
         (rule "applyEqReverse" (formula "401") (term "0") (ifseqformula "400"))
         (rule "hideAuxiliaryEq" (formula "400"))
         (rule "inEqSimp_exactShadow3" (formula "401") (ifseqformula "402"))
         (rule "mul_literals" (formula "401") (term "0,0"))
         (rule "add_zero_left" (formula "401") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "401"))
         (rule "mul_literals" (formula "401") (term "1"))
         (rule "allLeft" (formula "403") (inst "t=z_111"))
         (rule "replaceKnownSelect_taclet110_231" (formula "403") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_232" (formula "403") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "403") (inst "sk=z_130"))
         (rule "andLeft" (formula "403"))
         (rule "andLeft" (formula "403"))
         (rule "applyEq" (formula "403") (term "1,1") (ifseqformula "346"))
         (rule "inEqSimp_contradInEq1" (formula "403") (term "0,0") (ifseqformula "347"))
         (rule "qeq_literals" (formula "403") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "403"))
         (rule "inEqSimp_contradInEq1" (formula "404") (term "0,0") (ifseqformula "347"))
         (rule "qeq_literals" (formula "404") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "404"))
         (rule "inEqSimp_contradInEq0" (formula "405") (term "1,0") (ifseqformula "348"))
         (rule "inEqSimp_homoInEq1" (formula "405") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "405") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "405") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "405") (term "0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "405") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "405") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "405") (term "0,0,1,0"))
         (rule "add_literals" (formula "405") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "405") (term "1,0,0,1,0"))
         (rule "add_literals" (formula "405") (term "0,0,1,0"))
         (rule "leq_literals" (formula "405") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "405"))
         (rule "inEqSimp_contradInEq0" (formula "403") (term "0") (ifseqformula "348"))
         (rule "inEqSimp_homoInEq1" (formula "403") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "403") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "403") (term "1,0,0,0"))
         (rule "mul_literals" (formula "403") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "403") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "403") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "403") (term "0,0,0"))
         (rule "add_literals" (formula "403") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "403") (term "1,0,0,0"))
         (rule "add_literals" (formula "403") (term "0,0,0"))
         (rule "leq_literals" (formula "403") (term "0,0"))
          (builtin "One Step Simplification" (formula "403"))
         (rule "inEqSimp_contradInEq1" (formula "405") (term "0") (ifseqformula "347"))
         (rule "qeq_literals" (formula "405") (term "0,0"))
          (builtin "One Step Simplification" (formula "405"))
         (rule "inEqSimp_contradInEq0" (formula "404") (term "0") (ifseqformula "348"))
         (rule "inEqSimp_homoInEq1" (formula "404") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "404") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "404") (term "1,0,0,0"))
         (rule "mul_literals" (formula "404") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "404") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "404") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "404") (term "0,0,0"))
         (rule "add_literals" (formula "404") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "404") (term "1,0,0,0"))
         (rule "add_literals" (formula "404") (term "0,0,0"))
         (rule "leq_literals" (formula "404") (term "0,0"))
          (builtin "One Step Simplification" (formula "404"))
         (rule "pullOutSelect" (formula "403") (term "0") (inst "selectSK=arr_134"))
         (rule "simplifySelectOfAnonEQ" (formula "403") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "403"))
         (rule "applyEqReverse" (formula "404") (term "0") (ifseqformula "403"))
         (rule "hideAuxiliaryEq" (formula "403"))
         (rule "inEqSimp_exactShadow3" (formula "404") (ifseqformula "405"))
         (rule "mul_literals" (formula "404") (term "0,0"))
         (rule "add_zero_left" (formula "404") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "404"))
         (rule "mul_literals" (formula "404") (term "1"))
         (rule "allLeft" (formula "406") (inst "t=z_110"))
         (rule "replaceKnownSelect_taclet110_229" (formula "406") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet110_230" (formula "406") (term "1,1,0,0,0"))
         (rule "exLeft" (formula "406") (inst "sk=z_131"))
         (rule "andLeft" (formula "406"))
         (rule "andLeft" (formula "406"))
         (rule "applyEq" (formula "406") (term "1,1") (ifseqformula "343"))
         (rule "inEqSimp_contradInEq1" (formula "406") (term "0,0") (ifseqformula "344"))
         (rule "qeq_literals" (formula "406") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "406"))
         (rule "inEqSimp_contradInEq1" (formula "407") (term "0,0") (ifseqformula "344"))
         (rule "qeq_literals" (formula "407") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "407"))
         (rule "inEqSimp_contradInEq1" (formula "408") (term "0,0") (ifseqformula "344"))
         (rule "qeq_literals" (formula "408") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "408"))
         (rule "inEqSimp_contradInEq0" (formula "406") (term "0") (ifseqformula "345"))
         (rule "inEqSimp_homoInEq1" (formula "406") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "406") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "406") (term "1,0,0,0"))
         (rule "mul_literals" (formula "406") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "406") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "406") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "406") (term "0,0,0"))
         (rule "add_literals" (formula "406") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "406") (term "1,0,0,0"))
         (rule "add_literals" (formula "406") (term "0,0,0"))
         (rule "leq_literals" (formula "406") (term "0,0"))
          (builtin "One Step Simplification" (formula "406"))
         (rule "inEqSimp_contradInEq0" (formula "408") (term "0") (ifseqformula "345"))
         (rule "inEqSimp_homoInEq1" (formula "408") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "408") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "408") (term "1,0,0,0"))
         (rule "mul_literals" (formula "408") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "408") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "408") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "408") (term "0,0,0"))
         (rule "add_literals" (formula "408") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "408") (term "1,0,0,0"))
         (rule "add_literals" (formula "408") (term "0,0,0"))
         (rule "leq_literals" (formula "408") (term "0,0"))
          (builtin "One Step Simplification" (formula "408"))
         (rule "inEqSimp_contradInEq0" (formula "407") (term "0") (ifseqformula "345"))
         (rule "inEqSimp_homoInEq1" (formula "407") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "407") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "407") (term "1,0,0,0"))
         (rule "mul_literals" (formula "407") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "407") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "407") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "407") (term "0,0,0"))
         (rule "add_literals" (formula "407") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "407") (term "1,0,0,0"))
         (rule "add_literals" (formula "407") (term "0,0,0"))
         (rule "leq_literals" (formula "407") (term "0,0"))
          (builtin "One Step Simplification" (formula "407"))
         (rule "pullOutSelect" (formula "406") (term "0") (inst "selectSK=arr_135"))
         (rule "simplifySelectOfAnonEQ" (formula "406") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "406"))
         (rule "applyEqReverse" (formula "407") (term "0") (ifseqformula "406"))
         (rule "hideAuxiliaryEq" (formula "406"))
         (rule "inEqSimp_exactShadow3" (formula "407") (ifseqformula "408"))
         (rule "mul_literals" (formula "407") (term "0,0"))
         (rule "add_zero_left" (formula "407") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "407"))
         (rule "mul_literals" (formula "407") (term "1"))
          (opengoal " geq(length(data1_oldVal), Z(1(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(res_length, Z(1(#))),    int[]::select(heap, self, IntList::$data)  = data1_oldVal,  int[]::exactInstance(data1_oldVal) = TRUE,    boolean::select(heap,                    data1_oldVal,                    java.lang.Object::<created>)  = TRUE,    boolean::select(heap,                    self,                    java.lang.Object::<created>)  = TRUE,  IntList::exactInstance(self) = TRUE,  java.lang.Object::<inv>(heap, self),  wellFormed(heap),  wellFormed(anon_heap_original_push<<anonHeapFunction>>),  (  anon(heap,          allFields(data1_oldVal),          anon_heap_original_push<<anonHeapFunction>>)   = heapAfter_original_push)<<origin(\"assignable @ file IntList.java @ line 13\",\"[]\")>>,  (exc = null)<<origin(\"<none> (implicit)\",\"[ensures @ file IntList.java @ line 12, ensures (implicit)]\")>>,  geq(z_0, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_0, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_0))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_1))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_1, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_1, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_2))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_2, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_2, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_3))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_3, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_3, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_4))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_4, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_4, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_5))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_5, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_5, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  geq(length(data1_oldVal), add(Z(1(#)), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | (  int::select(anon_heap_original_push<<anonHeapFunction>>,                    data1_oldVal,                    arr(add(Z(neglit(1(#))),                            length(data1_oldVal))))      = int::select(anon_heap_original_push<<anonHeapFunction>>,                    data1_oldVal,                    arr(z_6)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  geq(z_6, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | geq(length(data1_oldVal), add(Z(1(#)), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  leq(z_6, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>   | geq(length(data1_oldVal), add(Z(1(#)), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_7))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_7, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_7, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_8))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_8, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_8, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_9))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_9, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_9, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_10))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_10, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_10, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_11))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_11, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_11, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_12))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_12, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_12, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_13))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_13, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_13, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_14))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_14, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_14, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_15))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_15, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_15, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_16))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_16, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_16, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_17))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_17, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_17, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_18))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_18, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_18, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_19))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_19, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_19, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_20))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_20, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_20, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_21))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_21, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_21, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_22))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_22, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_22, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_23))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_23, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_23, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_24))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_24, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_24, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_25))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_25, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_25, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_26))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_26, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_26, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_27))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_27, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_27, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_28))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_28, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_28, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_29))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_29, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_29, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_30))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_30, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_30, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_31))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_31, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_31, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_32))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_32, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_32, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_33))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_33, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_33, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_34))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_34, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_34, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_35))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_35, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_35, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_36))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_36, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_36, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_37))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_37, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_37, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_38))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_38, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_38, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_39))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_39, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_39, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_40))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_40, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_40, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_41))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_41, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_41, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_42))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_42, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_42, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_43))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_43, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_43, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_44))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_44, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_44, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_45))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_45, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_45, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_46))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_46, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_46, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_47))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_47, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_47, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_48))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_48, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_48, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_49))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_49, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_49, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_50))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_50, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_50, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_51))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_51, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_51, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_52))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_52, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_52, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_53))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_53, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_53, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_54))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_54, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_54, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_55))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_55, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_55, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_56))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_56, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_56, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_57))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_57, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_57, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_58))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_58, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_58, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_59))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_59, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_59, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_60))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_60, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_60, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_61))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_61, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_61, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_62))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_62, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_62, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_63))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_63, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_63, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_64))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_64, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_64, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_65))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_65, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_65, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_66))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_66, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_66, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_67))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_67, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_67, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_68))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_68, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_68, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_69))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_69, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_69, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_70))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_70, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_70, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_71))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_71, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_71, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_72))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_72, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_72, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_73))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_73, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_73, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_74))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_74, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_74, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_75))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_75, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_75, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_76))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_76, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_76, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_77))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_77, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_77, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_78))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_78, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_78, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_79))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_79, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_79, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_80))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_80, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_80, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_81))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_81, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_81, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_82))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_82, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_82, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_83))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_83, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_83, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_84))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_84, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_84, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_85))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_85, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_85, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_86))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_86, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_86, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_87))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_87, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_87, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_88))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_88, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_88, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_89))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_89, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_89, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_90))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_90, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_90, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_91))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_91, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_91, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_92))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_92, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_92, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_93))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_93, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_93, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_94))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_94, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_94, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_95))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_95, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_95, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_96))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_96, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_96, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_97))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_97, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_97, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_98))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_98, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_98, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_99))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_99, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_99, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_100))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_100, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_100, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_101))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_101, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_101, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_102))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_102, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_102, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_103))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_103, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_103, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_104))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_104, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_104, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_105))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_105, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_105, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_106))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_106, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_106, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_107))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_107, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_107, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_108))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_108, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_108, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_109))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_109, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_109, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_110))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_110, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_110, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_111))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_111, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_111, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_112))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_112, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_112, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_113))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_113, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_113, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_114))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_114, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_114, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_115))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_115, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_115, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_116))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_116, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_116, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_117))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_117, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_117, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_118))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_118, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_118, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_119))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_119, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_119, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_120))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_120, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_120, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_121))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_121, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_121, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_122))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_122, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_122, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_123))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_123, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_123, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_124))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_124, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_124, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_125))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_125, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_125, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_126))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_126, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_126, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_127))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_127, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_127, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_128))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_128, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_128, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_129))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_129, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_129, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_130))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_130, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_130, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(z_131))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  geq(z_131, Z(0(#)))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  leq(z_131, add(Z(neglit(1(#))), res_length))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (\\forall int k;     \\exists int z;       (  (  leq(k, Z(neglit(1(#))))           | geq(k, res_length)           |   int::select(heapAfter_original_push,                           data1_oldVal,                           arr(z))             = int::select(heapAfter_original_push,                           data1_oldVal,                           arr(k)))        & (  leq(k, Z(neglit(1(#))))           | geq(k, res_length)           | geq(z, Z(0(#))))        & (  leq(k, Z(neglit(1(#))))           | geq(k, res_length)           | leq(z, add(Z(neglit(1(#))), res_length)))))<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  (  int::select(anon_heap_original_push<<anonHeapFunction>>,                 data1_oldVal,                 arr(add(Z(neglit(1(#))), res_length)))   = newTop)<<origin(\"ensures @ file IntList.java @ line 12\",\"[]\")>>,  java.lang.Object::<inv>(heapAfter_original_push, self) ==>  {callee:=self   || heap:=heapAfter_original_push   || arr_13:=data1_oldVal}    \\<{      method-frame (source=length(int[])@IntList) {        queryResult = callee.length(arr_13);      }    }\\> !res_length = queryResult,  data1_oldVal = null,  self = null,    \\exists int z;      (  geq(z, Z(0(#)))       & leq(z,             add(Z(neglit(1(#))), length(data1_oldVal)))       &   int::select(heapAfter_original_push,                       data1_oldVal,                       arr(z))         = newTop)  & \\forall int k;      \\exists int z;        (  leq(k, Z(neglit(1(#))))         | geq(k, length(data1_oldVal))         | geq(z, Z(0(#)))         & leq(z,               add(Z(neglit(1(#))),                   length(data1_oldVal)))         &   int::select(heapAfter_original_push,                         data1_oldVal,                         arr(z))           = int::select(heapAfter_original_push,                         data1_oldVal,                         arr(k)))  &   int::select(anon_heap_original_push<<anonHeapFunction>>,                  data1_oldVal,                  arr(add(Z(neglit(1(#))),                          length(data1_oldVal))))    = newTop")
      )
   )
)
(branch "Exceptional Post (original_push)"
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")))
    (builtin "One Step Simplification" (formula "13"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "11"))
   (rule "close" (formula "14") (ifseqformula "13"))
)
(branch "Pre (original_push)"
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "5")))
   (rule "closeTrue" (formula "11"))
)
(branch "Null reference (self = null)"
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
   (rule "closeTrue" (formula "11"))
)
)
}
