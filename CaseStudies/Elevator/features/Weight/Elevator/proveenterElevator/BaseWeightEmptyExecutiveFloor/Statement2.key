\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Aug 25 13:42:41 CEST 2022
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/mko/Documents/ISF/0_feat-CorC2.0modifiable/corC/casestudies/Elevator";\include "helper.key";\programVariables {Person p; Person p_old; int weight1_oldVal; Elevator self; Heap heapAtPre;}\problem {
     !  ArrayList::select(heap,
                          self,
                          Elevator::$persons)
      = null
   & !  Person[]::select(heap,
                         ArrayList::select(heap,
                                           self,
                                           Elevator::$persons),
                         ArrayList::$elements)
      = null
   & !  boolean[]::select(heap,
                          self,
                          Elevator::$floorButtons)
      = null
   & !p = null
   & geq(Person::getDestination(heap, p), Z(0(#)))
   & lt(Person::getDestination(heap, p),
        length(boolean[]::select(heap,
                                 self,
                                 Elevator::$floorButtons)))
   & geq(int::select(heap, p, Person::$weight),
         Z(0(#)))
   &   ArrayList::contains(heap,
                           ArrayList::select(heap,
                                             self,
                                             Elevator::$persons),
                           p)
     = TRUE
   &   boolean::select(heap,
                       boolean[]::select(heap,
                                         self,
                                         Elevator::$floorButtons),
                       arr(Person::getDestination(heap,
                                                  p)))
     = TRUE
   &   ArrayList::exactInstance(ArrayList::select(heap,
                                                  self,
                                                  Elevator::$persons))
     = TRUE
   &   boolean::select(heap,
                       ArrayList::select(heap,
                                         self,
                                         Elevator::$persons),
                       java.lang.Object::<created>)
     = TRUE
   & !  ArrayList::select(heap,
                          self,
                          Elevator::$persons)
      = null
   &   Environment::exactInstance(Environment::select(heap,
                                                      self,
                                                      Elevator::$env))
     = TRUE
   &   boolean::select(heap,
                       Environment::select(heap,
                                           self,
                                           Elevator::$env),
                       java.lang.Object::<created>)
     = TRUE
   & !  Environment::select(heap, self, Elevator::$env)
      = null
   &   boolean[]::exactInstance(boolean[]::select(heap,
                                                  self,
                                                  Elevator::$floorButtons))
     = TRUE
   &   boolean::select(heap,
                       boolean[]::select(heap,
                                         self,
                                         Elevator::$floorButtons),
                       java.lang.Object::<created>)
     = TRUE
   & !  boolean[]::select(heap,
                          self,
                          Elevator::$floorButtons)
      = null
   & Person::exactInstance(p) = TRUE
   &   boolean::select(heap,
                       p,
                       java.lang.Object::<created>)
     = TRUE
   & !p = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & Elevator::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap
    || p_old:=p
    || weight1_oldVal:=int::select(heap,
                                   self,
                                   Elevator::$weight)}
     \<{
         self.weight=self.weight+p.getWeight();
       }\> (    int::select(heap,
                            self,
                            Elevator::$weight)
              = add(weight1_oldVal,
                    Person::getWeight(heap, p))
            &   ArrayList::contains(heap,
                                    ArrayList::select(heap,
                                                      self,
                                                      Elevator::$persons),
                                    p)
              = TRUE
            &   boolean::select(heap,
                                boolean[]::select(heap,
                                                  self,
                                                  Elevator::$floorButtons),
                                arr(Person::getDestination(heap,
                                                           p)))
              = TRUE
            & p = p_old)

}

\proof {
(keyLog "0" (keyUser "mko" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "2220")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "eqSymm" (formula "24") (term "1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "2"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "2") (term "0"))
(rule "eval_order_access4" (formula "24") (term "1") (inst "#v1=x") (inst "#v0=e"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "e"))
(rule "assignment" (formula "24") (term "1"))
(builtin "One Step Simplification" (formula "24"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "x"))
(rule "inEqSimp_sepNegMonomial0" (formula "2"))
(rule "polySimp_mulLiterals" (formula "2") (term "0"))
(rule "polySimp_elimOne" (formula "2") (term "0"))
(rule "compound_addition_2" (formula "24") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "x_1"))
(rule "assignment_read_attribute" (formula "24"))
(branch "Normal Execution (self != null)"
   (builtin "One Step Simplification" (formula "24"))
   (rule "variableDeclarationAssign" (formula "24") (term "1"))
   (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_2"))
   (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_getWeight,result,exc,heapAfter_getWeight,anon_heap_getWeight") (contract "Person[Person::getWeight()].JML normal_behavior operation contract.0"))
   (branch "Post (getWeight)"
      (builtin "One Step Simplification" (formula "26"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "eqSymm" (formula "21"))
      (rule "assignment" (formula "29") (term "1"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=Person_weight_0"))
      (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
      (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
      (rule "hideAuxiliaryEq" (formula "21"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "21"))
      (rule "assignmentAdditionInt" (formula "29") (term "1"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "translateJavaAddInt" (formula "29") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "29") (term "0,1,0"))
      (rule "assignment_write_attribute" (formula "29"))
      (branch "Normal Execution (e != null)"
         (builtin "One Step Simplification" (formula "29"))
         (rule "emptyModality" (formula "29") (term "1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "dismissNonSelectedField" (formula "29") (term "1,0,1"))
         (rule "dismissNonSelectedField" (formula "29") (term "1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "29") (term "0,1"))
         (rule "pullOutSelect" (formula "29") (term "0,0,0") (inst "selectSK=Elevator_weight_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "polySimp_homoEq" (formula "29") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
         (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
         (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
         (rule "polySimp_sepPosMonomial" (formula "29") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
         (rule "pullOutSelect" (formula "29") (term "1,0,1,0") (inst "selectSK=Elevator_persons_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "15")))
         (rule "applyEqReverse" (formula "30") (term "1,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "29") (term "0,1") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=Elevator_floorButtons_0"))
         (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "16")))
         (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
         (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "commute_and" (formula "29") (term "0"))
         (rule "commute_and_2" (formula "29"))
         (rule "arrayLengthNotNegative" (formula "2") (term "0"))
         (rule "arrayLengthIsAnInt" (formula "3") (term "0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "18"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "19"))
         (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "27")))
         (rule "true_left" (formula "6"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0,0") (ifseqformula "19"))
         (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "29")))
         (rule "true_left" (formula "4"))
         (rule "cut_direct" (formula "31") (term "1"))
         (branch "CUT: p.getWeight() @heapAfter_getWeight[self.weight := result + self.weight] = result TRUE"
            (builtin "One Step Simplification" (formula "32"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "20"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "29")))
            (rule "true_left" (formula "11"))
            (rule "cut_direct" (formula "32") (term "0"))
            (branch "CUT: (self.persons@heap).contains(p) @heapAfter_getWeight[self.weight := result + self.weight] = TRUE TRUE"
               (builtin "One Step Simplification" (formula "33"))
               (builtin "Evaluate Query" (formula "9") (term "0,2,0") (newnames "callee,queryResult_8,res_getDestination_2"))
               (rule "replaceKnownQuery_Person_getDestination(heap,p)_00000_10" (formula "5") (term "0"))
               (rule "replaceKnownQuery_Person_getDestination(heap,p)_00000_10" (formula "7") (term "1,1"))
               (rule "replaceKnownQuery_Person_getDestination(heap,p)_00000_10" (formula "10") (term "0,2,0"))
               (rule "notLeft" (formula "1"))
               (rule "eqSymm" (formula "27") (term "0,0,1"))
               (rule "variableDeclaration" (formula "27") (term "1") (newnames "queryResult_8"))
               (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_getDestination_2,result_9,exc_9,heapAfter_getDestination_2,anon_heap_getDestination_2") (contract "Person[Person::getDestination()].JML normal_behavior operation contract.0"))
               (branch "Post (getDestination)"
                  (builtin "One Step Simplification" (formula "28"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "eqSymm" (formula "30"))
                  (rule "assignment" (formula "32") (term "1"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=Person_destination_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "38")) (ifInst ""  (formula "17")))
                  (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                  (rule "hideAuxiliaryEq" (formula "30"))
                  (rule "methodCallEmpty" (formula "32") (term "1"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "emptyModality" (formula "32") (term "1"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "notRight" (formula "32"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "31") (term "1") (ifseqformula "1"))
                  (builtin "Evaluate Query" (formula "9") (term "0") (newnames "o_6,callee,queryResult_10,res_contains_6"))
                  (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_000000_13" (formula "10") (term "0"))
                  (rule "notLeft" (formula "1"))
                  (rule "eqSymm" (formula "33") (term "0,0,1"))
                  (rule "variableDeclaration" (formula "33") (term "1") (newnames "queryResult_10"))
                  (rule "applyEqRigid" (formula "33") (term "0,0,0,1") (ifseqformula "9"))
                  (rule "eqSymm" (formula "33") (term "0,0,1"))
                  (builtin "Use Operation Contract" (formula "33") (newnames "heapBefore_contains_6,result_11,exc_11,heapAfter_contains_6,anon_heap_contains_6") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
                  (branch "Post (contains)"
                     (builtin "One Step Simplification" (formula "35"))
                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "36")))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "36"))
                     (rule "notLeft" (formula "36"))
                     (rule "assignment" (formula "37") (term "1"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "apply_eq_boolean" (formula "37") (term "0,1,0") (ifseqformula "36"))
                     (rule "methodCallEmpty" (formula "37") (term "1"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "emptyModality" (formula "37") (term "1"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "closeTrue" (formula "37"))
                  )
                  (branch "Exceptional Post (contains)"
                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "36")))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "andLeft" (formula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0") (ifseqformula "34"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "36"))
                     (rule "andLeft" (formula "35"))
                     (rule "notLeft" (formula "37"))
                     (rule "notLeft" (formula "35"))
                     (rule "close" (formula "37") (ifseqformula "36"))
                  )
                  (branch "Pre (contains)"
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "34")) (ifInst ""  (formula "22")) (ifInst ""  (formula "38")) (ifInst ""  (formula "18")))
                     (rule "closeTrue" (formula "33"))
                  )
                  (branch "Null reference (callee = null)"
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "35")))
                     (rule "closeTrue" (formula "33"))
                  )
               )
               (branch "Exceptional Post (getDestination)"
                  (builtin "One Step Simplification" (formula "28"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "andLeft" (formula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "28"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "31"))
                  (rule "notLeft" (formula "29"))
                  (rule "close" (formula "33") (ifseqformula "32"))
               )
               (branch "Pre (getDestination)"
                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "21")))
                  (builtin "Evaluate Query" (formula "8") (term "0") (newnames "o_5,callee,queryResult_9,res_contains_5"))
                  (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_200000_11" (formula "9") (term "0"))
                  (rule "notLeft" (formula "1"))
                  (rule "eqSymm" (formula "27") (term "0,0,1"))
                  (rule "variableDeclaration" (formula "27") (term "1") (newnames "queryResult_9"))
                  (rule "applyEqRigid" (formula "27") (term "0,0,0,1") (ifseqformula "8"))
                  (rule "eqSymm" (formula "27") (term "0,0,1"))
                  (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_contains_5,result_10,exc_10,heapAfter_contains_5,anon_heap_contains_5") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
                  (branch "Post (contains)"
                     (builtin "One Step Simplification" (formula "29"))
                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "31")))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "assignment" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "apply_eq_boolean" (formula "31") (term "0,1,0") (ifseqformula "30"))
                     (rule "methodCallEmpty" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "emptyModality" (formula "31") (term "1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "closeTrue" (formula "31"))
                  )
                  (branch "Exceptional Post (contains)"
                     (builtin "One Step Simplification" (formula "29"))
                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "31")))
                     (rule "andLeft" (formula "28"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "28"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "31"))
                     (rule "notLeft" (formula "29"))
                     (rule "close" (formula "31") (ifseqformula "30"))
                  )
                  (branch "Pre (contains)"
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "29")) (ifInst ""  (formula "21")) (ifInst ""  (formula "33")) (ifInst ""  (formula "17")))
                     (rule "closeTrue" (formula "27"))
                  )
                  (branch "Null reference (callee = null)"
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")))
                     (rule "closeTrue" (formula "27"))
                  )
               )
               (branch "Null reference (callee = null)"
                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
                  (rule "closeTrue" (formula "27"))
               )
            )
            (branch "CUT: (self.persons@heap).contains(p) @heapAfter_getWeight[self.weight := result + self.weight] = TRUE FALSE"
               (builtin "One Step Simplification" (formula "33"))
               (rule "false_right" (formula "33"))
               (builtin "Evaluate Query" (formula "8") (term "0,2,0") (newnames "callee,queryResult_5,res_getDestination_1"))
               (rule "replaceKnownQuery_Person_getDestination(heap,p)_10000_10" (formula "4") (term "0"))
               (rule "replaceKnownQuery_Person_getDestination(heap,p)_10000_10" (formula "6") (term "1,1"))
               (rule "replaceKnownQuery_Person_getDestination(heap,p)_10000_10" (formula "9") (term "0,2,0"))
               (rule "notLeft" (formula "1"))
               (rule "eqSymm" (formula "26") (term "0,0,1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "queryResult_5"))
               (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_getDestination_1,result_6,exc_6,heapAfter_getDestination_1,anon_heap_getDestination_1") (contract "Person[Person::getDestination()].JML normal_behavior operation contract.0"))
               (branch "Post (getDestination)"
                  (builtin "One Step Simplification" (formula "28"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "eqSymm" (formula "29"))
                  (rule "assignment" (formula "31") (term "1"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=Person_destination_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "37")) (ifInst ""  (formula "16")))
                  (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                  (rule "hideAuxiliaryEq" (formula "29"))
                  (rule "methodCallEmpty" (formula "31") (term "1"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "emptyModality" (formula "31") (term "1"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "notRight" (formula "31"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "30") (term "1") (ifseqformula "1"))
                  (builtin "Evaluate Query" (formula "8") (term "0") (newnames "o_4,callee,queryResult_7,res_contains_4"))
                  (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_010000_13" (formula "9") (term "0"))
                  (rule "notLeft" (formula "1"))
                  (rule "eqSymm" (formula "32") (term "0,0,1"))
                  (rule "variableDeclaration" (formula "32") (term "1") (newnames "queryResult_7"))
                  (rule "applyEqRigid" (formula "32") (term "0,0,0,1") (ifseqformula "8"))
                  (rule "eqSymm" (formula "32") (term "0,0,1"))
                  (builtin "Use Operation Contract" (formula "32") (newnames "heapBefore_contains_4,result_8,exc_8,heapAfter_contains_4,anon_heap_contains_4") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
                  (branch "Post (contains)"
                     (builtin "One Step Simplification" (formula "34"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "35")))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "35"))
                     (rule "notLeft" (formula "35"))
                     (rule "assignment" (formula "36") (term "1"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "apply_eq_boolean" (formula "36") (term "0,1,0") (ifseqformula "35"))
                     (rule "methodCallEmpty" (formula "36") (term "1"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "emptyModality" (formula "36") (term "1"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "closeTrue" (formula "36"))
                  )
                  (branch "Exceptional Post (contains)"
                     (builtin "One Step Simplification" (formula "34"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "35")))
                     (rule "andLeft" (formula "33"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "33"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "34"))
                     (rule "notLeft" (formula "36"))
                     (rule "notLeft" (formula "34"))
                     (rule "close" (formula "36") (ifseqformula "35"))
                  )
                  (branch "Pre (contains)"
                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "37")) (ifInst ""  (formula "37")) (ifInst ""  (formula "33")) (ifInst ""  (formula "21")) (ifInst ""  (formula "37")) (ifInst ""  (formula "17")))
                     (rule "closeTrue" (formula "32"))
                  )
                  (branch "Null reference (callee = null)"
                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "34")))
                     (rule "closeTrue" (formula "32"))
                  )
               )
               (branch "Exceptional Post (getDestination)"
                  (builtin "One Step Simplification" (formula "28"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "29"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "30"))
                  (rule "notLeft" (formula "28"))
                  (rule "close" (formula "32") (ifseqformula "31"))
               )
               (branch "Pre (getDestination)"
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "20")))
                  (builtin "Evaluate Query" (formula "7") (term "0") (newnames "o_3,callee,queryResult_6,res_contains_3"))
                  (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_210000_11" (formula "8") (term "0"))
                  (rule "notLeft" (formula "1"))
                  (rule "eqSymm" (formula "26") (term "0,0,1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "queryResult_6"))
                  (rule "applyEqRigid" (formula "26") (term "0,0,0,1") (ifseqformula "7"))
                  (rule "eqSymm" (formula "26") (term "0,0,1"))
                  (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_contains_3,result_7,exc_7,heapAfter_contains_3,anon_heap_contains_3") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
                  (branch "Post (contains)"
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "34")) (ifInst ""  (formula "34")) (ifInst ""  (formula "30")))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "29"))
                     (rule "notLeft" (formula "29"))
                     (rule "assignment" (formula "30") (term "1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "apply_eq_boolean" (formula "30") (term "0,1,0") (ifseqformula "29"))
                     (rule "methodCallEmpty" (formula "30") (term "1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "emptyModality" (formula "30") (term "1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "closeTrue" (formula "30"))
                  )
                  (branch "Exceptional Post (contains)"
                     (builtin "One Step Simplification" (formula "28"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "34")) (ifInst ""  (formula "34")) (ifInst ""  (formula "30")))
                     (rule "andLeft" (formula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "28"))
                     (rule "notLeft" (formula "30"))
                     (rule "notLeft" (formula "28"))
                     (rule "close" (formula "30") (ifseqformula "29"))
                  )
                  (branch "Pre (contains)"
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")) (ifInst ""  (formula "32")) (ifInst ""  (formula "28")) (ifInst ""  (formula "20")) (ifInst ""  (formula "32")) (ifInst ""  (formula "16")))
                     (rule "closeTrue" (formula "26"))
                  )
                  (branch "Null reference (callee = null)"
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")))
                     (rule "closeTrue" (formula "26"))
                  )
               )
               (branch "Null reference (callee = null)"
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "31")))
                  (rule "closeTrue" (formula "26"))
               )
            )
         )
         (branch "CUT: p.getWeight() @heapAfter_getWeight[self.weight := result + self.weight] = result FALSE"
            (builtin "One Step Simplification" (formula "32"))
            (rule "false_right" (formula "32"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "19"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")))
            (rule "true_left" (formula "10"))
            (builtin "Evaluate Query" (formula "7") (term "0,2,0") (newnames "callee,queryResult_2,res_getDestination_0"))
            (rule "replaceKnownQuery_Person_getDestination(heap,p)_1000_10" (formula "3") (term "0"))
            (rule "replaceKnownQuery_Person_getDestination(heap,p)_1000_10" (formula "5") (term "1,1"))
            (rule "replaceKnownQuery_Person_getDestination(heap,p)_1000_10" (formula "8") (term "0,2,0"))
            (rule "notLeft" (formula "1"))
            (rule "eqSymm" (formula "25") (term "0,0,1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult_2"))
            (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_getDestination_0,result_3,exc_3,heapAfter_getDestination_0,anon_heap_getDestination_0") (contract "Person[Person::getDestination()].JML normal_behavior operation contract.0"))
            (branch "Post (getDestination)"
               (builtin "One Step Simplification" (formula "27"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "eqSymm" (formula "28"))
               (rule "assignment" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=Person_destination_1"))
               (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")) (ifInst ""  (formula "15")))
               (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
               (rule "hideAuxiliaryEq" (formula "28"))
               (rule "methodCallEmpty" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "emptyModality" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "notRight" (formula "30"))
               (rule "eqSymm" (formula "1"))
               (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
               (builtin "Evaluate Query" (formula "7") (term "0") (newnames "o_2,callee,queryResult_4,res_contains_2"))
               (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_01000_13" (formula "8") (term "0"))
               (rule "notLeft" (formula "1"))
               (rule "eqSymm" (formula "31") (term "0,0,1"))
               (rule "variableDeclaration" (formula "31") (term "1") (newnames "queryResult_4"))
               (rule "applyEqRigid" (formula "31") (term "0,0,0,1") (ifseqformula "7"))
               (rule "eqSymm" (formula "31") (term "0,0,1"))
               (builtin "Use Operation Contract" (formula "31") (newnames "heapBefore_contains_2,result_5,exc_5,heapAfter_contains_2,anon_heap_contains_2") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
               (branch "Post (contains)"
                  (builtin "One Step Simplification" (formula "33"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "34")))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "34"))
                  (rule "notLeft" (formula "34"))
                  (rule "assignment" (formula "35") (term "1"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "apply_eq_boolean" (formula "35") (term "0,1,0") (ifseqformula "34"))
                  (rule "methodCallEmpty" (formula "35") (term "1"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "emptyModality" (formula "35") (term "1"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "closeTrue" (formula "35"))
               )
               (branch "Exceptional Post (contains)"
                  (builtin "One Step Simplification" (formula "33"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "34")))
                  (rule "andLeft" (formula "32"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "33"))
                  (rule "notLeft" (formula "35"))
                  (rule "notLeft" (formula "33"))
                  (rule "close" (formula "35") (ifseqformula "34"))
               )
               (branch "Pre (contains)"
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "32")) (ifInst ""  (formula "20")) (ifInst ""  (formula "36")) (ifInst ""  (formula "16")))
                  (rule "closeTrue" (formula "31"))
               )
               (branch "Null reference (callee = null)"
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "33")))
                  (rule "closeTrue" (formula "31"))
               )
            )
            (branch "Exceptional Post (getDestination)"
               (builtin "One Step Simplification" (formula "27"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,0") (ifseqformula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "27"))
               (rule "close" (formula "31") (ifseqformula "30"))
            )
            (branch "Pre (getDestination)"
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "19")))
               (builtin "Evaluate Query" (formula "6") (term "0") (newnames "o_1,callee,queryResult_3,res_contains_1"))
               (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_21000_11" (formula "7") (term "0"))
               (rule "notLeft" (formula "1"))
               (rule "eqSymm" (formula "25") (term "0,0,1"))
               (rule "variableDeclaration" (formula "25") (term "1") (newnames "queryResult_3"))
               (rule "applyEqRigid" (formula "25") (term "0,0,0,1") (ifseqformula "6"))
               (rule "eqSymm" (formula "25") (term "0,0,1"))
               (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_contains_1,result_4,exc_4,heapAfter_contains_1,anon_heap_contains_1") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
               (branch "Post (contains)"
                  (builtin "One Step Simplification" (formula "27"))
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "29")))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "assignment" (formula "29") (term "1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "apply_eq_boolean" (formula "29") (term "0,1,0") (ifseqformula "28"))
                  (rule "methodCallEmpty" (formula "29") (term "1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "emptyModality" (formula "29") (term "1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "closeTrue" (formula "29"))
               )
               (branch "Exceptional Post (contains)"
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "29")))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "andLeft" (formula "26"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,0") (ifseqformula "26"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "29"))
                  (rule "notLeft" (formula "27"))
                  (rule "close" (formula "29") (ifseqformula "28"))
               )
               (branch "Pre (contains)"
                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "27")) (ifInst ""  (formula "19")) (ifInst ""  (formula "31")) (ifInst ""  (formula "15")))
                  (rule "closeTrue" (formula "25"))
               )
               (branch "Null reference (callee = null)"
                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")))
                  (rule "closeTrue" (formula "25"))
               )
            )
            (branch "Null reference (callee = null)"
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
               (rule "closeTrue" (formula "25"))
            )
         )
      )
      (branch "Null Reference (e = null)"
         (rule "false_right" (formula "30"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (getWeight)"
      (builtin "One Step Simplification" (formula "19"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "19"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,0") (ifseqformula "19"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "20"))
      (rule "close" (formula "23") (ifseqformula "22"))
   )
   (branch "Pre (getWeight)"
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "17")))
      (rule "arrayLengthNotNegative" (formula "2") (term "0"))
      (rule "arrayLengthIsAnInt" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0,0") (ifseqformula "18"))
      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "13")))
      (rule "true_left" (formula "3"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0") (ifseqformula "18"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
      (rule "true_left" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "18"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0") (ifseqformula "19"))
      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")))
      (rule "true_left" (formula "11"))
      (builtin "Evaluate Query" (formula "7") (term "0,2,0") (newnames "callee,queryResult,res_getDestination"))
      (rule "replaceKnownQuery_Person_getDestination(heap,p)_20_0" (formula "3") (term "0"))
      (rule "replaceKnownQuery_Person_getDestination(heap,p)_20_0" (formula "5") (term "1,1"))
      (rule "replaceKnownQuery_Person_getDestination(heap,p)_20_0" (formula "8") (term "0,2,0"))
      (rule "notLeft" (formula "1"))
      (rule "eqSymm" (formula "20") (term "0,0,1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "queryResult"))
      (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_getDestination,result_0,exc_0,heapAfter_getDestination,anon_heap_getDestination") (contract "Person[Person::getDestination()].JML normal_behavior operation contract.0"))
      (branch "Post (getDestination)"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "eqSymm" (formula "23"))
         (rule "assignment" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=Person_destination_0"))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")) (ifInst ""  (formula "15")))
         (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "methodCallEmpty" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "emptyModality" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "notRight" (formula "25"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "24") (term "1") (ifseqformula "1"))
         (builtin "Evaluate Query" (formula "7") (term "0") (newnames "o_0,callee,queryResult_1,res_contains_0"))
         (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_020_3" (formula "8") (term "0"))
         (rule "notLeft" (formula "1"))
         (rule "eqSymm" (formula "26") (term "0,0,1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "queryResult_1"))
         (rule "applyEqRigid" (formula "26") (term "0,0,0,1") (ifseqformula "7"))
         (rule "eqSymm" (formula "26") (term "0,0,1"))
         (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_contains_0,result_2,exc_2,heapAfter_contains_0,anon_heap_contains_0") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
         (branch "Post (contains)"
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "29")))
            (builtin "One Step Simplification" (formula "28"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "notLeft" (formula "29"))
            (rule "assignment" (formula "30") (term "1"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "apply_eq_boolean" (formula "30") (term "0,1,0") (ifseqformula "29"))
            (rule "methodCallEmpty" (formula "30") (term "1"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "emptyModality" (formula "30") (term "1"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "closeTrue" (formula "30"))
         )
         (branch "Exceptional Post (contains)"
            (builtin "One Step Simplification" (formula "28"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")) (ifInst ""  (formula "29")))
            (rule "andLeft" (formula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "28"))
            (rule "notLeft" (formula "30"))
            (rule "notLeft" (formula "28"))
            (rule "close" (formula "30") (ifseqformula "29"))
         )
         (branch "Pre (contains)"
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "27")) (ifInst ""  (formula "20")) (ifInst ""  (formula "31")) (ifInst ""  (formula "16")))
            (rule "closeTrue" (formula "26"))
         )
         (branch "Null reference (callee = null)"
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "28")))
            (rule "closeTrue" (formula "26"))
         )
      )
      (branch "Exceptional Post (getDestination)"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "22"))
         (rule "close" (formula "26") (ifseqformula "25"))
      )
      (branch "Pre (getDestination)"
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "27")))
         (rule "false_right" (formula "20"))
         (builtin "Evaluate Query" (formula "6") (term "0") (newnames "o,callee,queryResult_0,res_contains"))
         (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_220_1" (formula "7") (term "0"))
         (rule "notLeft" (formula "1"))
         (rule "eqSymm" (formula "20") (term "0,0,1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "queryResult_0"))
         (rule "applyEqRigid" (formula "20") (term "0,0,0,1") (ifseqformula "6"))
         (rule "eqSymm" (formula "20") (term "0,0,1"))
         (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_contains,result_1,exc_1,heapAfter_contains,anon_heap_contains") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
         (branch "Post (contains)"
            (builtin "One Step Simplification" (formula "22"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "23")))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "23"))
            (rule "assignment" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "apply_eq_boolean" (formula "24") (term "0,1,0") (ifseqformula "23"))
            (rule "methodCallEmpty" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "emptyModality" (formula "24") (term "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "closeTrue" (formula "24"))
         )
         (branch "Exceptional Post (contains)"
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "23")))
            (builtin "One Step Simplification" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "24"))
            (rule "notLeft" (formula "22"))
            (rule "close" (formula "24") (ifseqformula "23"))
         )
         (branch "Pre (contains)"
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "21")) (ifInst ""  (formula "19")) (ifInst ""  (formula "25")) (ifInst ""  (formula "15")))
            (rule "closeTrue" (formula "20"))
         )
         (branch "Null reference (callee = null)"
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "22")))
            (rule "closeTrue" (formula "20"))
         )
      )
      (branch "Null reference (callee = null)"
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "25")))
         (rule "closeTrue" (formula "20"))
      )
   )
   (branch "Null reference (p = null)"
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
      (rule "closeTrue" (formula "24"))
   )
)
(branch "Null Reference (self = null)"
   (builtin "One Step Simplification" (formula "25"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
   (rule "closeFalse" (formula "1"))
)
)

}
