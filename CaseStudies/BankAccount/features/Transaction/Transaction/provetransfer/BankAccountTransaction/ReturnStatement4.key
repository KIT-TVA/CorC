\javaSource "C:/Important/Work/CorC/BankAccount";
\include "helper.key";
\programVariables {
int amount;
boolean ret;
int amount_old;
int balance2_oldVal;
int balance6_oldVal;
Account source5_oldVal;
Account destination4_oldVal;
Transaction self;
Heap heapAtPre;
}\problem {((true) & self.source.<inv> & self.destination.<inv> & Account::exactInstance(self.source) = TRUE & self.source.<created> = TRUE & self.source!= null & Account::exactInstance(self.destination) = TRUE & self.destination.<created> = TRUE & self.destination!= null & Account::exactInstance(self.source) = TRUE & self.source.<created> = TRUE & self.source!= null & Account::exactInstance(self.destination) = TRUE & self.destination.<created> = TRUE & self.destination!= null & self.<created>=TRUE & Transaction::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || amount_old := amount || balance2_oldVal := self.source.balance || balance6_oldVal := self.destination.balance || source5_oldVal := self.source || destination4_oldVal := self.destination} \<{ret = false;}\> ((transferPerformed( ret, self.destination.balance, balance6_oldVal, self.source.balance, balance2_oldVal, amount)) & amount = amount_old)}
