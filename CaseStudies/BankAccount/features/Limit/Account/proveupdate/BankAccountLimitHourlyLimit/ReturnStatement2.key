\javaSource "C:/Important/Work/CorC/BankAccount";
\include "helper.key";
\programVariables {
int newWithdrawDaily;
int newWithdrawHourly;
int x;
boolean ret;
int x_old;
int withdrawHourly4_oldVal;
int balance7_oldVal;
int withdrawDaily8_oldVal;
int HOURLY_LIMIT3_oldVal;
int DAILY_LIMIT2_oldVal;
int OVERDRAFT_LIMIT6_oldVal;
Account self;
Heap heapAtPre;
}\problem {(((newWithdrawDaily<=self.withdrawDaily&newWithdrawHourly <= self.withdrawHourly &balanceChangedResult( ret, self.balance, balance7_oldVal, x)) & (ret = FALSE)) & self.<created>=TRUE & Account::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || x_old := x || HOURLY_LIMIT3_oldVal := self.HOURLY_LIMIT || withdrawDaily8_oldVal := self.withdrawDaily || withdrawHourly4_oldVal := self.withdrawHourly || OVERDRAFT_LIMIT6_oldVal := self.OVERDRAFT_LIMIT || DAILY_LIMIT2_oldVal := self.DAILY_LIMIT} \<{ret = false;}\> ((balanceChangedResult( ret, self.balance, balance7_oldVal, x)  & withdrawChangedResult( ret, self.withdrawDaily, withdrawDaily8_oldVal, self.withdrawHourly, withdrawHourly4_oldVal)) & x = x_old)}