\javaSource "C:/Important/Work/CorC/BankAccount";
\include "helper.key";
\programVariables {
int newWithdrawDaily;
int newWithdrawHourly;
int x;
boolean ret;
int x_old;
int withdrawHourly5_oldVal;
int balance8_oldVal;
int withdrawDaily9_oldVal;
int HOURLY_LIMIT3_oldVal;
int DAILY_LIMIT2_oldVal;
int interest4_oldVal;
int OVERDRAFT_LIMIT7_oldVal;
Account self;
Heap heapAtPre;
}\problem {((self.withdrawDaily>=withdrawDaily9_oldVal & self.withdrawHourly 
>= withdrawHourly5_oldVal & self.balance = balance8_oldVal - x) & self.<created>=TRUE & Account::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || x_old := x || interest4_oldVal := self.interest || HOURLY_LIMIT3_oldVal := self.HOURLY_LIMIT || OVERDRAFT_LIMIT7_oldVal := self.OVERDRAFT_LIMIT || DAILY_LIMIT2_oldVal := self.DAILY_LIMIT} \<{ret =   true; }\> ((balanceChangedResult( ret, self.balance, balance8_oldVal, -x)  & withdrawChangedUndoResult( ret, self.withdrawDaily, withdrawDaily9_oldVal, self.withdrawHourly, withdrawHourly5_oldVal)) & x = x_old)}