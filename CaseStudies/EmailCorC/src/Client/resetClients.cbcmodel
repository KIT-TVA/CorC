<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="resetClients" proven="true" className="Client" methodName="resetClients">
    <statement name="statement">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true">
        <firstStatement name="statement1">
          <refinement name="index = 0;&#xD;&#xA;Client.clientCounter = 1;" proven="true">
            <postCondition name="modifiable(Client.clientCounter,index); index = 0 &amp; Client.clientCounter = 1"/>
            <preCondition name=" Client.clients != null&amp; Client.clientCounter >= 0 &amp; Client.clients != null"/>
          </refinement>
          <postCondition name="modifiable(Client.clientCounter,index);&#xD;&#xA;index = 0 &amp; Client.clientCounter = 1"/>
          <preCondition name=" Client.clients != null&amp; Client.clientCounter >= 0 &amp; Client.clients != null"/>
        </firstStatement>
        <secondStatement name="statement2">
          <refinement xsi:type="cbcmodel:SmallRepetitionStatement" name="repetitionStatement" proven="true" variantProven="true" preProven="true" postProven="true">
            <postCondition name="modifiable(Client.clientCounter,Client.clients[index],index);&#xD;&#xA;(\forall int k;(((k>=0 &amp; k&lt;Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1"/>
            <preCondition name="modifiable(Client.clientCounter,index);&#xD;&#xA;index = 0 &amp; Client.clientCounter = 1"/>
            <loopStatement name="loop">
              <refinement name="Client.clients[index] = null;&#xD;&#xA;index++;" proven="true">
                <postCondition name="(\forall int k;(((k>=0 &amp; k&lt;index &amp; k&lt; Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1&#xD;&#xA;&amp; index >= 0"/>
                <preCondition name="((\forall int k;(((k>=0 &amp; k&lt;index &amp; k&lt; Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1&#xD;&#xA;&amp; index >= 0) &amp; (index &lt; Client.clients.length)"/>
              </refinement>
              <postCondition name="(\forall int k;(((k>=0 &amp; k&lt;index &amp; k&lt; Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1&#xD;&#xA;&amp; index >= 0"/>
              <preCondition name="((\forall int k;(((k>=0 &amp; k&lt;index &amp; k&lt; Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1&#xD;&#xA;&amp; index >= 0) &amp; (index &lt; Client.clients.length)"/>
            </loopStatement>
            <variant name="Client.clients.length-index"/>
            <invariant name="(\forall int k;(((k>=0 &amp; k&lt;index &amp; k&lt; Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1&#xD;&#xA;&amp; index >= 0"/>
            <guard name="index &lt; Client.clients.length"/>
          </refinement>
          <postCondition name="modifiable(Client.clientCounter,Client.clients[index],index);&#xD;&#xA;(\forall int k;(((k>=0 &amp; k&lt;Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1"/>
          <preCondition name="modifiable(Client.clientCounter,index);&#xD;&#xA;index = 0 &amp; Client.clientCounter = 1"/>
        </secondStatement>
        <intermediateCondition name="modifiable(Client.clientCounter,index);&#xD;&#xA;index = 0 &amp; Client.clientCounter = 1"/>
      </refinement>
      <postCondition name="modifiable(Client.clientCounter,Client.clients[index],index);&#xD;&#xA;(\forall int k;(((k>=0 &amp; k&lt;Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1"/>
      <preCondition name=" Client.clients != null&amp; Client.clientCounter >= 0 &amp; Client.clients != null"/>
    </statement>
    <preCondition name=" Client.clients != null&amp; Client.clientCounter >= 0 &amp; Client.clients != null"/>
    <postCondition name=" (\forall int k;(((k>=0 &amp; k&lt;Client.clients.length) -> Client.clients[k] = null))) &amp; Client.clientCounter = 1"/>
    <methodObj href="Client.cbcclass#//@methods.7"/>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="int index"/>
    <fields href="Client.cbcclass#//@fields.0"/>
    <fields href="Client.cbcclass#//@fields.1"/>
    <fields href="Client.cbcclass#//@fields.2"/>
    <fields href="Client.cbcclass#//@fields.3"/>
    <fields href="Client.cbcclass#//@fields.4"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions/>
</xmi:XMI>
