\javaSource "C:/Users/Markus/Documents/Studium/HIWI/work/CorC/CaseStudies/IntegerList";
\include "helper.key";
\programVariables {
int i;
int[] tmp;
int variant;
int newTop;
int[] data1_oldVal;
IntList self;
Heap heapAtPre;
}\problem {(length(tmp) = length(self.data) + 1
& tmp[length(tmp)-1] = newTop
& (\forall int j; (0 <= j & j < i -> self.data[j] = tmp[j])) & i < length(self.data) & self.data != null & length(self.data) >= 0 & i >= 0 & data1_oldVal = self.data & tmp != null & tmp.<created> = TRUE & int[]::exactInstance(self.data) = TRUE & self.data.<created> = TRUE & self.data!= null & self.<created>=TRUE & IntList::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || variant := self.data.length - i} \<{tmp[i] = self.data[i];
		i++;
}\> ((length(self.data) - i) <variant & length(self.data) - i>=0)}