\javaSource "C:/Users/tobia/workspaceCorCGitRuntime/ElevatorCorC";\include "helper.key";\programVariables {Person p; boolean tmpResult; int index; boolean result; int weight_oldVal; Elevator self; Heap heapAtPre;}\problem {((index >= 0 
& result = TRUE 
& self.old_contains = TRUE 
& p.isDestinationReached() = TRUE 
& self.persons.contains(p) = FALSE 
& self.weight = weight_oldVal - p.getWeight()
& (\forall int k;((k>=0 & k<index & self.floorButtons != null) -> self.floorButtons[k] = FALSE ))) & (index < self.floorButtons.length)  & self.persons.elements != null & p.weight >= 0 & self.weight >= 0 & boolean[]::exactInstance(self.floorButtons) = TRUE & self.floorButtons.<created> = TRUE & self.floorButtons != null & Environment::exactInstance(self.env) = TRUE & self.env.<created> = TRUE & self.env != null & ArrayList::exactInstance(self.persons) = TRUE & self.persons.<created> = TRUE & self.persons != null & Person::exactInstance(p) = TRUE & p.<created> = TRUE & p != null & self.<created>=TRUE & Elevator::exactInstance(self)=TRUE &  !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap} \<{self.floorButtons[index] = false;
index++;}\> (index >= 0 
& result = TRUE 
& self.old_contains = TRUE 
& p.isDestinationReached() = TRUE 
& self.persons.contains(p) = FALSE 
& self.weight = weight_oldVal - p.getWeight()
& (\forall int k;((k>=0 & k<index & self.floorButtons != null) -> self.floorButtons[k] = FALSE )))}