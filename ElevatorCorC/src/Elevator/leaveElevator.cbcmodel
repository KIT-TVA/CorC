<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="leaveElevator" proven="true" className="Elevator" methodName="leaveElevator">
    <statement name="statement" proven="true">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true">
        <firstStatement name="statement1">
          <refinement name="this.old_contains = this.persons.contains(p);&#xD;&#xA;result = false;" proven="true">
            <postCondition name="modifiable(result,this.old_contains);&#xD;&#xA;this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE"/>
            <preCondition name="p != null &amp; this.persons != null &amp; this.persons.elements != null&amp; this.floorButtons != null&amp; p.getWeight() >= 0"/>
          </refinement>
          <postCondition name="modifiable(result,this.old_contains);&#xD;&#xA;this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE"/>
          <preCondition name="p != null &amp; this.persons != null &amp; this.persons.elements != null&amp; this.floorButtons != null&amp; p.getWeight() >= 0"/>
        </firstStatement>
        <secondStatement name="statement2">
          <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true">
            <firstStatement name="statement1">
              <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" preProve="true">
                <guards name="this.old_contains = TRUE"/>
                <guards name="this.old_contains = FALSE"/>
                <commands name="statement1">
                  <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true">
                    <firstStatement name="statement1">
                      <refinement name="this.leaveElevator__wrappee__Weight(p);&#xD;&#xA;index = 0;&#xD;&#xA;result = true;" proven="true">
                        <postCondition name="modifiable(index,result,this.old_contains);&#xD;&#xA;(result = TRUE &amp; p.isDestinationReached() = TRUE&#xD;&#xA;&#x9;&amp; this.persons.contains(p) = FALSE&#xD;&#xA;&#x9;&amp; this.weight = \old(this.weight) - p.getWeight()) &#xD;&#xA;&amp; index = 0&#xD;&#xA;&amp; this.old_contains = TRUE"/>
                        <preCondition name="modifiable(result,this.old_contains);(this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE) &amp; (this.old_contains = TRUE)"/>
                      </refinement>
                      <postCondition name="modifiable(index,result,this.old_contains);&#xD;&#xA;(result = TRUE &amp; p.isDestinationReached() = TRUE&#xD;&#xA;&#x9;&amp; this.persons.contains(p) = FALSE&#xD;&#xA;&#x9;&amp; this.weight = \old(this.weight) - p.getWeight()) &#xD;&#xA;&amp; index = 0&#xD;&#xA;&amp; this.old_contains = TRUE"/>
                      <preCondition name="modifiable(result,this.old_contains);(this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE) &amp; (this.old_contains = TRUE)"/>
                    </firstStatement>
                    <secondStatement name="statement2">
                      <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" preProve="true">
                        <guards name="this.persons.isEmpty() = TRUE"/>
                        <guards name="this.persons.isEmpty() != TRUE"/>
                        <commands name="statement1">
                          <refinement xsi:type="cbcmodel:SmallRepetitionStatement" name="repetitionStatement" proven="true" variantProven="true" preProven="true" postProven="true">
                            <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                            <preCondition name="modifiable(index,result,this.old_contains);((result = TRUE &amp; p.isDestinationReached() = TRUE&#xD;&#xA;&#x9;&amp; this.persons.contains(p) = FALSE&#xD;&#xA;&#x9;&amp; this.weight = \old(this.weight) - p.getWeight()) &#xD;&#xA;&amp; index = 0&#xD;&#xA;&amp; this.old_contains = TRUE) &amp; (this.persons.isEmpty() = TRUE)"/>
                            <loopStatement name="loop">
                              <refinement name="this.floorButtons[index] = false;&#xD;&#xA;index++;" proven="true">
                                <postCondition name="index >= 0 &#xD;&#xA;&amp; result = TRUE &#xD;&#xA;&amp; this.old_contains = TRUE &#xD;&#xA;&amp; p.isDestinationReached() = TRUE &#xD;&#xA;&amp; this.persons.contains(p) = FALSE &#xD;&#xA;&amp; this.weight = \old(this.weight) - p.getWeight()&#xD;&#xA;&amp; (\forall int k;((k>=0 &amp; k&lt;index &amp; this.floorButtons != null) -> this.floorButtons[k] = FALSE ))"/>
                                <preCondition name="(index >= 0 &#xD;&#xA;&amp; result = TRUE &#xD;&#xA;&amp; this.old_contains = TRUE &#xD;&#xA;&amp; p.isDestinationReached() = TRUE &#xD;&#xA;&amp; this.persons.contains(p) = FALSE &#xD;&#xA;&amp; this.weight = \old(this.weight) - p.getWeight()&#xD;&#xA;&amp; (\forall int k;((k>=0 &amp; k&lt;index &amp; this.floorButtons != null) -> this.floorButtons[k] = FALSE ))) &amp; (index &lt; this.floorButtons.length)"/>
                              </refinement>
                              <postCondition name="index >= 0 &#xD;&#xA;&amp; result = TRUE &#xD;&#xA;&amp; this.old_contains = TRUE &#xD;&#xA;&amp; p.isDestinationReached() = TRUE &#xD;&#xA;&amp; this.persons.contains(p) = FALSE &#xD;&#xA;&amp; this.weight = \old(this.weight) - p.getWeight()&#xD;&#xA;&amp; (\forall int k;((k>=0 &amp; k&lt;index &amp; this.floorButtons != null) -> this.floorButtons[k] = FALSE ))"/>
                              <preCondition name="(index >= 0 &#xD;&#xA;&amp; result = TRUE &#xD;&#xA;&amp; this.old_contains = TRUE &#xD;&#xA;&amp; p.isDestinationReached() = TRUE &#xD;&#xA;&amp; this.persons.contains(p) = FALSE &#xD;&#xA;&amp; this.weight = \old(this.weight) - p.getWeight()&#xD;&#xA;&amp; (\forall int k;((k>=0 &amp; k&lt;index &amp; this.floorButtons != null) -> this.floorButtons[k] = FALSE ))) &amp; (index &lt; this.floorButtons.length)"/>
                            </loopStatement>
                            <variant name="this.floorButtons.length - index"/>
                            <invariant name="index >= 0 &#xD;&#xA;&amp; result = TRUE &#xD;&#xA;&amp; this.old_contains = TRUE &#xD;&#xA;&amp; p.isDestinationReached() = TRUE &#xD;&#xA;&amp; this.persons.contains(p) = FALSE &#xD;&#xA;&amp; this.weight = \old(this.weight) - p.getWeight()&#xD;&#xA;&amp; (\forall int k;((k>=0 &amp; k&lt;index &amp; this.floorButtons != null) -> this.floorButtons[k] = FALSE ))"/>
                            <guard name="index &lt; this.floorButtons.length"/>
                          </refinement>
                          <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                          <preCondition name="modifiable(index,result,this.old_contains);((result = TRUE &amp; p.isDestinationReached() = TRUE&#xD;&#xA;&#x9;&amp; this.persons.contains(p) = FALSE&#xD;&#xA;&#x9;&amp; this.weight = \old(this.weight) - p.getWeight()) &#xD;&#xA;&amp; index = 0&#xD;&#xA;&amp; this.old_contains = TRUE) &amp; (this.persons.isEmpty() = TRUE)"/>
                        </commands>
                        <commands name="statement">
                          <refinement xsi:type="cbcmodel:SkipStatement" name=";" proven="true">
                            <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                            <preCondition name="modifiable(index,result,this.old_contains);((result = TRUE &amp; p.isDestinationReached() = TRUE&#xD;&#xA;&#x9;&amp; this.persons.contains(p) = FALSE&#xD;&#xA;&#x9;&amp; this.weight = \old(this.weight) - p.getWeight()) &#xD;&#xA;&amp; index = 0&#xD;&#xA;&amp; this.old_contains = TRUE) &amp; (this.persons.isEmpty() != TRUE)"/>
                          </refinement>
                          <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                          <preCondition name="modifiable(index,result,this.old_contains);((result = TRUE &amp; p.isDestinationReached() = TRUE&#xD;&#xA;&#x9;&amp; this.persons.contains(p) = FALSE&#xD;&#xA;&#x9;&amp; this.weight = \old(this.weight) - p.getWeight()) &#xD;&#xA;&amp; index = 0&#xD;&#xA;&amp; this.old_contains = TRUE) &amp; (this.persons.isEmpty() != TRUE)"/>
                        </commands>
                      </refinement>
                      <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                      <preCondition name="modifiable(index,result,this.old_contains);&#xD;&#xA;(result = TRUE &amp; p.isDestinationReached() = TRUE&#xD;&#xA;&#x9;&amp; this.persons.contains(p) = FALSE&#xD;&#xA;&#x9;&amp; this.weight = \old(this.weight) - p.getWeight()) &#xD;&#xA;&amp; index = 0&#xD;&#xA;&amp; this.old_contains = TRUE"/>
                    </secondStatement>
                    <intermediateCondition name="modifiable(index,result,this.old_contains);&#xD;&#xA;(result = TRUE &amp; p.isDestinationReached() = TRUE&#xD;&#xA;&#x9;&amp; this.persons.contains(p) = FALSE&#xD;&#xA;&#x9;&amp; this.weight = \old(this.weight) - p.getWeight()) &#xD;&#xA;&amp; index = 0&#xD;&#xA;&amp; this.old_contains = TRUE"/>
                  </refinement>
                  <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                  <preCondition name="modifiable(result,this.old_contains);(this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE) &amp; (this.old_contains = TRUE)"/>
                </commands>
                <commands name="statement">
                  <refinement xsi:type="cbcmodel:SkipStatement" name=";" proven="true">
                    <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                    <preCondition name="modifiable(result,this.old_contains);(this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE) &amp; (this.old_contains = FALSE)"/>
                  </refinement>
                  <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                  <preCondition name="modifiable(result,this.old_contains);(this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE) &amp; (this.old_contains = FALSE)"/>
                </commands>
              </refinement>
              <postCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
              <preCondition name="modifiable(result,this.old_contains);&#xD;&#xA;this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE"/>
            </firstStatement>
            <secondStatement name="statement2">
              <refinement xsi:type="cbcmodel:ReturnStatement" name="result;" proven="true">
                <postCondition name="modifiable(index,result,this.floorButtons[*],this.floorButtons[index],this.old_contains);(this.old_contains = TRUE ->(\result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> \result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
                <preCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
              </refinement>
              <postCondition name="modifiable(index,result,this.floorButtons[*],this.floorButtons[index],this.old_contains);(this.old_contains = TRUE ->(\result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> \result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
              <preCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
            </secondStatement>
            <intermediateCondition name="modifiable(index,result,this.floorButtons[index],this.old_contains,this.floorButtons[*]);(this.old_contains = TRUE ->(result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
          </refinement>
          <postCondition name="modifiable(index,result,this.floorButtons[*],this.floorButtons[index],this.old_contains);(this.old_contains = TRUE ->(\result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> \result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
          <preCondition name="modifiable(result,this.old_contains);&#xD;&#xA;this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE"/>
        </secondStatement>
        <intermediateCondition name="modifiable(result,this.old_contains);&#xD;&#xA;this.old_contains = this.persons.contains(p) &#xD;&#xA;&amp; result = FALSE"/>
      </refinement>
      <postCondition name="modifiable(index,result,this.floorButtons[*],this.floorButtons[index],this.old_contains);(this.old_contains = TRUE ->(\result = TRUE &amp; p.isDestinationReached() = TRUE&amp; this.persons.contains(p) = FALSE&amp; this.weight = \old(this.weight) - p.getWeight()))&amp; (this.old_contains = FALSE -> \result = FALSE)&amp; ((this.old_contains = TRUE &amp; this.persons.isEmpty() = TRUE) -> (\forall int k;((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = FALSE)))"/>
      <preCondition name="p != null &amp; this.persons != null &amp; this.persons.elements != null&amp; this.floorButtons != null&amp; p.getWeight() >= 0"/>
    </statement>
    <preCondition name=" p != null &amp; this.persons != null &amp; this.persons.elements != null&amp; this.floorButtons != null&amp; p.getWeight() >= 0 &amp; p.weight >= 0 &amp; this.weight >= 0"/>
    <postCondition name=" (this.old_contains = true ->&#x9;(result = true &amp; p.isDestinationReached() = true&#x9;&amp; this.persons.contains(p) = false&#x9;&amp; this.weight = old_this.weight - p.getWeight()))&amp; this.old_contains = false -> result = false&amp; (this.old_contains = true &amp; this.persons.isEmpty() = true) -> (\forall int k;(((k>=0 &amp; k&lt;this.floorButtons.length) -> this.floorButtons[k] = false)))"/>
    <methodObj href="Elevator.cbcclass#//@methods.22"/>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="Person p" kind="PARAM"/>
    <variables name="boolean result" kind="RETURN"/>
    <variables name="boolean tmpResult"/>
    <variables name="int index"/>
    <variables name="boolean result"/>
    <fields href="Elevator.cbcclass#//@fields.0"/>
    <fields href="Elevator.cbcclass#//@fields.1"/>
    <fields href="Elevator.cbcclass#//@fields.2"/>
    <fields href="Elevator.cbcclass#//@fields.3"/>
    <fields href="Elevator.cbcclass#//@fields.4"/>
    <fields href="Elevator.cbcclass#//@fields.5"/>
    <fields href="Elevator.cbcclass#//@fields.6"/>
    <fields href="Elevator.cbcclass#//@fields.7"/>
    <fields href="Elevator.cbcclass#//@fields.8"/>
    <fields href="Elevator.cbcclass#//@fields.9"/>
    <fields href="Elevator.cbcclass#//@fields.10"/>
    <fields href="Elevator.cbcclass#//@fields.11"/>
    <fields href="Elevator.cbcclass#//@fields.12"/>
    <fields href="Elevator.cbcclass#//@fields.13"/>
    <fields href="Elevator.cbcclass#//@fields.14"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions>
    <conditions name="Person p non-null"/>
    <conditions name="this.persons.elements != null"/>
    <conditions name="p.weight >= 0"/>
    <conditions name="this.weight >= 0"/>
  </cbcmodel:GlobalConditions>
</xmi:XMI>
