<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="continueInDirection__wrappee__Base" className="Elevator" methodName="continueInDirection__wrappee__Base">
    <statement name="statement">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement">
        <firstStatement name="statement1">
          <refinement name="this.old_currentFloorID = this.currentFloorID;">
            <postCondition name="intermediateCond"/>
            <preCondition name=" dir >= 0 &amp; dir &lt;= 1 &amp; this.currentHeading >= 0 &amp; this.currentFloorID >= 0&amp; this.env != null &amp; this.env.floors != null &amp; this.env != null &amp; this.env.floors != null"/>
          </refinement>
          <postCondition name="intermediateCond"/>
          <preCondition name=" dir >= 0 &amp; dir &lt;= 1 &amp; this.currentHeading >= 0 &amp; this.currentFloorID >= 0&amp; this.env != null &amp; this.env.floors != null &amp; this.env != null &amp; this.env.floors != null"/>
        </firstStatement>
        <secondStatement name="statement2">
          <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement">
            <firstStatement name="statement1">
              <refinement name="this.currentHeading = dir;">
                <postCondition name="intermediateCond"/>
                <preCondition name="intermediateCond"/>
              </refinement>
              <postCondition name="intermediateCond"/>
              <preCondition name="intermediateCond"/>
            </firstStatement>
            <secondStatement name="statement2">
              <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement">
                <firstStatement name="statement1">
                  <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement">
                    <guards name="this.currentHeading == 1"/>
                    <guards name="this.currentHeading != 1"/>
                    <commands name="statement1">
                      <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement">
                        <guards name="this.env.isTopFloor(this.currentFloorID) == true"/>
                        <guards name="this.env.isTopFloor(this.currentFloorID) != true"/>
                        <commands name="statement1">
                          <refinement name="this.currentHeading = this.reverse();">
                            <postCondition name="intermediateCond"/>
                            <preCondition name="modifiable(\everything);((intermediateCond) &amp; (this.currentHeading == 1)) &amp; (this.env.isTopFloor(this.currentFloorID) == true)"/>
                          </refinement>
                          <postCondition name="intermediateCond"/>
                          <preCondition name="modifiable(\everything);((intermediateCond) &amp; (this.currentHeading == 1)) &amp; (this.env.isTopFloor(this.currentFloorID) == true)"/>
                        </commands>
                        <commands name="statement">
                          <refinement xsi:type="cbcmodel:SkipStatement" name=";">
                            <postCondition name="intermediateCond"/>
                            <preCondition name="modifiable(\everything);((intermediateCond) &amp; (this.currentHeading == 1)) &amp; (this.env.isTopFloor(this.currentFloorID) != true)"/>
                          </refinement>
                          <postCondition name="intermediateCond"/>
                          <preCondition name="modifiable(\everything);((intermediateCond) &amp; (this.currentHeading == 1)) &amp; (this.env.isTopFloor(this.currentFloorID) != true)"/>
                        </commands>
                      </refinement>
                      <postCondition name="intermediateCond"/>
                      <preCondition name="modifiable(\nothing);(intermediateCond) &amp; (this.currentHeading == 1)"/>
                    </commands>
                    <commands name="statement">
                      <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement">
                        <guards name="this.currentFloorID == 0"/>
                        <guards name="this.currentFloorID != 0"/>
                        <commands name="statement1">
                          <refinement name="this.currentHeading = this.reverse();">
                            <postCondition name="intermediateCond"/>
                            <preCondition name="modifiable(\everything);((intermediateCond) &amp; (this.currentHeading != 1)) &amp; (this.currentFloorID == 0)"/>
                          </refinement>
                          <postCondition name="intermediateCond"/>
                          <preCondition name="modifiable(\everything);((intermediateCond) &amp; (this.currentHeading != 1)) &amp; (this.currentFloorID == 0)"/>
                        </commands>
                        <commands name="statement">
                          <refinement xsi:type="cbcmodel:SkipStatement" name=";">
                            <postCondition name="intermediateCond"/>
                            <preCondition name="modifiable(\everything);((intermediateCond) &amp; (this.currentHeading != 1)) &amp; (this.currentFloorID != 0)"/>
                          </refinement>
                          <postCondition name="intermediateCond"/>
                          <preCondition name="modifiable(\everything);((intermediateCond) &amp; (this.currentHeading != 1)) &amp; (this.currentFloorID != 0)"/>
                        </commands>
                      </refinement>
                      <postCondition name="intermediateCond"/>
                      <preCondition name="modifiable(\nothing);(intermediateCond) &amp; (this.currentHeading != 1)"/>
                    </commands>
                  </refinement>
                  <postCondition name="intermediateCond"/>
                  <preCondition name="intermediateCond"/>
                </firstStatement>
                <secondStatement name="statement2">
                  <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement">
                    <guards name="this.currentHeading == 1"/>
                    <guards name="this.currentHeading != 1"/>
                    <commands name="statement1">
                      <refinement name="this.currentFloorID = this.currentFloorID + 1;">
                        <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
                        <preCondition name="modifiable(\nothing);(intermediateCond) &amp; (this.currentHeading == 1)"/>
                      </refinement>
                      <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
                      <preCondition name="modifiable(\nothing);(intermediateCond) &amp; (this.currentHeading == 1)"/>
                    </commands>
                    <commands name="statement">
                      <refinement name="this.currentFloorID = this.currentFloorID - 1;">
                        <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
                        <preCondition name="modifiable(\nothing);(intermediateCond) &amp; (this.currentHeading != 1)"/>
                      </refinement>
                      <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
                      <preCondition name="modifiable(\nothing);(intermediateCond) &amp; (this.currentHeading != 1)"/>
                    </commands>
                  </refinement>
                  <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
                  <preCondition name="intermediateCond"/>
                </secondStatement>
                <intermediateCondition name="intermediateCond"/>
              </refinement>
              <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
              <preCondition name="intermediateCond"/>
            </secondStatement>
            <intermediateCondition name="intermediateCond"/>
          </refinement>
          <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
          <preCondition name="intermediateCond"/>
        </secondStatement>
        <intermediateCondition name="intermediateCond"/>
      </refinement>
      <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
      <preCondition name=" dir >= 0 &amp; dir &lt;= 1 &amp; this.currentHeading >= 0 &amp; this.currentFloorID >= 0&amp; this.env != null &amp; this.env.floors != null &amp; this.env != null &amp; this.env.floors != null"/>
    </statement>
    <preCondition name=" dir >= 0 &amp; dir &lt;= 1 &amp; this.currentHeading >= 0 &amp; this.currentFloorID >= 0&amp; this.env != null &amp; this.env.floors != null &amp; this.env != null &amp; this.env.floors != null"/>
    <postCondition name=" ((this.currentHeading = 1 &amp; this.env.isTopFloor(this.currentFloorID) = true) -> this.currentHeading = this.reverse()) &amp; ((this.currentHeading = 0 &amp; this.currentFloorID = 0) -> this.currentHeading = this.reverse())&amp; ((this.currentHeading = 1 ) -> this.currentFloorID = this.currentFloorID + 1)&amp; ((this.currentHeading != 1 ) -> this.currentFloorID = this.currentFloorID - 1)"/>
    <methodObj href="Elevator.cbcclass#//@methods.2"/>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="int dir" kind="PARAM"/>
    <fields href="Elevator.cbcclass#//@fields.0"/>
    <fields href="Elevator.cbcclass#//@fields.1"/>
    <fields href="Elevator.cbcclass#//@fields.2"/>
    <fields href="Elevator.cbcclass#//@fields.3"/>
    <fields href="Elevator.cbcclass#//@fields.4"/>
    <fields href="Elevator.cbcclass#//@fields.5"/>
    <fields href="Elevator.cbcclass#//@fields.6"/>
    <fields href="Elevator.cbcclass#//@fields.7"/>
    <fields href="Elevator.cbcclass#//@fields.8"/>
    <fields href="Elevator.cbcclass#//@fields.9"/>
    <fields href="Elevator.cbcclass#//@fields.10"/>
    <fields href="Elevator.cbcclass#//@fields.11"/>
    <fields href="Elevator.cbcclass#//@fields.12"/>
    <fields href="Elevator.cbcclass#//@fields.13"/>
    <fields href="Elevator.cbcclass#//@fields.14"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions/>
</xmi:XMI>
