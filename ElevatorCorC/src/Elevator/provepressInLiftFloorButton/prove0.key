\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Sep 13 17:37:17 CEST 2021
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/tobia/workspaceCorCGitRuntime/ElevatorCorC";\include "helper.key";\programVariables {int floorID; Elevator self; Heap heapAtPre;}\problem {
     !  boolean[]::select(heap,
                          self,
                          Elevator::$floorButtons)
      = null
   & geq(floorID, Z(0(#)))
   & lt(floorID,
        length(boolean[]::select(heap,
                                 self,
                                 Elevator::$floorButtons)))
   & !  boolean::select(heap,
                        boolean[]::select(heap,
                                          self,
                                          Elevator::$floorButtons),
                        arr(floorID))
      = null
   &   boolean[]::exactInstance(boolean[]::select(heap,
                                                  self,
                                                  Elevator::$floorButtons))
     = TRUE
   &   boolean::select(heap,
                       boolean[]::select(heap,
                                         self,
                                         Elevator::$floorButtons),
                       java.lang.Object::<created>)
     = TRUE
   & !  boolean[]::select(heap,
                          self,
                          Elevator::$floorButtons)
      = null
   &   Environment::exactInstance(Environment::select(heap,
                                                      self,
                                                      Elevator::$env))
     = TRUE
   &   boolean::select(heap,
                       Environment::select(heap,
                                           self,
                                           Elevator::$env),
                       java.lang.Object::<created>)
     = TRUE
   & !  Environment::select(heap, self, Elevator::$env)
      = null
   &   ArrayList::exactInstance(ArrayList::select(heap,
                                                  self,
                                                  Elevator::$persons))
     = TRUE
   &   boolean::select(heap,
                       ArrayList::select(heap,
                                         self,
                                         Elevator::$persons),
                       java.lang.Object::<created>)
     = TRUE
   & !  ArrayList::select(heap,
                          self,
                          Elevator::$persons)
      = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & Elevator::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap}
     \<{
         self.pressInLiftFloorButton__wrappee__Base(floorID);
       }\>   boolean::select(heap,
                             boolean[]::select(heap,
                                               self,
                                               Elevator::$floorButtons),
                             arr(floorID))
           = TRUE

}

\proof {
(keyLog "0" (keyUser "tobia" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "331")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "inEqSimp_ltToLeq" (formula "2"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "2") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "2"))
(rule "polySimp_mulLiterals" (formula "2") (term "0"))
(rule "polySimp_elimOne" (formula "2") (term "0"))
(builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_pressInLiftFloorButton__wrappee__Base,exc,heapAfter_pressInLiftFloorButton__wrappee__Base,anon_heap_pressInLiftFloorButton__wrappee__Base") (contract "Elevator[Elevator::pressInLiftFloorButton__wrappee__Base(int)].JML normal_behavior operation contract.0"))
(branch "Post (pressInLiftFloorButton__wrappee__Base)"
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "16"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
   (rule "pullOutSelect" (formula "16") (term "1,0,1") (inst "selectSK=Elevator_floorButtons_0"))
   (rule "applyEq" (formula "17") (term "0,0,1,0") (ifseqformula "16"))
   (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "16"))
   (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")) (ifInst ""  (formula "9")))
   (rule "eqSymm" (formula "16") (term "0,0"))
   (rule "sortsDisjointModuloNull" (formula "16") (term "0,0"))
   (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")))
   (rule "applyEqReverse" (formula "17") (term "0,0,0,0") (ifseqformula "16"))
   (rule "applyEqReverse" (formula "17") (term "0,0,1,0") (ifseqformula "16"))
   (rule "applyEqReverse" (formula "17") (term "1,0,1") (ifseqformula "16"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "17")))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_0"))
   (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "emptyModality" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "replaceKnownSelect_taclet0_0" (formula "21") (term "1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "21") (term "1,0"))
   (rule "replaceKnownSelect_taclet0_2" (formula "21") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "21") (term "0"))
   (rule "close" (formula "21") (ifseqformula "16"))
)
(branch "Exceptional Post (pressInLiftFloorButton__wrappee__Base)"
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
   (rule "andLeft" (formula "14"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "15"))
   (rule "close" (formula "18") (ifseqformula "17"))
)
(branch "Pre (pressInLiftFloorButton__wrappee__Base)"
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")) (ifInst ""  (formula "1")) (ifInst ""  (formula "12")))
   (rule "inEqSimp_ltRight" (formula "17"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_homoInEq1" (formula "1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "leq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "Null reference (self = null)"
   (rule "notRight" (formula "17"))
   (rule "close" (formula "17") (ifseqformula "1"))
)
)

}
