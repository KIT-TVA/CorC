\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Sep 14 11:40:12 CEST 2021
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/tobia/workspaceCorCGitRuntime/ElevatorCorC";\include "helper.key";\programVariables {Person person; Floor self; Heap heapAtPre;}\problem {
     !person = null
   &   ArrayList::exactInstance(ArrayList::select(heap,
                                                  self,
                                                  Floor::$waiting))
     = TRUE
   &   boolean::select(heap,
                       ArrayList::select(heap,
                                         self,
                                         Floor::$waiting),
                       java.lang.Object::<created>)
     = TRUE
   & !  ArrayList::select(heap, self, Floor::$waiting)
      = null
   &   Environment::exactInstance(Environment::select(heap,
                                                      self,
                                                      Floor::$env))
     = TRUE
   &   boolean::select(heap,
                       Environment::select(heap,
                                           self,
                                           Floor::$env),
                       java.lang.Object::<created>)
     = TRUE
   & !  Environment::select(heap, self, Floor::$env)
      = null
   & Person::exactInstance(person) = TRUE
   &   boolean::select(heap,
                       person,
                       java.lang.Object::<created>)
     = TRUE
   & !person = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & Floor::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap}
     \<{
         self.callElevator();
       }\> Floor::hasCall(heap, self) = TRUE

}

\proof {
(keyLog "0" (keyUser "tobia" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "390")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_callElevator,exc,heapAfter_callElevator,anon_heap_callElevator") (contract "Floor[Floor::callElevator()].JML normal_behavior operation contract.0"))
(branch "Post (callElevator)"
   (builtin "One Step Simplification" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=Floor_elevatorCall_0"))
   (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")) (ifInst ""  (formula "7")))
   (rule "elementOfSingleton" (formula "14") (term "0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
   (rule "hideAuxiliaryEq" (formula "14"))
   (rule "emptyModality" (formula "19") (term "1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,0") (ifseqformula "10"))
   (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "17")))
   (rule "true_left" (formula "4"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "10"))
   (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
   (rule "true_left" (formula "1"))
   (builtin "Evaluate Query" (formula "19") (term "0") (newnames "callee,queryResult,res_hasCall"))
   (rule "replaceKnownQuery_Floor_hasCall(heapAfter_callElevator,self)_0_2" (formula "20") (term "0"))
   (rule "notLeft" (formula "1"))
   (rule "eqSymm" (formula "15") (term "0,0,1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "queryResult"))
   (rule "apply_eq_boolean_rigid" (formula "15") (term "0,0,0,1") (ifseqformula "20"))
   (rule "eqSymm" (formula "15") (term "0,0,1"))
   (builtin "One Step Simplification" (formula "15"))
   (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_hasCall,result,exc_0,heapAfter_hasCall,anon_heap_hasCall") (contract "Floor[Floor::hasCall()].JML normal_behavior operation contract.0"))
   (branch "Post (hasCall)"
      (builtin "One Step Simplification" (formula "16"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "assignment" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "pullOutSelect" (formula "19") (term "0,0,0") (inst "selectSK=Floor_elevatorCall_1"))
      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "19"))
      (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")))
      (rule "replaceKnownSelect_taclet0_0" (formula "19") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "19") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0") (ifseqformula "12"))
      (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "19"))
      (rule "applyEqReverse" (formula "18") (term "0,0") (ifseqformula "19"))
      (rule "hideAuxiliaryEq" (formula "19"))
      (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
      (rule "true_left" (formula "19"))
      (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "18"))
      (rule "methodCallEmpty" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "emptyModality" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "closeTrue" (formula "19"))
   )
   (branch "Exceptional Post (hasCall)"
      (builtin "One Step Simplification" (formula "17"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0") (ifseqformula "12"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "19"))
      (rule "notLeft" (formula "17"))
      (rule "close" (formula "21") (ifseqformula "20"))
   )
   (branch "Pre (hasCall)"
      (builtin "One Step Simplification" (formula "15"))
      (rule "wellFormedAnonEQ" (formula "15") (ifseqformula "12"))
      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "10")))
      (rule "closeTrue" (formula "15"))
   )
   (branch "Null reference (callee = null)"
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")))
      (rule "closeTrue" (formula "15"))
   )
)
(branch "Exceptional Post (callElevator)"
   (builtin "One Step Simplification" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "13"))
   (rule "close" (formula "16") (ifseqformula "15"))
)
(branch "Pre (callElevator)"
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "10")))
   (rule "closeTrue" (formula "15"))
)
(branch "Null reference (self = null)"
   (rule "notRight" (formula "15"))
   (rule "close" (formula "15") (ifseqformula "1"))
)
)

}
