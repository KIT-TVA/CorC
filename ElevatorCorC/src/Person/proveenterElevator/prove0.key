\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Sep 14 12:30:17 CEST 2021
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/tobia/workspaceCorCGitRuntime/ElevatorCorC";\include "helper.key";\programVariables {Elevator e; Person self; Heap heapAtPre;}\problem {
     !e = null
   & geq(int::select(heap, self, Person::$destination),
         Z(0(#)))
   & lt(int::select(heap, self, Person::$destination),
        length(boolean[]::select(heap,
                                 e,
                                 Elevator::$floorButtons)))
   & !  boolean[]::select(heap,
                          e,
                          Elevator::$floorButtons)
      = null
   & !  boolean::select(heap,
                        boolean[]::select(heap,
                                          e,
                                          Elevator::$floorButtons),
                        arr(int::select(heap,
                                        self,
                                        Person::$destination)))
      = null
   &   java.lang.String::exactInstance(java.lang.String::select(heap,
                                                                self,
                                                                Person::$name))
     = TRUE
   &   boolean::select(heap,
                       java.lang.String::select(heap,
                                                self,
                                                Person::$name),
                       java.lang.Object::<created>)
     = TRUE
   & !  java.lang.String::select(heap,
                                 self,
                                 Person::$name)
      = null
   &   int[]::exactInstance(int[]::select(heap,
                                          self,
                                          Person::$additionalButtons))
     = TRUE
   &   boolean::select(heap,
                       int[]::select(heap,
                                     self,
                                     Person::$additionalButtons),
                       java.lang.Object::<created>)
     = TRUE
   & !  int[]::select(heap,
                      self,
                      Person::$additionalButtons)
      = null
   & Elevator::exactInstance(e) = TRUE
   &   boolean::select(heap,
                       e,
                       java.lang.Object::<created>)
     = TRUE
   & !e = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & Person::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap}
     \<{
         e.pressInLiftFloorButton(self.destination);
       }\>   boolean::select(heap,
                             boolean[]::select(heap,
                                               e,
                                               Elevator::$floorButtons),
                             arr(int::select(heap,
                                             self,
                                             Person::$destination)))
           = TRUE

}

\proof {
(keyLog "0" (keyUser "tobia" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "487")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "inEqSimp_ltToLeq" (formula "2"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "2"))
(rule "polySimp_mulComm0" (formula "2") (term "1"))
(rule "polySimp_rightDist" (formula "2") (term "1"))
(rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
(rule "mul_literals" (formula "2") (term "0,1"))
(rule "polySimp_elimOne" (formula "2") (term "1,1"))
(rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
(rule "times_zero_1" (formula "1") (term "0,0"))
(rule "add_zero_left" (formula "1") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "1"))
(rule "mul_literals" (formula "1") (term "1"))
(rule "methodCallUnfoldArguments" (formula "19"))
(rule "variableDeclarationAssign" (formula "19"))
(rule "variableDeclaration" (formula "19") (newnames "var"))
(rule "assignment" (formula "19"))
(rule "variableDeclarationAssign" (formula "19") (term "1"))
(rule "variableDeclaration" (formula "19") (term "1") (newnames "var_1"))
(rule "assignment_read_attribute" (formula "19"))
(branch "Normal Execution (self != null)"
   (builtin "One Step Simplification" (formula "19"))
   (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_pressInLiftFloorButton,exc,heapAfter_pressInLiftFloorButton,anon_heap_pressInLiftFloorButton") (contract "Elevator[Elevator::pressInLiftFloorButton(int)].JML normal_behavior operation contract.0"))
   (branch "Post (pressInLiftFloorButton)"
      (builtin "One Step Simplification" (formula "15"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_0"))
      (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "18"))
      (rule "ifEqualsTRUE" (formula "17"))
      (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0,0") (inst "selectSK=Elevator_floorButtons_0"))
      (rule "applyEq" (formula "18") (term "1,0,0,1,0,0,1") (ifseqformula "17"))
      (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "17"))
      (rule "applyEq" (formula "18") (term "1,0,1,1") (ifseqformula "17"))
      (rule "applyEq" (formula "18") (term "0,0,0,0,0") (ifseqformula "17"))
      (rule "applyEq" (formula "18") (term "0,0,0,0,0,1") (ifseqformula "17"))
      (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
      (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "18") (term "1,0,1,0") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "18") (term "1,0,1,1") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0,1") (ifseqformula "17"))
      (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0,0,1") (ifseqformula "17"))
      (rule "hideAuxiliaryEq" (formula "17"))
      (rule "replace_known_right" (formula "17") (term "0,0,0,0,1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
      (rule "hideAuxiliaryEqConcrete" (formula "18"))
      (rule "cnf_rightDist" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "commute_or" (formula "17"))
      (rule "cnf_rightDist" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "commute_or" (formula "18"))
      (rule "commute_or" (formula "19"))
      (rule "cnf_rightDist" (formula "17"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "commute_or" (formula "17"))
      (rule "emptyModality" (formula "25") (term "1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "replaceKnownSelect_taclet00_1" (formula "25") (term "1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_2" (formula "25") (term "1,0"))
      (rule "pullOutSelect" (formula "25") (term "0,2,0") (inst "selectSK=Person_destination_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "11")))
      (rule "applyEqReverse" (formula "26") (term "0,2,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "ifEqualsTRUE" (formula "20"))
      (rule "orRight" (formula "20"))
      (rule "hideAuxiliaryEqConcrete2" (formula "27"))
      (rule "arrayLengthIsAnInt" (formula "3") (term "1,1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "arrayLengthNotNegative" (formula "3") (term "1,1"))
      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
      (rule "leq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "cut_direct" (formula "18") (term "0,0"))
      (branch "CUT: e.floorButtons.<created> = TRUE TRUE"
         (builtin "One Step Simplification" (formula "19"))
         (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
         (rule "closeTrue" (formula "20"))
      )
      (branch "CUT: e.floorButtons.<created> = TRUE FALSE"
         (builtin "One Step Simplification" (formula "18"))
         (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "23"))
         (rule "close" (formula "20") (ifseqformula "13"))
      )
   )
   (branch "Exceptional Post (pressInLiftFloorButton)"
      (builtin "One Step Simplification" (formula "21"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "16"))
      (rule "close" (formula "19") (ifseqformula "18"))
   )
   (branch "Pre (pressInLiftFloorButton)"
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "2")))
      (rule "inEqSimp_ltRight" (formula "19"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Null reference (var = null)"
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")))
      (rule "closeTrue" (formula "19"))
   )
)
(branch "Null Reference (self = null)"
   (builtin "One Step Simplification" (formula "20"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
   (rule "closeFalse" (formula "1"))
)
)

}
