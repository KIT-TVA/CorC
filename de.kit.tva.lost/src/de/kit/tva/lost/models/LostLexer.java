package de.kit.tva.lost.models;

import org.antlr.v4.runtime.CharStream;
// Generated from Lost.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.RuntimeMetaData;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({ "all", "warnings", "unchecked", "unused", "cast" })
public class LostLexer extends Lexer {
    static {
	RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION);
    }

    protected static final DFA[] _decisionToDFA;
    protected static final PredictionContextCache _sharedContextCache = new PredictionContextCache();
    public static final int T__32 = 1, T__31 = 2, T__30 = 3, T__29 = 4, T__28 = 5, T__27 = 6, T__26 = 7, T__25 = 8,
	    T__24 = 9, T__23 = 10, T__22 = 11, T__21 = 12, T__20 = 13, T__19 = 14, T__18 = 15, T__17 = 16, T__16 = 17,
	    T__15 = 18, T__14 = 19, T__13 = 20, T__12 = 21, T__11 = 22, T__10 = 23, T__9 = 24, T__8 = 25, T__7 = 26,
	    T__6 = 27, T__5 = 28, T__4 = 29, T__3 = 30, T__2 = 31, T__1 = 32, T__0 = 33, WS = 34, NL = 35, KIND = 36,
	    VISIBILITY = 37, TYPE = 38, BRACKETS = 39, EMPTY_BRACKETS = 40, NEW = 41, OP = 42, QT = 43, ID = 44;
    public static String[] modeNames = { "DEFAULT_MODE" };

    public static final String[] tokenNames = { "'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'",
	    "'\\u0005'", "'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", "'\r'", "'\\u000E'",
	    "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", "'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'",
	    "'\\u0017'", "'\\u0018'", "'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'",
	    "'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", "'('", "')'", "'*'", "'+'", "','" };
    public static final String[] ruleNames = { "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", "T__25",
	    "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13",
	    "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0",
	    "WS", "NL", "KIND", "VISIBILITY", "TYPE", "BRACKETS", "EMPTY_BRACKETS", "NEW", "OP", "QT", "ID" };

    public LostLexer(CharStream input) {
	super(input);
	_interp = new LexerATNSimulator(this, _ATN, _decisionToDFA, _sharedContextCache);
    }

    @Override
    public String getGrammarFileName() {
	return "Lost.g4";
    }

    @Override
    public String[] getTokenNames() {
	return tokenNames;
    }

    @Override
    public String[] getRuleNames() {
	return ruleNames;
    }

    @Override
    public String getSerializedATN() {
	return _serializedATN;
    }

    @Override
    public String[] getModeNames() {
	return modeNames;
    }

    @Override
    public ATN getATN() {
	return _ATN;
    }

    public static final String _serializedATN = "\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2.\u016a\b\1\4\2\t"
	    + "\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"
	    + "\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"
	    + "\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"
	    + "\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"
	    + "\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"
	    + ",\t,\4-\t-\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4"
	    + "\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3"
	    + "\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3"
	    + "\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\21"
	    + "\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\24"
	    + "\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30"
	    + "\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\34"
	    + "\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3"
	    + " \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\3#\6#\u00e3\n#\r#\16#\u00e4\3#\3#\3$\3"
	    + "$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\5"
	    + "%\u0101\n%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3"
	    + "&\3&\3&\5&\u0119\n&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3"
	    + "\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'"
	    + "\u0138\n\'\3(\6(\u013b\n(\r(\16(\u013c\3)\3)\3)\3*\3*\3*\3*\3*\3+\6+\u0148"
	    + "\n+\r+\16+\u0149\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3"
	    + ",\3,\3,\3,\3,\3,\3,\5,\u0164\n,\3-\6-\u0167\n-\r-\16-\u0168\2\2.\3\3\5"
	    + "\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"
	    + "!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"
	    + "A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.\3\2\6\4\2\17\17\"\"\3\2]_\b\2\"#\'(,-/\61"
	    + ">@~~\5\2\62;C\\c|\u0178\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2"
	    + "\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"
	    + "\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"
	    + "\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"
	    + "\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"
	    + "\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"
	    + "\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"
	    + "Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\3[\3\2\2\2\5b\3"
	    + "\2\2\2\7h\3\2\2\2\tn\3\2\2\2\13s\3\2\2\2\ru\3\2\2\2\17z\3\2\2\2\21|\3"
	    + "\2\2\2\23~\3\2\2\2\25\u0087\3\2\2\2\27\u0089\3\2\2\2\31\u008b\3\2\2\2"
	    + "\33\u008e\3\2\2\2\35\u0095\3\2\2\2\37\u0098\3\2\2\2!\u009a\3\2\2\2#\u009f"
	    + "\3\2\2\2%\u00a4\3\2\2\2\'\u00a6\3\2\2\2)\u00ab\3\2\2\2+\u00ae\3\2\2\2"
	    + "-\u00b3\3\2\2\2/\u00b5\3\2\2\2\61\u00b7\3\2\2\2\63\u00b9\3\2\2\2\65\u00be"
	    + "\3\2\2\2\67\u00c0\3\2\2\29\u00c6\3\2\2\2;\u00c8\3\2\2\2=\u00ca\3\2\2\2"
	    + "?\u00cc\3\2\2\2A\u00dd\3\2\2\2C\u00df\3\2\2\2E\u00e2\3\2\2\2G\u00e8\3"
	    + "\2\2\2I\u0100\3\2\2\2K\u0118\3\2\2\2M\u0137\3\2\2\2O\u013a\3\2\2\2Q\u013e"
	    + "\3\2\2\2S\u0141\3\2\2\2U\u0147\3\2\2\2W\u0163\3\2\2\2Y\u0166\3\2\2\2["
	    + "\\\7t\2\2\\]\7g\2\2]^\7v\2\2^_\7w\2\2_`\7t\2\2`a\7p\2\2a\4\3\2\2\2bc\7"
	    + "r\2\2cd\7q\2\2de\7u\2\2ef\7v\2\2fg\7<\2\2g\6\3\2\2\2hi\7k\2\2ij\7p\2\2"
	    + "jk\7v\2\2kl\7o\2\2lm\7<\2\2m\b\3\2\2\2no\7x\2\2op\7c\2\2pq\7t\2\2qr\7"
	    + "<\2\2r\n\3\2\2\2st\7}\2\2t\f\3\2\2\2uv\7x\2\2vw\7q\2\2wx\7k\2\2xy\7f\2"
	    + "\2y\16\3\2\2\2z{\7^\2\2{\20\3\2\2\2|}\7=\2\2}\22\3\2\2\2~\177\7T\2\2\177"
	    + "\u0080\7g\2\2\u0080\u0081\7p\2\2\u0081\u0082\7c\2\2\u0082\u0083\7o\2\2"
	    + "\u0083\u0084\7k\2\2\u0084\u0085\7p\2\2\u0085\u0086\7i\2\2\u0086\24\3\2"
	    + "\2\2\u0087\u0088\7\177\2\2\u0088\26\3\2\2\2\u0089\u008a\7E\2\2\u008a\30"
	    + "\3\2\2\2\u008b\u008c\7T\2\2\u008c\u008d\7<\2\2\u008d\32\3\2\2\2\u008e"
	    + "\u008f\7i\2\2\u008f\u0090\7w\2\2\u0090\u0091\7c\2\2\u0091\u0092\7t\2\2"
	    + "\u0092\u0093\7f\2\2\u0093\u0094\7<\2\2\u0094\34\3\2\2\2\u0095\u0096\7"
	    + "Q\2\2\u0096\u0097\7<\2\2\u0097\36\3\2\2\2\u0098\u0099\7*\2\2\u0099 \3"
	    + "\2\2\2\u009a\u009b\7u\2\2\u009b\u009c\7k\2\2\u009c\u009d\7i\2\2\u009d"
	    + "\u009e\7<\2\2\u009e\"\3\2\2\2\u009f\u00a0\7r\2\2\u00a0\u00a1\7t\2\2\u00a1"
	    + "\u00a2\7g\2\2\u00a2\u00a3\7<\2\2\u00a3$\3\2\2\2\u00a4\u00a5\7.\2\2\u00a5"
	    + "&\3\2\2\2\u00a6\u00a7\7X\2\2\u00a7\u00a8\7c\2\2\u00a8\u00a9\7t\2\2\u00a9"
	    + "\u00aa\7u\2\2\u00aa(\3\2\2\2\u00ab\u00ac\7O\2\2\u00ac\u00ad\7<\2\2\u00ad"
	    + "*\3\2\2\2\u00ae\u00af\7k\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1\7x\2\2\u00b1"
	    + "\u00b2\7<\2\2\u00b2,\3\2\2\2\u00b3\u00b4\7U\2\2\u00b4.\3\2\2\2\u00b5\u00b6"
	    + "\7\13\2\2\u00b6\60\3\2\2\2\u00b7\u00b8\7]\2\2\u00b8\62\3\2\2\2\u00b9\u00ba"
	    + "\7u\2\2\u00ba\u00bb\7m\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7r\2\2\u00bd"
	    + "\64\3\2\2\2\u00be\u00bf\7_\2\2\u00bf\66\3\2\2\2\u00c0\u00c1\7p\2\2\u00c1"
	    + "\u00c2\7c\2\2\u00c2\u00c3\7o\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7<\2\2"
	    + "\u00c58\3\2\2\2\u00c6\u00c7\7D\2\2\u00c7:\3\2\2\2\u00c8\u00c9\7F\2\2\u00c9"
	    + "<\3\2\2\2\u00ca\u00cb\7H\2\2\u00cb>\3\2\2\2\u00cc\u00cd\7I\2\2\u00cd\u00ce"
	    + "\7n\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0\7d\2\2\u00d0\u00d1\7c\2\2\u00d1"
	    + "\u00d2\7n\2\2\u00d2\u00d3\7E\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5\7p\2\2"
	    + "\u00d5\u00d6\7f\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7v\2\2\u00d8\u00d9"
	    + "\7k\2\2\u00d9\u00da\7q\2\2\u00da\u00db\7p\2\2\u00db\u00dc\7u\2\2\u00dc"
	    + "@\3\2\2\2\u00dd\u00de\7+\2\2\u00deB\3\2\2\2\u00df\u00e0\7N\2\2\u00e0D"
	    + "\3\2\2\2\u00e1\u00e3\t\2\2\2\u00e2\u00e1\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4"
	    + "\u00e2\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5\u00e6\3\2\2\2\u00e6\u00e7\b#"
	    + "\2\2\u00e7F\3\2\2\2\u00e8\u00e9\7\f\2\2\u00e9H\3\2\2\2\u00ea\u00eb\7N"
	    + "\2\2\u00eb\u00ec\7Q\2\2\u00ec\u00ed\7E\2\2\u00ed\u00ee\7C\2\2\u00ee\u0101"
	    + "\7N\2\2\u00ef\u00f0\7T\2\2\u00f0\u00f1\7G\2\2\u00f1\u00f2\7V\2\2\u00f2"
	    + "\u00f3\7W\2\2\u00f3\u00f4\7T\2\2\u00f4\u0101\7P\2\2\u00f5\u00f6\7R\2\2"
	    + "\u00f6\u00f7\7C\2\2\u00f7\u00f8\7T\2\2\u00f8\u00f9\7C\2\2\u00f9\u0101"
	    + "\7O\2\2\u00fa\u00fb\7R\2\2\u00fb\u00fc\7W\2\2\u00fc\u00fd\7D\2\2\u00fd"
	    + "\u00fe\7N\2\2\u00fe\u00ff\7K\2\2\u00ff\u0101\7E\2\2\u0100\u00ea\3\2\2"
	    + "\2\u0100\u00ef\3\2\2\2\u0100\u00f5\3\2\2\2\u0100\u00fa\3\2\2\2\u0101J"
	    + "\3\2\2\2\u0102\u0103\7r\2\2\u0103\u0104\7w\2\2\u0104\u0105\7d\2\2\u0105"
	    + "\u0106\7n\2\2\u0106\u0107\7k\2\2\u0107\u0119\7e\2\2\u0108\u0109\7r\2\2"
	    + "\u0109\u010a\7t\2\2\u010a\u010b\7k\2\2\u010b\u010c\7x\2\2\u010c\u010d"
	    + "\7c\2\2\u010d\u010e\7v\2\2\u010e\u0119\7g\2\2\u010f\u0110\7r\2\2\u0110"
	    + "\u0111\7t\2\2\u0111\u0112\7q\2\2\u0112\u0113\7v\2\2\u0113\u0114\7g\2\2"
	    + "\u0114\u0115\7e\2\2\u0115\u0116\7v\2\2\u0116\u0117\7g\2\2\u0117\u0119"
	    + "\7f\2\2\u0118\u0102\3\2\2\2\u0118\u0108\3\2\2\2\u0118\u010f\3\2\2\2\u0119"
	    + "L\3\2\2\2\u011a\u011b\7d\2\2\u011b\u011c\7q\2\2\u011c\u011d\7q\2\2\u011d"
	    + "\u011e\7n\2\2\u011e\u011f\7g\2\2\u011f\u0120\7c\2\2\u0120\u0138\7p\2\2"
	    + "\u0121\u0122\7e\2\2\u0122\u0123\7j\2\2\u0123\u0124\7c\2\2\u0124\u0138"
	    + "\7t\2\2\u0125\u0126\7u\2\2\u0126\u0127\7j\2\2\u0127\u0128\7q\2\2\u0128"
	    + "\u0129\7t\2\2\u0129\u0138\7v\2\2\u012a\u012b\7k\2\2\u012b\u012c\7p\2\2"
	    + "\u012c\u0138\7v\2\2\u012d\u012e\7n\2\2\u012e\u012f\7q\2\2\u012f\u0130"
	    + "\7p\2\2\u0130\u0138\7i\2\2\u0131\u0132\7U\2\2\u0132\u0133\7v\2\2\u0133"
	    + "\u0134\7t\2\2\u0134\u0135\7k\2\2\u0135\u0136\7p\2\2\u0136\u0138\7i\2\2"
	    + "\u0137\u011a\3\2\2\2\u0137\u0121\3\2\2\2\u0137\u0125\3\2\2\2\u0137\u012a"
	    + "\3\2\2\2\u0137\u012d\3\2\2\2\u0137\u0131\3\2\2\2\u0138N\3\2\2\2\u0139"
	    + "\u013b\t\3\2\2\u013a\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u013a\3\2"
	    + "\2\2\u013c\u013d\3\2\2\2\u013dP\3\2\2\2\u013e\u013f\7*\2\2\u013f\u0140"
	    + "\7+\2\2\u0140R\3\2\2\2\u0141\u0142\7p\2\2\u0142\u0143\7g\2\2\u0143\u0144"
	    + "\7y\2\2\u0144\u0145\7\"\2\2\u0145T\3\2\2\2\u0146\u0148\t\4\2\2\u0147\u0146"
	    + "\3\2\2\2\u0148\u0149\3\2\2\2\u0149\u0147\3\2\2\2\u0149\u014a\3\2\2\2\u014a"
	    + "V\3\2\2\2\u014b\u014c\7^\2\2\u014c\u014d\7h\2\2\u014d\u014e\7q\2\2\u014e"
	    + "\u014f\7t\2\2\u014f\u0150\7c\2\2\u0150\u0151\7n\2\2\u0151\u0152\7n\2\2"
	    + "\u0152\u0153\7\"\2\2\u0153\u0154\7k\2\2\u0154\u0155\7p\2\2\u0155\u0156"
	    + "\7v\2\2\u0156\u0164\7\"\2\2\u0157\u0158\7^\2\2\u0158\u0159\7g\2\2\u0159"
	    + "\u015a\7z\2\2\u015a\u015b\7k\2\2\u015b\u015c\7u\2\2\u015c\u015d\7v\2\2"
	    + "\u015d\u015e\7u\2\2\u015e\u015f\7\"\2\2\u015f\u0160\7k\2\2\u0160\u0161"
	    + "\7p\2\2\u0161\u0162\7v\2\2\u0162\u0164\7\"\2\2\u0163\u014b\3\2\2\2\u0163"
	    + "\u0157\3\2\2\2\u0164X\3\2\2\2\u0165\u0167\t\5\2\2\u0166\u0165\3\2\2\2"
	    + "\u0167\u0168\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169Z\3"
	    + "\2\2\2\13\2\u00e4\u0100\u0118\u0137\u013c\u0149\u0163\u0168\3\b\2\2";
    public static final ATN _ATN = new ATNDeserializer().deserialize(_serializedATN.toCharArray());
    static {
	_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
	    _decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
	}
    }
}