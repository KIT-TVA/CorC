<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="LinearSearch" proven="true">
    <statement name="statement">
      <refinement xsi:type="cbcmodel:RepetitionStatement" name="repetitionStatement" proven="true" variantProven="true">
        <guard name="A[i] != x"/>
        <invariant name="!appears(A, x, i+1, A.length)"/>
        <startStatement name="start">
          <refinement name="i=A.length-1;" proven="true">
            <postCondition name="!appears(A, x, i+1, A.length)"/>
            <preCondition name="appears(A, x, 0, A.length)"/>
          </refinement>
          <postCondition name="!appears(A, x, i+1, A.length)"/>
          <preCondition name="appears(A, x, 0, A.length)"/>
        </startStatement>
        <variant name="i"/>
        <loopStatement name="loop">
          <refinement name="i=i-1;" proven="true">
            <postCondition name="!appears(A, x, i+1, A.length)"/>
            <preCondition name="(!appears(A, x, i+1, A.length)) &amp; (A[i] != x)"/>
          </refinement>
          <postCondition name="!appears(A, x, i+1, A.length)"/>
          <preCondition name="(!appears(A, x, i+1, A.length)) &amp; (A[i] != x)"/>
        </loopStatement>
        <endStatement name="end">
          <refinement name=";" proven="true">
            <postCondition name="A[i]=x"/>
            <preCondition name="(!appears(A, x, i+1, A.length)) &amp; !(A[i] != x)"/>
          </refinement>
          <postCondition name="A[i]=x"/>
          <preCondition name="(!appears(A, x, i+1, A.length)) &amp; !(A[i] != x)"/>
        </endStatement>
      </refinement>
      <postCondition name="A[i]=x"/>
      <preCondition name="appears(A, x, 0, A.length)"/>
    </statement>
  </cbcmodel:CbCFormula>
  <cbcmodel:Renaming>
    <rename type="bool" function="app" newName="appears"/>
  </cbcmodel:Renaming>
  <cbcmodel:GlobalConditions>
    <conditions name="A!=null"/>
    <conditions name="A.length > 0"/>
    <conditions name="A.length &lt; 10"/>
    <conditions name="i>=0 &amp; i&lt;A.length"/>
    <conditions name="appears(A, x, 0, A.length)"/>
  </cbcmodel:GlobalConditions>
  <cbcmodel:JavaVariables>
    <variables name="int[] A"/>
    <variables name="int i"/>
    <variables name="int x"/>
  </cbcmodel:JavaVariables>
</xmi:XMI>
