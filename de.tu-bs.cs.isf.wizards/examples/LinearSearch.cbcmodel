<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="LinearSearch" proven="true">
    <statement name="statement">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true">
        <firstStatement name="statement1">
          <refinement name="i = A.length-1;" proven="true">
            <postCondition name="modifiable(i);&#xD;&#xA;appears(A, x, 0, A.length)&#xD;&#xA;&amp; i = A.length-1"/>
            <preCondition name="appears(A, x, 0, A.length)"/>
          </refinement>
          <postCondition name="modifiable(i);&#xD;&#xA;appears(A, x, 0, A.length)&#xD;&#xA;&amp; i = A.length-1"/>
          <preCondition name="appears(A, x, 0, A.length)"/>
        </firstStatement>
        <secondStatement name="statement2">
          <refinement xsi:type="cbcmodel:SmallRepetitionStatement" name="repetitionStatement" proven="true" variantProven="true" preProven="true" postProven="true">
            <postCondition name="modifiable(i);&#xD;&#xA;A[i] = x"/>
            <preCondition name="modifiable(i);&#xD;&#xA;appears(A, x, 0, A.length)&#xD;&#xA;&amp; i = A.length-1"/>
            <loopStatement name="loop">
              <refinement name="i = i-1;" proven="true">
                <postCondition name="!appears(A, x, i+1, A.length)"/>
                <preCondition name="(!appears(A, x, i+1, A.length)) &amp; (A[i] != x)"/>
              </refinement>
              <postCondition name="!appears(A, x, i+1, A.length)"/>
              <preCondition name="(!appears(A, x, i+1, A.length)) &amp; (A[i] != x)"/>
            </loopStatement>
            <variant name="i"/>
            <invariant name="!appears(A, x, i+1, A.length)"/>
            <guard name="A[i] != x"/>
          </refinement>
          <postCondition name="modifiable(i);&#xD;&#xA;A[i] = x"/>
          <preCondition name="modifiable(i);&#xD;&#xA;appears(A, x, 0, A.length)&#xD;&#xA;&amp; i = A.length-1"/>
        </secondStatement>
        <intermediateCondition name="modifiable(i);&#xD;&#xA;appears(A, x, 0, A.length)&#xD;&#xA;&amp; i = A.length-1"/>
      </refinement>
      <postCondition name="modifiable(i);&#xD;&#xA;A[i] = x"/>
      <preCondition name="appears(A, x, 0, A.length)"/>
    </statement>
  </cbcmodel:CbCFormula>
  <cbcmodel:GlobalConditions>
    <conditions name="A != null"/>
    <conditions name="A.length > 0"/>
    <conditions name="A.length &lt; 10"/>
    <conditions name="i >= 0 &amp; i &lt; A.length"/>
    <conditions name="appears(A, x, 0, A.length)"/>
  </cbcmodel:GlobalConditions>
  <cbcmodel:JavaVariables>
    <variables name="int[] A"/>
    <variables name="int i"/>
    <variables name="int x"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:Renaming>
    <rename type="bool" function="app" newName="appears"/>
  </cbcmodel:Renaming>
</xmi:XMI>
