<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="maxElement" proven="true" comment="">
    <statement name="statement" id="126b6e96-ad72-469a-b682-510aebb13939">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="b4122bc0-db3e-41e6-8583-394f5f97dfef">
        <firstStatement name="statement1" id="5c9e4602-b99c-431c-898e-e816068f8202">
          <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="4999ab1f-c0e1-4cae-acda-f62f9d2d6043">
            <firstStatement name="statement1" id="0239f7a5-54d7-4ac9-8077-14f7af8c5664">
              <refinement name="i = 0;" proven="true" id="5dea9071-b406-4a59-94fe-4aca14fe41f9">
                <postCondition name="A.length > 0 &amp; i = 0">
                  <modifiables>i</modifiables>
                </postCondition>
                <preCondition name="A.length > 0"/>
              </refinement>
              <postCondition name="A.length > 0 &amp; i = 0">
                <modifiables>i</modifiables>
              </postCondition>
              <preCondition name="A.length > 0"/>
            </firstStatement>
            <secondStatement name="statement2" id="9bb51eea-26e8-4ce6-bd53-a66c2c0fe13c">
              <refinement name="j = 1;" proven="true" id="96c3f533-8896-4201-97c0-43edc5cb0ba8">
                <postCondition name="A.length > 0 &amp; i = 0 &amp; j = 1">
                  <modifiables>i</modifiables>
                  <modifiables>j</modifiables>
                </postCondition>
                <preCondition name="A.length > 0 &amp; i = 0">
                  <modifiables>i</modifiables>
                </preCondition>
              </refinement>
              <postCondition name="A.length > 0 &amp; i = 0 &amp; j = 1">
                <modifiables>i</modifiables>
                <modifiables>j</modifiables>
              </postCondition>
              <preCondition name="A.length > 0 &amp; i = 0">
                <modifiables>i</modifiables>
              </preCondition>
            </secondStatement>
            <intermediateCondition name="A.length > 0 &amp; i = 0">
              <modifiables>i</modifiables>
            </intermediateCondition>
          </refinement>
          <postCondition name="A.length > 0 &amp; i = 0 &amp; j = 1">
            <modifiables>i</modifiables>
            <modifiables>j</modifiables>
          </postCondition>
          <preCondition name="A.length > 0"/>
        </firstStatement>
        <secondStatement name="statement2" id="8eac16d4-c94a-415e-bd56-4be3b961edf6">
          <refinement xsi:type="cbcmodel:SmallRepetitionStatement" name="repetitionStatement" proven="true" id="18da35fc-368e-41f8-8521-c8aa52e74b45" variantProven="true" preProven="true" postProven="true">
            <postCondition name="max(A, 0, A.length, i)">
              <modifiables>i</modifiables>
              <modifiables>j</modifiables>
            </postCondition>
            <preCondition name="A.length > 0 &amp; i = 0 &amp; j = 1">
              <modifiables>i</modifiables>
              <modifiables>j</modifiables>
            </preCondition>
            <loopStatement name="loop" id="d3331b91-5cc6-4f6f-a9c6-ac46e51b0ee4">
              <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="12e1a845-7739-4422-9e13-7bb136ac22d0">
                <firstStatement name="statement1" id="4494a0fb-7b1a-4468-a6dc-c62d04658181">
                  <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" id="3d7dbf2c-6108-4834-bb38-d3207fbe671d" preProve="true">
                    <guards name="A[j] > A[i]"/>
                    <guards name="A[j] &lt;= A[i]"/>
                    <commands name="statement" id="eb9a90ff-b4e7-4c65-98fa-8d2b8ccc3a0c">
                      <refinement name="i = j;" proven="true" id="ddda60dd-57fd-4da0-aa9e-08b4cb7bb75a">
                        <postCondition name="max(A, 0, j+1, i)">
                          <modifiables>i</modifiables>
                          <modifiables>j</modifiables>
                        </postCondition>
                        <preCondition name="((max(A, 0, j, i)) &amp; (j != A.length)) &amp; (A[j] > A[i])">
                          <modifiables>i</modifiables>
                          <modifiables>j</modifiables>
                        </preCondition>
                      </refinement>
                      <postCondition name="max(A, 0, j+1, i)">
                        <modifiables>i</modifiables>
                        <modifiables>j</modifiables>
                      </postCondition>
                      <preCondition name="((max(A, 0, j, i)) &amp; (j != A.length)) &amp; (A[j] > A[i])">
                        <modifiables>i</modifiables>
                        <modifiables>j</modifiables>
                      </preCondition>
                    </commands>
                    <commands name="statement" id="1631d566-b105-482e-b824-5ac98758dd09">
                      <refinement name=";" proven="true" id="542948eb-3277-4648-84a1-10aa21959227">
                        <postCondition name="max(A, 0, j+1, i)">
                          <modifiables>i</modifiables>
                          <modifiables>j</modifiables>
                        </postCondition>
                        <preCondition name="((max(A, 0, j, i)) &amp; (j != A.length)) &amp; (A[j] &lt;= A[i])">
                          <modifiables>i</modifiables>
                          <modifiables>j</modifiables>
                        </preCondition>
                      </refinement>
                      <postCondition name="max(A, 0, j+1, i)">
                        <modifiables>i</modifiables>
                        <modifiables>j</modifiables>
                      </postCondition>
                      <preCondition name="((max(A, 0, j, i)) &amp; (j != A.length)) &amp; (A[j] &lt;= A[i])">
                        <modifiables>i</modifiables>
                        <modifiables>j</modifiables>
                      </preCondition>
                    </commands>
                  </refinement>
                  <postCondition name="max(A, 0, j+1, i)">
                    <modifiables>i</modifiables>
                    <modifiables>j</modifiables>
                  </postCondition>
                  <preCondition name="(max(A, 0, j, i)) &amp; (j != A.length)">
                    <modifiables>i</modifiables>
                    <modifiables>j</modifiables>
                  </preCondition>
                </firstStatement>
                <secondStatement name="statement2" id="ac8b23d9-3ae9-46c4-856a-bce88417b114">
                  <refinement name="j = j+1;" proven="true" id="ccde479c-9742-4796-b71f-c8280ee84b02">
                    <postCondition name="max(A, 0, j, i)">
                      <modifiables>i</modifiables>
                      <modifiables>j</modifiables>
                    </postCondition>
                    <preCondition name="max(A, 0, j+1, i)">
                      <modifiables>i</modifiables>
                      <modifiables>j</modifiables>
                    </preCondition>
                  </refinement>
                  <postCondition name="max(A, 0, j, i)">
                    <modifiables>i</modifiables>
                    <modifiables>j</modifiables>
                  </postCondition>
                  <preCondition name="max(A, 0, j+1, i)">
                    <modifiables>i</modifiables>
                    <modifiables>j</modifiables>
                  </preCondition>
                </secondStatement>
                <intermediateCondition name="max(A, 0, j+1, i)">
                  <modifiables>i</modifiables>
                  <modifiables>j</modifiables>
                </intermediateCondition>
              </refinement>
              <postCondition name="max(A, 0, j, i)">
                <modifiables>i</modifiables>
                <modifiables>j</modifiables>
              </postCondition>
              <preCondition name="(max(A, 0, j, i)) &amp; (j != A.length)">
                <modifiables>i</modifiables>
                <modifiables>j</modifiables>
              </preCondition>
            </loopStatement>
            <variant name="A.length - j"/>
            <invariant name="max(A, 0, j, i)"/>
            <guard name="j != A.length"/>
          </refinement>
          <postCondition name="max(A, 0, A.length, i)">
            <modifiables>i</modifiables>
            <modifiables>j</modifiables>
          </postCondition>
          <preCondition name="A.length > 0 &amp; i = 0 &amp; j = 1">
            <modifiables>i</modifiables>
            <modifiables>j</modifiables>
          </preCondition>
        </secondStatement>
        <intermediateCondition name="A.length > 0 &amp; i = 0 &amp; j = 1">
          <modifiables>i</modifiables>
          <modifiables>j</modifiables>
        </intermediateCondition>
      </refinement>
      <postCondition name="max(A, 0, A.length, i)">
        <modifiables>i</modifiables>
        <modifiables>j</modifiables>
      </postCondition>
      <preCondition name="A.length > 0"/>
    </statement>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="int j"/>
    <variables name="int i"/>
    <variables name="int[] A"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions>
    <conditions name="A != null"/>
    <conditions name="A.length > 0"/>
    <conditions name="A.length &lt; 10"/>
    <conditions name="i >= 0 &amp; i &lt; A.length"/>
    <conditions name="j >= 0 &amp; j &lt;= A.length"/>
  </cbcmodel:GlobalConditions>
  <cbcmodel:Renaming>
    <rename type="int" function="maxi" newName="max"/>
  </cbcmodel:Renaming>
</xmi:XMI>
