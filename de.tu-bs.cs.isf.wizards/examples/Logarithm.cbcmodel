<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="Logarithm" proven="true" comment="">
    <statement name="statement" id="6d204f8f-1578-4a6d-b71a-781999894b7d">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="3dc34200-808a-44e4-afba-a34dd24c14b5">
        <firstStatement name="statement1" id="4d71051a-ca69-480b-937a-2d74b4ed2fd4">
          <refinement name="n=N; l=0;" proven="true" id="1f27ded7-6019-4a38-ad2a-fe251c148606">
            <postCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)">
              <modifiables>l</modifiables>
              <modifiables>n</modifiables>
            </postCondition>
            <preCondition name="N > 0"/>
          </refinement>
          <postCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)">
            <modifiables>l</modifiables>
            <modifiables>n</modifiables>
          </postCondition>
          <preCondition name="N > 0"/>
        </firstStatement>
        <secondStatement name="statement2" id="dc44b68c-e0aa-432a-8094-ed1b52e4771b">
          <refinement xsi:type="cbcmodel:SmallRepetitionStatement" name="repetitionStatement" proven="true" id="4fbd38a4-e225-4622-ae11-abe0f2a60581" variantProven="true" preProven="true" postProven="true">
            <postCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l) &amp; n = 1">
              <modifiables>l</modifiables>
              <modifiables>n</modifiables>
            </postCondition>
            <preCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)">
              <modifiables>l</modifiables>
              <modifiables>n</modifiables>
            </preCondition>
            <loopStatement name="loop" id="56530ad2-0af2-48bb-a32f-a4ff7100c438">
              <refinement name="n = n/2; l=l+1;" proven="true" id="da424e45-3cf7-499e-b12f-9907bbf1939a">
                <postCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)">
                  <modifiables>l</modifiables>
                  <modifiables>n</modifiables>
                </postCondition>
                <preCondition name="(N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)) &amp; (n != 1)">
                  <modifiables>l</modifiables>
                  <modifiables>n</modifiables>
                </preCondition>
              </refinement>
              <postCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)">
                <modifiables>l</modifiables>
                <modifiables>n</modifiables>
              </postCondition>
              <preCondition name="(N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)) &amp; (n != 1)">
                <modifiables>l</modifiables>
                <modifiables>n</modifiables>
              </preCondition>
            </loopStatement>
            <variant name="n-1"/>
            <invariant name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)"/>
            <guard name="n != 1"/>
          </refinement>
          <postCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l) &amp; n = 1">
            <modifiables>l</modifiables>
            <modifiables>n</modifiables>
          </postCondition>
          <preCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)">
            <modifiables>l</modifiables>
            <modifiables>n</modifiables>
          </preCondition>
        </secondStatement>
        <intermediateCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l)">
          <modifiables>l</modifiables>
          <modifiables>n</modifiables>
        </intermediateCondition>
      </refinement>
      <postCondition name="N >= n*pow(2,l) &amp; N &lt; (n+1)*pow(2,l) &amp; n = 1">
        <modifiables>l</modifiables>
        <modifiables>n</modifiables>
      </postCondition>
      <preCondition name="N > 0"/>
    </statement>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="int n"/>
    <variables name="int l"/>
    <variables name="int N"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions>
    <conditions name="N > 0"/>
    <conditions name="n &lt;= N &amp; n >= 1"/>
    <conditions name="l >= 0 &amp; l &lt; N"/>
    <conditions name="N &lt; 20"/>
  </cbcmodel:GlobalConditions>
  <cbcmodel:Renaming>
    <rename type="int" function="Helper.pow" newName="pow"/>
  </cbcmodel:Renaming>
</xmi:XMI>
