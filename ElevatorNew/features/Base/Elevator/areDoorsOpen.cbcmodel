<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="areDoorsOpen" proven="true" className="Elevator" methodName="areDoorsOpen">
    <statement name="statement" id="4b403b65-8517-4047-8003-a79e13eae855">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="7ce12b39-403c-4ee1-a454-007aad8d75bf">
        <firstStatement name="statement1" id="6cce8ab2-f9df-44f9-88b0-06a83d765609">
          <refinement name="ret = (this.doors == 0);" proven="true" id="6b01d7cc-eb8d-4be3-bcd6-d8425ab5ebd2">
            <postCondition name="(this.doors = 0 -> ret = TRUE)&#xD;&#xA;&amp; (this.doors = 1 -> ret = FALSE)"/>
            <preCondition name="this.doors >= 0 &amp; this.doors &lt;= 1"/>
          </refinement>
          <postCondition name="(this.doors = 0 -> ret = TRUE)&#xD;&#xA;&amp; (this.doors = 1 -> ret = FALSE)"/>
          <preCondition name="this.doors >= 0 &amp; this.doors &lt;= 1"/>
        </firstStatement>
        <secondStatement name="statement2" id="b1c79877-59b6-40d7-8efb-30fad2331cfb">
          <refinement xsi:type="cbcmodel:ReturnStatement" name="ret;" proven="true" comment="returnStatement" id="e62f3a57-5041-4de7-8681-54b0750d64a0">
            <postCondition name="(this.doors = 0 -> ret = TRUE)&#xD;&#xA;&amp; (this.doors = 1 -> ret = FALSE)"/>
            <preCondition name="(this.doors = 0 -> ret = TRUE)&#xD;&#xA;&amp; (this.doors = 1 -> ret = FALSE)"/>
          </refinement>
          <postCondition name="(this.doors = 0 -> ret = TRUE)&#xD;&#xA;&amp; (this.doors = 1 -> ret = FALSE)"/>
          <preCondition name="(this.doors = 0 -> ret = TRUE)&#xD;&#xA;&amp; (this.doors = 1 -> ret = FALSE)"/>
        </secondStatement>
        <intermediateCondition name="(this.doors = 0 -> ret = TRUE)&#xD;&#xA;&amp; (this.doors = 1 -> ret = FALSE)"/>
      </refinement>
      <postCondition name="(this.doors = 0 -> ret = TRUE)&#xD;&#xA;&amp; (this.doors = 1 -> ret = FALSE)"/>
      <preCondition name="this.doors >= 0 &amp; this.doors &lt;= 1"/>
    </statement>
    <preCondition name="pre"/>
    <postCondition name="post"/>
    <methodObj href="Elevator.cbcclass#//@methods.0"/>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables/>
</xmi:XMI>
