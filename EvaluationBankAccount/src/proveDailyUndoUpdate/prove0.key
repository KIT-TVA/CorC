\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri May 03 11:13:35 CEST 2019
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "C:/Users/tbord/runtime-EclipseApplication/EvaluationBankAccount";\include "helper.key";\programVariables {int OVERDRAFT_LIMIT; int balance; int old_balance; int newBalance; boolean result; int x; int withdraw; int old_withdraw; int DAILY_LIMIT; int newWithdraw; Account a; boolean tmp;  Heap heapAtPre;}\problem {
     geq(withdraw, old_withdraw)
   &   int::select(heap, null, Account::$balance)
     = sub(old_balance, x)
   & OVERDRAFT_LIMIT = Z(0(#))
   & DAILY_LIMIT = Z(neglit(0(0(0(1(#))))))
   & !a = null
   & wellFormed(heap)
-> {heapAtPre:=heap}
     \<{
         result=true;
       }\> (  (   result = FALSE
               ->   withdraw = old_withdraw
                  &   int::select(heap,
                                  null,
                                  Account::$balance)
                    = old_balance)
            & (   result = TRUE
               ->   geq(withdraw, old_withdraw)
                  &   int::select(heap,
                                  null,
                                  Account::$balance)
                    = sub(old_balance, x)))

}

\proof {
(keyLog "0" (keyUser "tbord" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "15")

(branch "dummy ID"
(rule "false_to_not_true" (formula "1") (term "0,0,0,1,1"))
(rule "simplifyUpdate2" (formula "1") (term "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "polySimp_elimSub" (formula "7") (term "1,1,1,1,0"))
(rule "polySimp_elimSub" (formula "2") (term "1"))
(rule "assignment" (formula "7"))
(rule "emptyModality" (formula "7") (term "1"))
(rule "applyOnRigidFormula" (formula "7"))
(rule "applyOnRigidFormula" (formula "7") (term "0"))
(rule "simplifyUpdate2" (formula "7") (term "1,0"))
(rule "applyOnRigidFormula" (formula "7") (term "1"))
(rule "simplifyUpdate2" (formula "7") (term "1,1"))
(rule "replace_known_left" (formula "7") (term "1,1,1") (ifseqformula "2"))
(rule "concrete_and_3" (formula "7") (term "1,1"))
(rule "replace_known_left" (formula "7") (term "1,1") (ifseqformula "1"))
(rule "concrete_impl_4" (formula "7") (term "1"))
(rule "concrete_and_3" (formula "7"))
(rule "impRight" (formula "7"))
(rule "notLeft" (formula "1"))
(rule "applyOnRigidFormula" (formula "6"))
(rule "simplifyUpdate1" (formula "6") (term "1"))
(rule "applyOnPV" (formula "6") (term "0"))
(rule "boolean_equal" (formula "6"))
(rule "closeTrue" (formula "6"))
)

}
