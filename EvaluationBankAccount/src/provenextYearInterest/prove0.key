\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 30 13:57:19 CEST 2019
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "C:/Users/tbord/runtime-EclipseApplication/EvaluationBankAccount";\include "helper.key";\programVariables {Account account; Account old_account;  Heap heapAtPre;}\problem {
     true
   & account = old_account
   & !account = null
   & !old_account = null
   & wellFormed(heap)
-> {heapAtPre:=heap}
     \<{
         account.balance+=account.interest;
         account.interest=0;
       }\> (    int::select(heap,
                            account,
                            Account::$interest)
              = Z(0(#))
            &   int::select(heap,
                            account,
                            Account::$balance)
              = add(int::select(heap,
                                old_account,
                                Account::$balance),
                    int::select(heap,
                                old_account,
                                Account::$interest)))

}

\proof {
(keyLog "0" (keyUser "tbord" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "387")

(branch "dummy ID"
(rule "concrete_and_1" (formula "1") (term "0,0,0,0"))
(rule "simplifyUpdate2" (formula "1") (term "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "1"))
(rule "polySimp_homoEq" (formula "5") (term "1,0"))
(rule "polySimp_addComm1" (formula "5") (term "0,1,0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0,1,0"))
(rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
(rule "polySimp_sepPosMonomial" (formula "4") (term "1,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,1,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,1,0"))
(rule "polySimp_mulAssoc" (formula "4") (term "0,1,1,0"))
(rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "0,1,1,0"))
(rule "polySimp_elimOne" (formula "4") (term "0,1,1,0"))
(rule "compound_assignment_op_plus_attr" (formula "4") (inst "#v=a"))
(rule "variableDeclarationAssign" (formula "4"))
(rule "variableDeclaration" (formula "4") (newnames "a"))
(rule "assignment" (formula "4"))
(rule "eval_order_access4" (formula "4") (term "1") (inst "#v1=x") (inst "#v0=a_1"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "a_1"))
(rule "assignment" (formula "4") (term "1"))
(rule "sequentialToParallel2" (formula "4"))
(rule "applyOnElementary" (formula "4") (term "1,0"))
(rule "applyOnPV" (formula "4") (term "0,1,0"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x"))
(rule "compound_int_cast_expression" (formula "4") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_1"))
(rule "remove_parentheses_right" (formula "4") (term "1"))
(rule "compound_addition_2" (formula "4") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2"))
(rule "assignment_read_attribute" (formula "4"))
(branch "Normal Execution (a != null)"
   (rule "sequentialToParallel2" (formula "4"))
   (rule "simplifyUpdate2" (formula "4"))
   (rule "simplifyUpdate3" (formula "4") (term "1,0"))
   (rule "applyOnElementary" (formula "4") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "4") (term "0,1,0"))
   (rule "applyOnPV" (formula "4") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "4") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "4") (term "2,0,1,0"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_3"))
   (rule "assignment_read_attribute" (formula "4"))
   (branch "Normal Execution (account != null)"
      (rule "sequentialToParallel2" (formula "4"))
      (rule "simplifyUpdate3" (formula "4") (term "1,0"))
      (rule "assignmentAdditionInt" (formula "4") (term "1"))
      (rule "translateJavaAddInt" (formula "4") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "4"))
      (rule "simplifyUpdate2" (formula "4"))
      (rule "simplifyUpdate3" (formula "4") (term "1,0"))
      (rule "applyOnElementary" (formula "4") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "4") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "4") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "4") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "4") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "4") (term "1,0,1,0"))
      (rule "widening_identity_cast_5" (formula "4") (term "1"))
      (rule "assignment" (formula "4") (term "1"))
      (rule "sequentialToParallel2" (formula "4"))
      (rule "simplifyUpdate2" (formula "4"))
      (rule "simplifyUpdate3" (formula "4") (term "1,0"))
      (rule "applyOnElementary" (formula "4") (term "1,0"))
      (rule "applyOnPV" (formula "4") (term "0,1,0"))
      (rule "assignment_write_attribute" (formula "4"))
      (branch "Normal Execution (a_1 != null)"
         (rule "sequentialToParallel2" (formula "4"))
         (rule "simplifyUpdate2" (formula "4"))
         (rule "applyOnElementary" (formula "4") (term "0"))
         (rule "applyOnRigidTerm" (formula "4") (term "0,0"))
         (rule "simplifyUpdate1" (formula "4") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "4") (term "1,0,0"))
         (rule "simplifyUpdate1" (formula "4") (term "2,0,0"))
         (rule "simplifyUpdate1" (formula "4") (term "3,0,0"))
         (rule "applyOnPV" (formula "4") (term "1,0,0"))
         (rule "applyOnPV" (formula "4") (term "3,0,0"))
         (rule "assignment_write_attribute" (formula "4"))
         (branch "Normal Execution (account != null)"
            (rule "sequentialToParallel2" (formula "4"))
            (rule "simplifyUpdate2" (formula "4"))
            (rule "applyOnElementary" (formula "4") (term "0"))
            (rule "applyOnRigidTerm" (formula "4") (term "0,0"))
            (rule "applyOnPV" (formula "4") (term "0,0,0"))
            (rule "simplifyUpdate1" (formula "4") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "4") (term "2,0,0"))
            (rule "simplifyUpdate1" (formula "4") (term "3,0,0"))
            (rule "emptyModality" (formula "4") (term "1"))
            (rule "applyOnRigidFormula" (formula "4"))
            (rule "applyOnRigidFormula" (formula "4") (term "0"))
            (rule "simplifyUpdate1" (formula "4") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "4") (term "1"))
            (rule "applyOnRigidTerm" (formula "4") (term "0,0"))
            (rule "applyOnPV" (formula "4") (term "0,0,0"))
            (rule "simplifyUpdate1" (formula "4") (term "1,0,0"))
            (rule "simplifyUpdate1" (formula "4") (term "2,0,0"))
            (rule "applyOnRigidTerm" (formula "4") (term "1,1"))
            (rule "applyOnRigidTerm" (formula "4") (term "0,1"))
            (rule "applyOnPV" (formula "4") (term "0,0,1"))
            (rule "simplifyUpdate1" (formula "4") (term "1,0,1"))
            (rule "simplifyUpdate1" (formula "4") (term "2,0,1"))
            (rule "polySimp_homoEq" (formula "4") (term "1"))
            (rule "polySimp_addComm1" (formula "4") (term "0,1"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
            (rule "applyOnRigidTerm" (formula "4") (term "1,0,1"))
            (rule "simplifyUpdate1" (formula "4") (term "1,1,0,1"))
            (rule "applyOnRigidTerm" (formula "4") (term "1,0,0,1"))
            (rule "applyOnPV" (formula "4") (term "0,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "4") (term "1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "4") (term "2,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
            (rule "applyOnRigidTerm" (formula "4") (term "0,1,0,1"))
            (rule "applyOnPV" (formula "4") (term "0,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "4") (term "1,0,1,0,1"))
            (rule "simplifyUpdate1" (formula "4") (term "2,0,1,0,1"))
            (rule "polySimp_addComm1" (formula "4") (term "0,1"))
            (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,1"))
            (rule "dismissNonSelectedField" (formula "4") (term "0,1,0,0,1"))
            (rule "applyEq" (formula "4") (term "1,0,1,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "1,0,1,0,0,1") (ifseqformula "1"))
            (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1"))
            (rule "add_literals" (formula "4") (term "1,0,0,1"))
            (rule "times_zero_1" (formula "4") (term "0,0,1"))
            (rule "add_zero_left" (formula "4") (term "0,1"))
            (rule "polySimp_invertEq" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
            (rule "times_zero_2" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "0,1"))
            (rule "eq_and" (formula "4"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Account_interest_0"))
            (rule "simplifySelectOfStore" (formula "1"))
            (rule "eqClose" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "eqClose" (formula "1") (term "0,0,0"))
            (rule "concrete_and_1" (formula "1") (term "0,0"))
            (rule "equalUnique" (formula "1") (term "0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "0,0"))
            (rule "ifthenelse_true" (formula "1") (term "0"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "1"))
            (rule "eqClose" (formula "5"))
            (rule "closeTrue" (formula "5"))
         )
         (branch "Null Reference (account = null)"
            (rule "false_right" (formula "5"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "close" (formula "4") (ifseqformula "1"))
         )
      )
      (branch "Null Reference (a_1 = null)"
         (rule "false_right" (formula "5"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "close" (formula "4") (ifseqformula "1"))
      )
   )
   (branch "Null Reference (account = null)"
      (rule "false_right" (formula "5"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "close" (formula "4") (ifseqformula "1"))
   )
)
(branch "Null Reference (a = null)"
   (rule "false_right" (formula "5"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "close" (formula "4") (ifseqformula "1"))
)
)

}
