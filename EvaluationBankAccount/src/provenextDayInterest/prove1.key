\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jun 24 16:05:37 CEST 2019
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=20000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/tbord/Documents/EvaluationBankAccount";\include "helper.key";\programVariables {Account a; int old_interest; boolean tmp;  Heap heapAtPre;}\problem {
     (   tmp = TRUE
      ->   int::select(heap, null, Account::$withdraw)
         = Z(0(#)))
   & !a = null
   &   boolean::select(heap,
                       a,
                       java.lang.Object::<created>)
     = TRUE
   &   old_interest
     = int::select(heap, null, Account::$interest)
   & wellFormed(heap)
-> {heapAtPre:=heap}
     \<{
         a.interest+=a.calculateInterest();
       }\> (  (   geq(int::select(heap,
                                  null,
                                  Account::$balance),
                      Z(0(#)))
               -> geq(int::select(heap,
                                  null,
                                  Account::$interest),
                      old_interest))
            & (   leq(int::select(heap,
                                  null,
                                  Account::$balance),
                      Z(0(#)))
               -> leq(int::select(heap,
                                  null,
                                  Account::$interest),
                      old_interest))
            & (   tmp = TRUE
               ->   int::select(heap,
                                null,
                                Account::$withdraw)
                  = Z(0(#))))

}

\proof {
(keyLog "0" (keyUser "tbord" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "345")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "3"))
(rule "compound_assignment_op_plus_attr" (formula "6") (inst "#v=a_1"))
(rule "variableDeclarationAssign" (formula "6"))
(rule "variableDeclaration" (formula "6") (newnames "a_1"))
(rule "assignment" (formula "6"))
(rule "activeUseStaticFieldWriteAccess2" (formula "6") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "compound_int_cast_expression" (formula "6") (term "1") (inst "#v=x_1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_1"))
(rule "remove_parentheses_right" (formula "6") (term "1"))
(rule "compound_addition_2" (formula "6") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_2"))
(rule "activeUseStaticFieldReadAccess2" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment_read_static_attribute" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
(rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
(builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_calculateInterest,result,exc,heapAfter_calculateInterest,anon_heap_calculateInterest") (contract "Account[Account::calculateInterest()].JML normal_behavior operation contract.0"))
(branch "Post (calculateInterest)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "pullOutSelect" (formula "9") (term "0,0") (inst "selectSK=Account_balance_0"))
   (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
   (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "9"))
   (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "9"))
   (rule "hideAuxiliaryEq" (formula "9"))
   (rule "assignmentAdditionInt" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "translateJavaAddInt" (formula "11") (term "0,1,0"))
   (rule "widening_identity_cast_5" (formula "11") (term "1"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "assignment_write_static_attribute" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "emptyModality" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "11") (term "0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "11") (term "0,0,0,0"))
   (rule "dismissNonSelectedField" (formula "11") (term "0,1,1"))
   (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "11") (term "0,0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "11") (term "0,0,1,0"))
   (rule "pullOutSelect" (formula "11") (term "0,1,1,0") (inst "selectSK=Account_interest_0"))
   (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "1"))
   (rule "simplifySelectOfStore" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "castDel" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "12") (term "0,1,1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "12") (term "0,1,0,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "inEqSimp_homoInEq0" (formula "11") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0"))
   (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0,1,1,0"))
   (rule "add_literals" (formula "11") (term "1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "11") (term "0,0,1,1,0"))
   (rule "add_zero_left" (formula "11") (term "0,1,1,0"))
   (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
   (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "11") (term "1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "11") (term "0,0,1,0,0"))
   (rule "add_zero_left" (formula "11") (term "0,1,0,0"))
   (rule "inEqSimp_invertInEq1" (formula "11") (term "1,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,0"))
   (rule "times_zero_2" (formula "11") (term "1,1,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "0,1,1,0"))
   (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "inEqSimp_invertInEq0" (formula "11") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
   (rule "times_zero_2" (formula "11") (term "1,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
   (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "impRight" (formula "11"))
   (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=Account_withdraw_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
   (rule "close" (formula "13") (ifseqformula "3"))
)
(branch "Exceptional Post (calculateInterest)"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0") (ifseqformula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "7"))
   (rule "close" (formula "10") (ifseqformula "9"))
)
(branch "Pre (calculateInterest)"
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
   (rule "closeTrue" (formula "6"))
)
)

}
