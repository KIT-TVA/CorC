\javaSource "C:/Users/Markus/Documents/Studium/6Semester/BA/workspaceFork/BankAccount";
\include "helper.key";
\programVariables {
int newWithdraw;
int x;
boolean ret;
int x_old;
int withdraw7_oldVal;
int balance6_oldVal;
int DAILY_LIMIT2_oldVal;
int interest3_oldVal;
int OVERDRAFT_LIMIT5_oldVal;
Account self;
Heap heapAtPre;
}\problem {((self.withdraw 
>= withdraw7_oldVal & self.balance = balance6_oldVal - x) & self.<created>=TRUE & Account::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || x_old := x || OVERDRAFT_LIMIT5_oldVal := self.OVERDRAFT_LIMIT || interest3_oldVal := self.interest || DAILY_LIMIT2_oldVal := self.DAILY_LIMIT} \<{ret =   true;}\> ((( ret = FALSE ->
 (self.withdraw = withdraw7_oldVal &  self.balance = balance6_oldVal))
 & ( ret = TRUE ->
 (self.withdraw >= withdraw7_oldVal) &  self.balance = balance6_oldVal - x)) & x = x_old)}