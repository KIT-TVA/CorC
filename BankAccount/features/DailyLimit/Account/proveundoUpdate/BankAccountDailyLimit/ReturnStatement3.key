\javaSource "C:/Users/Markus/Documents/Studium/6Semester/BA/workspaceFork/BankAccount";
\include "helper.key";
\programVariables {
int newWithdraw;
int x;
boolean ret;
int x_old;
int withdraw6_oldVal;
int balance5_oldVal;
int DAILY_LIMIT2_oldVal;
int OVERDRAFT_LIMIT4_oldVal;
Account self;
Heap heapAtPre;
}\problem {((self.withdraw 
>= withdraw6_oldVal & self.balance = balance5_oldVal - x) & self.<created>=TRUE & Account::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || x_old := x || OVERDRAFT_LIMIT4_oldVal := self.OVERDRAFT_LIMIT || DAILY_LIMIT2_oldVal := self.DAILY_LIMIT} \<{ret =   true;}\> ((( ret = FALSE ->
 (self.withdraw = withdraw6_oldVal &  self.balance = balance5_oldVal))
 & ( ret = TRUE ->
 (self.withdraw >= withdraw6_oldVal) &  self.balance = balance5_oldVal - x)) & x = x_old)}