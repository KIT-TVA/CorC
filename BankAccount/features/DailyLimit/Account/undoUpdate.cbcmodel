<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="undoUpdate" proven="true" comment="" className="Account" methodName="undoUpdate">
    <statement name="statement" id="2a4f07db-13f1-402d-ae1b-22b08a0143a4">
      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="660aa7ec-64c4-4cf2-95de-4011ab2a7781">
        <firstStatement name="statement1" id="96b7761c-927c-436c-83e5-6903dc6ff90a">
          <refinement name="newWithdraw = withdraw;" proven="true" id="7878ddb3-9f21-47fe-868a-ca4be1ccddd8">
            <postCondition name="newWithdraw = withdraw">
              <modifiables>newWithdraw</modifiables>
            </postCondition>
            <preCondition name="true"/>
          </refinement>
          <postCondition name="newWithdraw = withdraw">
            <modifiables>newWithdraw</modifiables>
          </postCondition>
          <preCondition name="true"/>
        </firstStatement>
        <secondStatement name="statement2" id="e0c4d7af-3ae2-4c99-9381-7900dc83a858">
          <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="046e11e1-3ac7-4fc0-b489-ee6a23efaac9">
            <firstStatement name="statement1" id="bf1cb445-6258-4ddc-9db0-78900cd9beed">
              <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" id="3a7dd98d-c369-4bde-a06e-62c5ec2a63c6" preProve="true">
                <guards name="x &lt; 0"/>
                <guards name="x >= 0"/>
                <commands name="statement" id="8250931d-b112-43e3-be80-2986c5e7acee">
                  <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="7f4ad013-2bc1-44e9-8760-8b0c292121f6">
                    <firstStatement name="statement1" id="232e5f7f-355f-4ad7-9e76-df3807e6bb1a">
                      <refinement name="newWithdraw -= x;" proven="true" id="25ee2299-da38-4270-9c6d-637f7e52981f">
                        <postCondition name="newWithdraw = withdraw - x &amp; x&lt;0">
                          <modifiables>newWithdraw</modifiables>
                        </postCondition>
                        <preCondition name="(newWithdraw = withdraw) &amp; (x &lt; 0)">
                          <modifiables>newWithdraw</modifiables>
                        </preCondition>
                      </refinement>
                      <postCondition name="newWithdraw = withdraw - x &amp; x&lt;0">
                        <modifiables>newWithdraw</modifiables>
                      </postCondition>
                      <preCondition name="(newWithdraw = withdraw) &amp; (x &lt; 0)">
                        <modifiables>newWithdraw</modifiables>
                      </preCondition>
                    </firstStatement>
                    <secondStatement name="statement2" id="6b573e81-4f55-490b-9893-b2451ed3ebf7">
                      <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" id="59c1cc9e-acdc-4e87-a5b0-1d87a12b8c09" preProve="true">
                        <guards name="newWithdraw &lt; DAILY_LIMIT"/>
                        <guards name="newWithdraw >= DAILY_LIMIT"/>
                        <commands name="statement" id="68d43e15-cc1a-4ad7-bd72-e6ea06dec565">
                          <refinement xsi:type="cbcmodel:ReturnStatement" name="false;" proven="true" comment="returnStatement" id="b9742ae9-189f-42e4-97e9-bc05ea515048">
                            <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
                              <modifiables>newWithdraw</modifiables>
                              <modifiables>ret</modifiables>
                            </postCondition>
                            <preCondition name="(newWithdraw = withdraw - x &amp; x&lt;0) &amp; (newWithdraw &lt; DAILY_LIMIT)">
                              <modifiables>newWithdraw</modifiables>
                            </preCondition>
                          </refinement>
                          <postCondition name="newWithdraw >= withdraw">
                            <modifiables>newWithdraw</modifiables>
                            <modifiables>ret</modifiables>
                          </postCondition>
                          <preCondition name="(newWithdraw = withdraw - x &amp; x&lt;0) &amp; (newWithdraw &lt; DAILY_LIMIT)">
                            <modifiables>newWithdraw</modifiables>
                          </preCondition>
                        </commands>
                        <commands name="statement" id="107d1269-5841-42d0-9b78-e61e38ca437f">
                          <refinement xsi:type="cbcmodel:SkipStatement" name=";" proven="true" id="be1b7e26-3559-4cbd-8889-b2b0ef6f275f">
                            <postCondition name="newWithdraw >= withdraw">
                              <modifiables>newWithdraw</modifiables>
                              <modifiables>ret</modifiables>
                            </postCondition>
                            <preCondition name="(newWithdraw = withdraw - x &amp; x&lt;0) &amp; (newWithdraw >= DAILY_LIMIT)">
                              <modifiables>newWithdraw</modifiables>
                            </preCondition>
                          </refinement>
                          <postCondition name="newWithdraw >= withdraw">
                            <modifiables>newWithdraw</modifiables>
                          </postCondition>
                          <preCondition name="(newWithdraw = withdraw - x &amp; x&lt;0) &amp; (newWithdraw >= DAILY_LIMIT)">
                            <modifiables>newWithdraw</modifiables>
                          </preCondition>
                        </commands>
                      </refinement>
                      <postCondition name="newWithdraw >= withdraw">
                        <modifiables>newWithdraw</modifiables>
                        <modifiables>ret</modifiables>
                      </postCondition>
                      <preCondition name="newWithdraw = withdraw - x &amp; x&lt;0">
                        <modifiables>newWithdraw</modifiables>
                      </preCondition>
                    </secondStatement>
                    <intermediateCondition name="newWithdraw = withdraw - x &amp; x&lt;0">
                      <modifiables>newWithdraw</modifiables>
                    </intermediateCondition>
                  </refinement>
                  <postCondition name="newWithdraw >= withdraw">
                    <modifiables>newWithdraw</modifiables>
                    <modifiables>ret</modifiables>
                  </postCondition>
                  <preCondition name="(newWithdraw = withdraw) &amp; (x &lt; 0)">
                    <modifiables>newWithdraw</modifiables>
                  </preCondition>
                </commands>
                <commands name="statement" id="8e8c3899-554d-4d43-86bd-1ad40a2071ec">
                  <refinement xsi:type="cbcmodel:SkipStatement" name=";" proven="true" id="1f1f085c-82a7-4652-ab9e-ef5336b590ee">
                    <postCondition name="newWithdraw >= withdraw">
                      <modifiables>newWithdraw</modifiables>
                    </postCondition>
                    <preCondition name="(newWithdraw = withdraw) &amp; (x >= 0)">
                      <modifiables>newWithdraw</modifiables>
                    </preCondition>
                  </refinement>
                  <postCondition name="newWithdraw >= withdraw">
                    <modifiables>newWithdraw</modifiables>
                  </postCondition>
                  <preCondition name="(newWithdraw = withdraw) &amp; (x >= 0)">
                    <modifiables>newWithdraw</modifiables>
                  </preCondition>
                </commands>
              </refinement>
              <postCondition name="newWithdraw >= withdraw">
                <modifiables>newWithdraw</modifiables>
                <modifiables>ret</modifiables>
              </postCondition>
              <preCondition name="newWithdraw = withdraw">
                <modifiables>newWithdraw</modifiables>
              </preCondition>
            </firstStatement>
            <secondStatement name="statement2" id="850caee2-8030-4d06-b941-fbcbe3f0d3d2">
              <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="a52f358a-950d-4262-b209-5e743e84bf1b">
                <firstStatement name="statement1" id="782481a8-79e5-47ad-88ec-1639c05c3551">
                  <refinement xsi:type="cbcmodel:OriginalStatement" name="ret =&#xD;&#xA;original(x);" proven="true" id="10ed43de-84be-4111-a7fc-6100eb683283">
                    <postCondition name="newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)">
                      <modifiables>newWithdraw</modifiables>
                      <modifiables>ret</modifiables>
                    </postCondition>
                    <preCondition name="newWithdraw >= withdraw">
                      <modifiables>newWithdraw</modifiables>
                      <modifiables>ret</modifiables>
                    </preCondition>
                  </refinement>
                  <postCondition name="newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)">
                    <modifiables>newWithdraw</modifiables>
                    <modifiables>ret</modifiables>
                  </postCondition>
                  <preCondition name="newWithdraw >= withdraw">
                    <modifiables>newWithdraw</modifiables>
                    <modifiables>ret</modifiables>
                  </preCondition>
                </firstStatement>
                <secondStatement name="statement2" id="b19ecc50-3e5a-4059-9170-d57fe4e78d60">
                  <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" id="3009ca56-e1e6-47b7-866c-d00ea679ad02" preProve="true">
                    <guards name="ret = FALSE"/>
                    <guards name="ret = TRUE"/>
                    <commands name="statement" id="272ce187-203a-4127-912f-49c57e5870a2">
                      <refinement xsi:type="cbcmodel:ReturnStatement" name="false;" proven="true" comment="returnStatement" id="02cfe055-979b-4dd5-969d-5ebf178c2401">
                        <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
                          <modifiables>newWithdraw</modifiables>
                          <modifiables>ret</modifiables>
                          <modifiables>withdraw</modifiables>
                        </postCondition>
                        <preCondition name="(newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)) &amp; (ret = FALSE)">
                          <modifiables>newWithdraw</modifiables>
                          <modifiables>ret</modifiables>
                        </preCondition>
                      </refinement>
                      <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
                        <modifiables>newWithdraw</modifiables>
                        <modifiables>ret</modifiables>
                        <modifiables>withdraw</modifiables>
                      </postCondition>
                      <preCondition name="(newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)) &amp; (ret = FALSE)">
                        <modifiables>newWithdraw</modifiables>
                        <modifiables>ret</modifiables>
                      </preCondition>
                    </commands>
                    <commands name="statement" id="32362335-51d2-401f-ba2b-9771c0ab0bbb">
                      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true" id="fe93a1f5-0c29-405d-8507-ff34362d006f">
                        <firstStatement name="statement1" id="d59ad951-81c7-4afe-9e17-fda9e1c9dfe0">
                          <refinement name="withdraw = newWithdraw;" proven="true" id="5195404d-66cf-4b5f-9f93-191997dc91aa">
                            <postCondition name="withdraw &#xD;&#xA;>= \old(withdraw) &amp; balance = \old(balance) - x">
                              <modifiables>newWithdraw</modifiables>
                              <modifiables>ret</modifiables>
                              <modifiables>withdraw</modifiables>
                            </postCondition>
                            <preCondition name="(newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)) &amp; (ret = TRUE)">
                              <modifiables>newWithdraw</modifiables>
                              <modifiables>ret</modifiables>
                            </preCondition>
                          </refinement>
                          <postCondition name="withdraw &#xD;&#xA;>= \old(withdraw) &amp; balance = \old(balance) - x">
                            <modifiables>newWithdraw</modifiables>
                            <modifiables>ret</modifiables>
                            <modifiables>withdraw</modifiables>
                          </postCondition>
                          <preCondition name="(newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)) &amp; (ret = TRUE)">
                            <modifiables>newWithdraw</modifiables>
                            <modifiables>ret</modifiables>
                          </preCondition>
                        </firstStatement>
                        <secondStatement name="statement2" id="e4b0f881-1ca5-4b81-936b-8ed7641de77b">
                          <refinement xsi:type="cbcmodel:ReturnStatement" name="  true;" proven="true" comment="returnStatement" id="fd878344-ab33-4f80-b456-35b9a3b0fea2">
                            <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
                              <modifiables>newWithdraw</modifiables>
                              <modifiables>ret</modifiables>
                              <modifiables>withdraw</modifiables>
                            </postCondition>
                            <preCondition name="withdraw &#xD;&#xA;>= \old(withdraw) &amp; balance = \old(balance) - x">
                              <modifiables>newWithdraw</modifiables>
                              <modifiables>ret</modifiables>
                              <modifiables>withdraw</modifiables>
                            </preCondition>
                          </refinement>
                          <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
                            <modifiables>newWithdraw</modifiables>
                            <modifiables>ret</modifiables>
                            <modifiables>withdraw</modifiables>
                          </postCondition>
                          <preCondition name="withdraw &#xD;&#xA;>= \old(withdraw) &amp; balance = \old(balance) - x">
                            <modifiables>newWithdraw</modifiables>
                            <modifiables>ret</modifiables>
                            <modifiables>withdraw</modifiables>
                          </preCondition>
                        </secondStatement>
                        <intermediateCondition name="withdraw &#xD;&#xA;>= \old(withdraw) &amp; balance = \old(balance) - x">
                          <modifiables>newWithdraw</modifiables>
                          <modifiables>ret</modifiables>
                          <modifiables>withdraw</modifiables>
                        </intermediateCondition>
                      </refinement>
                      <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
                        <modifiables>newWithdraw</modifiables>
                        <modifiables>ret</modifiables>
                        <modifiables>withdraw</modifiables>
                      </postCondition>
                      <preCondition name="(newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)) &amp; (ret = TRUE)">
                        <modifiables>newWithdraw</modifiables>
                        <modifiables>ret</modifiables>
                      </preCondition>
                    </commands>
                  </refinement>
                  <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
                    <modifiables>newWithdraw</modifiables>
                    <modifiables>ret</modifiables>
                    <modifiables>withdraw</modifiables>
                  </postCondition>
                  <preCondition name="newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)">
                    <modifiables>newWithdraw</modifiables>
                    <modifiables>ret</modifiables>
                  </preCondition>
                </secondStatement>
                <intermediateCondition name="newWithdraw >= withdraw &amp; (ret = TRUE -> \old(balance) - x = balance) &amp; (ret = FALSE -> \old(balance) = balance)">
                  <modifiables>newWithdraw</modifiables>
                  <modifiables>ret</modifiables>
                </intermediateCondition>
              </refinement>
              <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
                <modifiables>newWithdraw</modifiables>
                <modifiables>ret</modifiables>
                <modifiables>withdraw</modifiables>
              </postCondition>
              <preCondition name="newWithdraw >= withdraw">
                <modifiables>newWithdraw</modifiables>
                <modifiables>ret</modifiables>
              </preCondition>
            </secondStatement>
            <intermediateCondition name="newWithdraw >= withdraw">
              <modifiables>newWithdraw</modifiables>
              <modifiables>ret</modifiables>
            </intermediateCondition>
          </refinement>
          <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
            <modifiables>newWithdraw</modifiables>
            <modifiables>ret</modifiables>
            <modifiables>withdraw</modifiables>
          </postCondition>
          <preCondition name="newWithdraw = withdraw">
            <modifiables>newWithdraw</modifiables>
          </preCondition>
        </secondStatement>
        <intermediateCondition name="newWithdraw = withdraw">
          <modifiables>newWithdraw</modifiables>
        </intermediateCondition>
      </refinement>
      <postCondition name="(\result = FALSE ->&#xD;&#xA; (withdraw = \old(withdraw) &amp;  balance = \old(balance)))&#xD;&#xA; &amp; (\result = TRUE ->&#xD;&#xA; (withdraw >= \old(withdraw)) &amp;  balance = \old(balance) - x)">
        <modifiables>newWithdraw</modifiables>
        <modifiables>ret</modifiables>
        <modifiables>withdraw</modifiables>
      </postCondition>
      <preCondition name="true"/>
    </statement>
    <preCondition name="pre"/>
    <postCondition name="post"/>
    <methodObj href="Account.cbcclass#//@methods.1"/>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="int newWithdraw"/>
  </cbcmodel:JavaVariables>
</xmi:XMI>
