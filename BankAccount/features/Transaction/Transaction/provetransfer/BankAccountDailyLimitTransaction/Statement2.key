\javaSource "C:/Users/Markus/Documents/Studium/6Semester/BA/workspaceFork/BankAccount";
\include "helper.key";
\programVariables {
int amount;
boolean ret;
int amount_old;
Account destination3_oldVal;
int balance5_oldVal;
Account source4_oldVal;
Transaction self;
Heap heapAtPre;
}\problem {((ret = TRUE) & self.source.<inv> & self.destination.<inv> & Account::exactInstance(self.source) = TRUE & self.source.<created> = TRUE & self.source!= null & Account::exactInstance(self.destination) = TRUE & self.destination.<created> = TRUE & self.destination!= null & Account::exactInstance(self.source) = TRUE & self.source.<created> = TRUE & self.source!= null & Account::exactInstance(self.destination) = TRUE & self.destination.<created> = TRUE & self.destination!= null & self.<created>=TRUE & Transaction::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || amount_old := amount || destination3_oldVal := self.destination || balance5_oldVal := self.destination.balance || source4_oldVal := self.source} \<{ret = self.destination.update(amount);}\> ((ret = TRUE -> self.destination.balance = balance5_oldVal + amount & ret = FALSE -> self.destination.balance = balance5_oldVal) & amount = amount_old)}