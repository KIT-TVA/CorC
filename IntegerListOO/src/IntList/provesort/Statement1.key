\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Sep 26 14:55:49 CEST 2022
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/mko/Documents/ISF/0_corc2.0/runtime-EclipseApplication/IntegerListOO";\include "helper.key";\programVariables {int tmp; int j; int i; int tmp_old; int j_old; int[] data1_oldVal; IntList self; Heap heapAtPre;}\problem {
       int[]::select(heap, self, IntList::$data)
     = data1_oldVal
   & !int[]::select(heap, self, IntList::$data) = null
   & geq(i, Z(0(#)))
   & leq(i,
         length(int[]::select(heap,
                              self,
                              IntList::$data)))
   & leq(j,
         sub(length(int[]::select(heap,
                                  self,
                                  IntList::$data)),
             Z(2(#))))
   & geq(j, sub(i, Z(1(#))))
   &   int[]::exactInstance(int[]::select(heap,
                                          self,
                                          IntList::$data))
     = TRUE
   &   boolean::select(heap,
                       int[]::select(heap,
                                     self,
                                     IntList::$data),
                       java.lang.Object::<created>)
     = TRUE
   & !int[]::select(heap, self, IntList::$data) = null
   &   boolean::select(heap,
                       data1_oldVal,
                       java.lang.Object::<created>)
     = TRUE
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & IntList::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap || tmp_old:=tmp || j_old:=j}
     \<{
         i=0;
       }\> (i = Z(0(#)) & tmp = tmp_old & j = j_old)

}

\proof {
(keyLog "0" (keyUser "mko" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "59")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "15") (term "1,0,0,1"))
(rule "eqSymm" (formula "15") (term "1,0,1"))
(rule "polySimp_elimSub" (formula "5") (term "1"))
(rule "mul_literals" (formula "5") (term "1,1"))
(rule "polySimp_elimSub" (formula "4") (term "1"))
(rule "mul_literals" (formula "4") (term "1,1"))
(rule "polySimp_addComm0" (formula "5") (term "1"))
(rule "polySimp_addComm0" (formula "4") (term "1"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "inEqSimp_homoInEq0" (formula "4"))
(rule "polySimp_addComm1" (formula "4") (term "0"))
(rule "assignment" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
(rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
(rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
(rule "applyEq" (formula "7") (term "1,0") (ifseqformula "1"))
(rule "inEqSimp_sepPosMonomial1" (formula "4"))
(rule "polySimp_mulComm0" (formula "4") (term "1"))
(rule "polySimp_rightDist" (formula "4") (term "1"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
(rule "mul_literals" (formula "4") (term "0,1"))
(rule "polySimp_elimOne" (formula "4") (term "1,1"))
(rule "emptyModality" (formula "14") (term "1"))
(builtin "One Step Simplification" (formula "14"))
(rule "closeTrue" (formula "14"))
)

}
