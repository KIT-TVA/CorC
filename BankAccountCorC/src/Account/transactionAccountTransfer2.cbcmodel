<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cbcmodel="http://www.example.org/cbcmodel">
  <cbcmodel:CbCFormula name="transactionAccountTransfer2" proven="true" className="Account" methodName="transactionAccountTransfer2">
    <statement name="statement" proven="true">
      <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" preProve="true">
        <guards name="Account.lock(source, destination) = FALSE"/>
        <guards name="Account.lock(source, destination) = TRUE"/>
        <commands name="statement1">
          <refinement xsi:type="cbcmodel:ReturnStatement" name="false;" proven="true" comment="returnStatement">
            <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
            <preCondition name="modifiable(\nothing);(old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance) &amp; (Account.lock(source, destination) = FALSE)"/>
          </refinement>
          <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
          <preCondition name="modifiable(\nothing);(old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance) &amp; (Account.lock(source, destination) = FALSE)"/>
        </commands>
        <commands name="statement">
          <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" preProve="true">
            <guards name="amount &lt;= 0"/>
            <guards name="amount > 0"/>
            <commands name="statement1">
              <refinement xsi:type="cbcmodel:ReturnStatement" name="false;" proven="true" comment="returnStatement">
                <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                <preCondition name="modifiable(\everything);((old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance) &amp; (Account.lock(source, destination) = TRUE)) &amp; (amount &lt;= 0)"/>
              </refinement>
              <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
              <preCondition name="modifiable(\everything);((old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance) &amp; (Account.lock(source, destination) = TRUE)) &amp; (amount &lt;= 0)"/>
            </commands>
            <commands name="statement">
              <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true">
                <firstStatement name="statement1">
                  <refinement name="tmp = source.update(amount * -1);" proven="true">
                    <postCondition name="old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0"/>
                    <preCondition name="modifiable(\everything);((old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance) &amp; (Account.lock(source, destination) = TRUE)) &amp; (amount > 0)"/>
                  </refinement>
                  <postCondition name="old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0"/>
                  <preCondition name="modifiable(\everything);((old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance) &amp; (Account.lock(source, destination) = TRUE)) &amp; (amount > 0)"/>
                </firstStatement>
                <secondStatement name="statement2">
                  <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" preProve="true">
                    <guards name="FALSE = tmp"/>
                    <guards name="TRUE = tmp"/>
                    <commands name="statement1">
                      <refinement xsi:type="cbcmodel:ReturnStatement" name="false;" proven="true" comment="returnStatement">
                        <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                        <preCondition name="modifiable(\nothing);(old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0) &amp; (FALSE = tmp)"/>
                      </refinement>
                      <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                      <preCondition name="modifiable(\nothing);(old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0) &amp; (FALSE = tmp)"/>
                    </commands>
                    <commands name="statement">
                      <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true">
                        <firstStatement name="statement1">
                          <refinement name="tmp2 = destination.update(amount);" proven="true">
                            <postCondition name="(tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0"/>
                            <preCondition name="modifiable(\nothing);(old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0) &amp; (TRUE = tmp)"/>
                          </refinement>
                          <postCondition name="(tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0"/>
                          <preCondition name="modifiable(\nothing);(old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0) &amp; (TRUE = tmp)"/>
                        </firstStatement>
                        <secondStatement name="statement2">
                          <refinement xsi:type="cbcmodel:SelectionStatement" name="selectionStatement" proven="true" preProve="true">
                            <guards name="FALSE = tmp2"/>
                            <guards name="TRUE = tmp2"/>
                            <commands name="statement1">
                              <refinement xsi:type="cbcmodel:CompositionStatement" name="compositionStatement" proven="true">
                                <firstStatement name="statement1">
                                  <refinement name="source.undoUpdate(amount * -1);" proven="true">
                                    <postCondition name="old_destination_balance =&#xD;&#xA; destination.balance &amp;&#xD;&#xA; old_source_balance =&#xD;&#xA; source.balance"/>
                                    <preCondition name="modifiable(\nothing);((tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0) &amp; (FALSE = tmp2)"/>
                                  </refinement>
                                  <postCondition name="old_destination_balance =&#xD;&#xA; destination.balance &amp;&#xD;&#xA; old_source_balance =&#xD;&#xA; source.balance"/>
                                  <preCondition name="modifiable(\nothing);((tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0) &amp; (FALSE = tmp2)"/>
                                </firstStatement>
                                <secondStatement name="statement2">
                                  <refinement xsi:type="cbcmodel:ReturnStatement" name="false;" proven="true">
                                    <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                                    <preCondition name="old_destination_balance =&#xD;&#xA; destination.balance &amp;&#xD;&#xA; old_source_balance =&#xD;&#xA; source.balance"/>
                                  </refinement>
                                  <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                                  <preCondition name="old_destination_balance =&#xD;&#xA; destination.balance &amp;&#xD;&#xA; old_source_balance =&#xD;&#xA; source.balance"/>
                                </secondStatement>
                                <intermediateCondition name="old_destination_balance =&#xD;&#xA; destination.balance &amp;&#xD;&#xA; old_source_balance =&#xD;&#xA; source.balance"/>
                              </refinement>
                              <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                              <preCondition name="modifiable(\nothing);((tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0) &amp; (FALSE = tmp2)"/>
                            </commands>
                            <commands name="statement">
                              <refinement xsi:type="cbcmodel:ReturnStatement" name="true;" proven="true" comment="returnStatement">
                                <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                                <preCondition name="modifiable(\nothing);((tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0) &amp; (TRUE = tmp2)"/>
                              </refinement>
                              <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                              <preCondition name="modifiable(\nothing);((tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0) &amp; (TRUE = tmp2)"/>
                            </commands>
                          </refinement>
                          <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                          <preCondition name="(tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0"/>
                        </secondStatement>
                        <intermediateCondition name="(tmp2 = TRUE -> &#xD;&#xA;old_destination_balance + amount =&#xD;&#xA; destination.balance) &amp;&#xD;&#xA; (tmp2 = FALSE -> old_destination_balance =&#xD;&#xA; destination.balance)&#xD;&#xA;&amp; (tmp = TRUE -> &#xD;&#xA;old_source_balance - amount =&#xD;&#xA; source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp;&#xD;&#xA; (tmp = FALSE -> old_source_balance =&#xD;&#xA; source.balance) &amp; tmp = TRUE&#xD;&#xA;&amp; amount > 0"/>
                      </refinement>
                      <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                      <preCondition name="modifiable(\nothing);(old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0) &amp; (TRUE = tmp)"/>
                    </commands>
                  </refinement>
                  <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
                  <preCondition name="old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0"/>
                </secondStatement>
                <intermediateCondition name="old_destination_balance = destination.balance&#xD;&#xA;&amp; (tmp = TRUE -> old_source_balance - amount = source.balance &amp; source.balance >= source.OVERDRAFT_LIMIT) &amp; (tmp = FALSE -> old_source_balance = source.balance)&#xD;&#xA;&amp; amount > 0"/>
              </refinement>
              <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
              <preCondition name="modifiable(\everything);((old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance) &amp; (Account.lock(source, destination) = TRUE)) &amp; (amount > 0)"/>
            </commands>
          </refinement>
          <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
          <preCondition name="modifiable(\nothing);(old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance) &amp; (Account.lock(source, destination) = TRUE)"/>
        </commands>
      </refinement>
      <postCondition name="(\result = TRUE ->&#xD;&#xA; (old_destination_balance + amount = destination.balance)) &amp;&#xD;&#xA; (\result = TRUE ->&#xD;&#xA; (old_source_balance - amount = source.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_destination_balance = destination.balance))&#xD;&#xA; &amp; (\result = FALSE ->&#xD;&#xA; (old_source_balance = source.balance))"/>
      <preCondition name="old_destination_balance = destination.balance&#xD;&#xA;&amp; old_source_balance = source.balance"/>
    </statement>
    <preCondition name=" true"/>
    <postCondition name=" (result = true -> (old_destination.balance + amount = destination.balance)) &amp; (result = true -> (old_source.balance - amount = source.balance)) &#x9; &#x9;&amp; (result = false -> (old_destination.balance = destination.balance)) &amp; (result = false -> (old_source.balance = source.balance))"/>
    <methodObj href="Account.cbcclass#//@methods.14"/>
  </cbcmodel:CbCFormula>
  <cbcmodel:JavaVariables>
    <variables name="Account source" kind="PARAM"/>
    <variables name="Account destination" kind="PARAM"/>
    <variables name="int amount" kind="PARAM"/>
    <variables name="boolean result" kind="RETURN"/>
    <variables name="int old_destination_balance"/>
    <variables name="int old_source_balance"/>
    <variables name="boolean result"/>
    <variables name="boolean tmp"/>
    <variables name="boolean tmp2"/>
    <fields href="Account.cbcclass#//@fields.0"/>
    <fields href="Account.cbcclass#//@fields.1"/>
    <fields href="Account.cbcclass#//@fields.2"/>
    <fields href="Account.cbcclass#//@fields.3"/>
    <fields href="Account.cbcclass#//@fields.4"/>
    <fields href="Account.cbcclass#//@fields.5"/>
    <fields href="Account.cbcclass#//@fields.6"/>
  </cbcmodel:JavaVariables>
  <cbcmodel:GlobalConditions>
    <conditions name="source != destination"/>
    <conditions name="Account source non-null"/>
    <conditions name="Account destination non-null"/>
  </cbcmodel:GlobalConditions>
</xmi:XMI>
