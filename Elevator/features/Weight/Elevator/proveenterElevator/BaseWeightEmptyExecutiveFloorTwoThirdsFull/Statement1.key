\javaSource "C:/Users/Markus/Documents/Studium/6Semester/BA/workspaceFork/Elevator";
\include "helper.key";
\programVariables {
Person p;
Person p_old;
int maximumWeight2_oldVal;
boolean[] floorButtons3_oldVal;
Elevator self;
Heap heapAtPre;
}\problem {((self.persons != null &
self.persons.elements != null & 
 self.floorButtons != null & 
p != null & 
p.getDestination() >= 0 & p.getDestination() < length(self.floorButtons) 
 & p.getWeight() >= 0) & Person::exactInstance(p) = TRUE & p.<created> = TRUE & p != null & boolean[]::exactInstance(self.floorButtons) = TRUE & self.floorButtons.<created> = TRUE & self.floorButtons!= null & self.<created>=TRUE & Elevator::exactInstance(self)=TRUE & !self = null & self.<inv> & wellFormed(heap)) -> {heapAtPre := heap || p_old := p || maximumWeight2_oldVal := self.maximumWeight || floorButtons3_oldVal := self.floorButtons} \<{self.original_enterElevator(p);}\> ((self.persons != null &
self.persons.elements != null & 
 self.floorButtons != null & 
p != null & 
p.getDestination() >= 0 & p.getDestination() < length(self.floorButtons) 
 & p.weight >= 0
& self.persons.contains(p) = TRUE 
& self.floorButtons[p.getDestination()] = TRUE) & p = p_old)}