\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Aug 25 13:19:28 CEST 2022
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/mko/Documents/ISF/0_feat-CorC2.0modifiable/corC/casestudies/Elevator";\include "helper.key";\programVariables {boolean result; Person p; boolean ret; Person p_old; boolean ret_old; int weight1_oldVal; Elevator self; Heap heapAtPre;}\problem {
     result = FALSE
   &   boolean::select(heap,
                       self,
                       Elevator::$old_contains)
     = ArrayList::contains(heap,
                           ArrayList::select(heap,
                                             self,
                                             Elevator::$persons),
                           p)
   &   boolean::select(heap,
                       self,
                       Elevator::$old_contains)
     = TRUE
   & !  Person[]::select(heap,
                         ArrayList::select(heap,
                                           self,
                                           Elevator::$persons),
                         ArrayList::$elements)
      = null
   & geq(int::select(heap, self, Elevator::$weight),
         Z(0(#)))
   &   ArrayList::exactInstance(ArrayList::select(heap,
                                                  self,
                                                  Elevator::$persons))
     = TRUE
   &   boolean::select(heap,
                       ArrayList::select(heap,
                                         self,
                                         Elevator::$persons),
                       java.lang.Object::<created>)
     = TRUE
   & !  ArrayList::select(heap,
                          self,
                          Elevator::$persons)
      = null
   &   Environment::exactInstance(Environment::select(heap,
                                                      self,
                                                      Elevator::$env))
     = TRUE
   &   boolean::select(heap,
                       Environment::select(heap,
                                           self,
                                           Elevator::$env),
                       java.lang.Object::<created>)
     = TRUE
   & !  Environment::select(heap, self, Elevator::$env)
      = null
   &   boolean[]::exactInstance(boolean[]::select(heap,
                                                  self,
                                                  Elevator::$floorButtons))
     = TRUE
   &   boolean::select(heap,
                       boolean[]::select(heap,
                                         self,
                                         Elevator::$floorButtons),
                       java.lang.Object::<created>)
     = TRUE
   & !  boolean[]::select(heap,
                          self,
                          Elevator::$floorButtons)
      = null
   & Person::exactInstance(p) = TRUE
   &   boolean::select(heap,
                       p,
                       java.lang.Object::<created>)
     = TRUE
   & !p = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & Elevator::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap
    || p_old:=p
    || ret_old:=ret
    || weight1_oldVal:=int::select(heap,
                                   self,
                                   Elevator::$weight)}
     \<{
         self.original_leaveElevator(p);
         self.weight=self.weight-p.getWeight();
         result=true;
       }\> (  (     (     boolean::select(heap,
                                          self,
                                          Elevator::$old_contains)
                        = TRUE
                     ->   result = TRUE
                        &   Person::isDestinationReached(heap,
                                                         p)
                          = TRUE
                        &   ArrayList::contains(heap,
                                                ArrayList::select(heap,
                                                                  self,
                                                                  Elevator::$persons),
                                                p)
                          = FALSE
                        &   int::select(heap,
                                        self,
                                        Elevator::$weight)
                          = sub(weight1_oldVal,
                                Person::getWeight(heap,
                                                  p)))
                  &   boolean::select(heap,
                                      self,
                                      Elevator::$old_contains)
                    = FALSE
               -> result = FALSE)
            & p = p_old
            & ret = ret_old)

}

\proof {
(keyLog "0" (keyUser "mko" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "1127")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "eqSymm" (formula "23") (term "1,0,0,1"))
(rule "eqSymm" (formula "23") (term "1,0,1"))
(rule "eqSymm" (formula "1"))
(rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,0,0,0,1"))
(rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
(builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_original_leaveElevator,result_0,exc,heapAfter_original_leaveElevator,anon_heap_original_leaveElevator") (contract "Elevator[Elevator::original_leaveElevator(Person)].JML normal_behavior operation contract.0"))
(branch "Post (original_leaveElevator)"
   (builtin "One Step Simplification" (formula "17"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "eval_order_access4" (formula "28") (term "1") (inst "#v1=x") (inst "#v0=e"))
   (rule "variableDeclarationAssign" (formula "28") (term "1"))
   (rule "variableDeclaration" (formula "28") (term "1") (newnames "e"))
   (rule "assignment" (formula "28") (term "1"))
   (builtin "One Step Simplification" (formula "28"))
   (rule "variableDeclarationAssign" (formula "28") (term "1"))
   (rule "variableDeclaration" (formula "28") (term "1") (newnames "x"))
   (rule "pullOutSelect" (formula "19") (term "1,0,0,1,1,0,0") (inst "selectSK=Elevator_persons_0"))
   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")) (ifInst ""  (formula "12")))
   (rule "elementOfSingleton" (formula "19") (term "0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "applyEqReverse" (formula "20") (term "1,0,0,1,1,0,0") (ifseqformula "19"))
   (rule "hideAuxiliaryEq" (formula "19"))
   (rule "pullOutSelect" (formula "19") (term "0,0,0,0") (inst "selectSK=Elevator_old_contains_0"))
   (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "19"))
   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")) (ifInst ""  (formula "12")))
   (rule "elementOfSingleton" (formula "19") (term "0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "applyEqReverse" (formula "20") (term "0,0,1,0") (ifseqformula "19"))
   (rule "applyEqReverse" (formula "20") (term "0,0,0,0") (ifseqformula "19"))
   (rule "hideAuxiliaryEq" (formula "19"))
   (rule "compound_subtraction_2" (formula "28") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "28") (term "1"))
   (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_1"))
   (rule "assignment_read_attribute" (formula "28"))
   (branch "Normal Execution (self != null)"
      (builtin "One Step Simplification" (formula "28"))
      (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=Elevator_weight_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_2"))
      (builtin "Use Operation Contract" (formula "28") (newnames "heapBefore_getWeight,result_1,exc_0,heapAfter_getWeight,anon_heap_getWeight") (contract "Person[Person::getWeight()].JML normal_behavior operation contract.0"))
      (branch "Post (getWeight)"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "eqSymm" (formula "24"))
         (rule "assignment" (formula "33") (term "1"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=Person_weight_0"))
         (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "17"))
         (rule "eqSymm" (formula "25"))
         (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
         (rule "hideAuxiliaryEq" (formula "25"))
         (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=Person_weight_1"))
         (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")) (ifInst ""  (formula "11")))
         (rule "eqSymm" (formula "25"))
         (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
         (rule "hideAuxiliaryEq" (formula "25"))
         (rule "elementOfSingleton" (formula "24") (term "0,0"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "assignmentSubtractionInt" (formula "33") (term "1"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "translateJavaSubInt" (formula "33") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "33") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "0,1,0"))
         (rule "assignment_write_attribute" (formula "33"))
         (branch "Normal Execution (e != null)"
            (builtin "One Step Simplification" (formula "33"))
            (rule "assignment" (formula "33") (term "1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "emptyModality" (formula "33") (term "1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "notRight" (formula "33"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "dismissNonSelectedField" (formula "26") (term "0"))
            (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=Elevator_old_contains_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
            (rule "replaceKnownSelect_taclet0_2" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "1") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "26")))
            (rule "notLeft" (formula "19"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "1,0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
            (rule "true_left" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "31")))
            (rule "true_left" (formula "7"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "32")))
            (rule "true_left" (formula "8"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (builtin "Evaluate Query" (formula "2") (term "0") (newnames "o_1,callee,queryResult_1,res_contains_1"))
            (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_0000_12" (formula "3") (term "0"))
            (rule "notLeft" (formula "1"))
            (rule "eqSymm" (formula "26") (term "0,0,1"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "queryResult_1"))
            (rule "applyEqRigid" (formula "26") (term "0,0,0,1") (ifseqformula "2"))
            (rule "eqSymm" (formula "26") (term "0,0,1"))
            (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_contains_1,result_4,exc_3,heapAfter_contains_1,anon_heap_contains_1") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
            (branch "Post (contains)"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "32")))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "notLeft" (formula "29"))
               (rule "assignment" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "apply_eq_boolean" (formula "30") (term "0,1,0") (ifseqformula "29"))
               (rule "methodCallEmpty" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "emptyModality" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "closeTrue" (formula "30"))
            )
            (branch "Exceptional Post (contains)"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "32")))
               (rule "andLeft" (formula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "30"))
               (rule "notLeft" (formula "28"))
               (rule "close" (formula "31") (ifseqformula "30"))
            )
            (branch "Pre (contains)"
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")) (ifInst ""  (formula "34")) (ifInst ""  (formula "30")) (ifInst ""  (formula "16")) (ifInst ""  (formula "34")) (ifInst ""  (formula "12")))
               (rule "closeTrue" (formula "26"))
            )
            (branch "Null reference (callee = null)"
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "31")))
               (rule "closeTrue" (formula "26"))
            )
         )
         (branch "Null Reference (e = null)"
            (rule "false_right" (formula "34"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (getWeight)"
         (builtin "One Step Simplification" (formula "30"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1,0") (ifseqformula "17"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "25"))
         (rule "notLeft" (formula "23"))
         (rule "close" (formula "27") (ifseqformula "26"))
      )
      (branch "Pre (getWeight)"
         (builtin "One Step Simplification" (formula "28"))
         (rule "wellFormedAnonEQ" (formula "28") (term "1") (ifseqformula "17"))
         (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "16")))
         (rule "cut_direct" (formula "19") (term "0,1"))
         (branch "CUT: result_0 = TRUE TRUE"
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
            (rule "notLeft" (formula "20"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
            (rule "true_left" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "9")))
            (rule "true_left" (formula "7"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "true_left" (formula "1"))
            (builtin "Evaluate Query" (formula "2") (term "0") (newnames "o_0,callee,queryResult_0,res_contains_0"))
            (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_0200_6" (formula "3") (term "0"))
            (rule "notLeft" (formula "1"))
            (rule "eqSymm" (formula "22") (term "0,0,1"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "queryResult_0"))
            (rule "applyEqRigid" (formula "22") (term "0,0,0,1") (ifseqformula "2"))
            (rule "eqSymm" (formula "22") (term "0,0,1"))
            (builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_contains_0,result_3,exc_2,heapAfter_contains_0,anon_heap_contains_0") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
            (branch "Post (contains)"
               (builtin "One Step Simplification" (formula "24"))
               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "27")))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "25"))
               (rule "notLeft" (formula "25"))
               (rule "assignment" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "apply_eq_boolean" (formula "26") (term "0,1,0") (ifseqformula "25"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "emptyModality" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "closeTrue" (formula "26"))
            )
            (branch "Exceptional Post (contains)"
               (builtin "One Step Simplification" (formula "24"))
               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "27")))
               (rule "andLeft" (formula "23"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1,0") (ifseqformula "23"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "24"))
               (rule "close" (formula "27") (ifseqformula "26"))
            )
            (branch "Pre (contains)"
               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "25")) (ifInst ""  (formula "16")) (ifInst ""  (formula "29")) (ifInst ""  (formula "12")))
               (rule "closeTrue" (formula "22"))
            )
            (branch "Null reference (callee = null)"
               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "26")))
               (rule "closeTrue" (formula "22"))
            )
         )
         (branch "CUT: result_0 = TRUE FALSE"
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")))
            (rule "true_left" (formula "19"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "15"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "7")))
            (rule "true_left" (formula "5"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "11")))
            (rule "true_left" (formula "9"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "16"))
            (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "9")))
            (rule "true_left" (formula "8"))
            (builtin "Evaluate Query" (formula "2") (term "0") (newnames "o,callee,queryResult,res_contains"))
            (rule "replaceKnownQuery_ArrayList_contains(heap,ArrayList_select(heap,self,Elevator_persons),p)_1200_6" (formula "3") (term "0"))
            (rule "notLeft" (formula "1"))
            (rule "eqSymm" (formula "21") (term "0,0,1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "queryResult"))
            (rule "applyEqRigid" (formula "21") (term "0,0,0,1") (ifseqformula "2"))
            (rule "eqSymm" (formula "21") (term "0,0,1"))
            (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_contains,result_2,exc_1,heapAfter_contains,anon_heap_contains") (contract "ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.0#ArrayList[ArrayList::contains(Person)].JML normal_behavior operation contract.1"))
            (branch "Post (contains)"
               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "26")))
               (builtin "One Step Simplification" (formula "23"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "24"))
               (rule "assignment" (formula "25") (term "1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "apply_eq_boolean" (formula "25") (term "0,1,0") (ifseqformula "24"))
               (rule "methodCallEmpty" (formula "25") (term "1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "emptyModality" (formula "25") (term "1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "closeTrue" (formula "25"))
            )
            (branch "Exceptional Post (contains)"
               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "26")))
               (builtin "One Step Simplification" (formula "23"))
               (rule "andLeft" (formula "22"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "22"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "25"))
               (rule "notLeft" (formula "23"))
               (rule "close" (formula "26") (ifseqformula "25"))
            )
            (branch "Pre (contains)"
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "24")) (ifInst ""  (formula "16")) (ifInst ""  (formula "28")) (ifInst ""  (formula "12")))
               (rule "closeTrue" (formula "21"))
            )
            (branch "Null reference (callee = null)"
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
               (rule "closeTrue" (formula "21"))
            )
         )
      )
      (branch "Null reference (p = null)"
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "26")))
         (rule "closeTrue" (formula "28"))
      )
   )
   (branch "Null Reference (self = null)"
      (builtin "One Step Simplification" (formula "29"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (original_leaveElevator)"
   (builtin "One Step Simplification" (formula "25"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1,0") (ifseqformula "17"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "20"))
   (rule "notLeft" (formula "18"))
   (rule "close" (formula "21") (ifseqformula "20"))
)
(branch "Pre (original_leaveElevator)"
   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")) (ifInst ""  (formula "18")) (ifInst ""  (formula "17")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "15")) (ifInst ""  (formula "21")) (ifInst ""  (formula "11")))
   (rule "closeTrue" (formula "23"))
)
(branch "Null reference (self = null)"
   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
   (rule "closeTrue" (formula "23"))
)
)

}
