<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel"
    modelDirectory="/de.tu_bs.cs.isf.cbc.cbcclass.model/src-gen" creationIcons="false"
    editDirectory="/de.tu_bs.cs.isf.cbc.cbcclass.model.edit/src-gen" editorDirectory="/de.tu_bs.cs.isf.cbc.cbcclass.model.editor/src-gen"
    modelPluginID="de.tu_bs.cs.isf.cbc.cbcclass.model" modelName="Cbcclass" rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container"
    codeFormatting="true" importerID="org.eclipse.emf.importer.ecore" complianceLevel="10.0"
    copyrightFields="false" usedGenPackages="../../de.tu-bs.cs.isf.cbc.model/model/cbcmodel.genmodel#//cbcmodel"
    operationReflection="true" importOrganizing="true">
  <foreignModel>cbcclass.ecore</foreignModel>
  <testsDirectory xsi:nil="true"/>
  <genPackages prefix="Cbcclass" basePackage="de.tu_bs.cs.isf.cbc.cbcclass.model"
      disposableProviderFactory="true" ecorePackage="cbcclass.ecore#/">
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="cbcclass.ecore#//Visibility">
      <genEnumLiterals ecoreEnumLiteral="cbcclass.ecore#//Visibility/PUBLIC"/>
      <genEnumLiterals ecoreEnumLiteral="cbcclass.ecore#//Visibility/PRIVATE"/>
      <genEnumLiterals ecoreEnumLiteral="cbcclass.ecore#//Visibility/PROTECTED"/>
      <genEnumLiterals ecoreEnumLiteral="cbcclass.ecore#//Visibility/PACKAGE"/>
    </genEnums>
    <genClasses ecoreClass="cbcclass.ecore#//ModelClass">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//ModelClass/name"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//ModelClass/javaClassURI"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference cbcclass.ecore#//ModelClass/fields"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference cbcclass.ecore#//ModelClass/methods"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference cbcclass.ecore#//ModelClass/classInvariants"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//ModelClass/package"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//ModelClass/feature"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference cbcclass.ecore#//ModelClass/inheritsFrom"/>
    </genClasses>
    <genClasses ecoreClass="cbcclass.ecore#//Field">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Field/visibility"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Field/type"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Field/name"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Field/isStatic"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Field/isFinal"/>
      <genFeatures property="Readonly" createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Field/displayedName"
          get="String staticString = isStatic? &quot;static &quot; : &quot;&quot;; String finalString = isFinal ? &quot;final &quot; : &quot;&quot;; return visibility + &quot; &quot; + staticString + finalString + type + &quot; &quot; + name;"/>
    </genClasses>
    <genClasses ecoreClass="cbcclass.ecore#//Method">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Method/cbcDiagramURI"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Method/name"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Method/assignable"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference cbcclass.ecore#//Method/cbcStartTriple"/>
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference cbcclass.ecore#//Method/parentClass"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference cbcclass.ecore#//Method/precondition"
          get="return cbcStartTriple.getStatement().getPreCondition();"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference cbcclass.ecore#//Method/postcondition"
          get="return cbcStartTriple.getStatement().getPostCondition();"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Method/returnType"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference cbcclass.ecore#//Method/parameters"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Method/visibility"/>
      <genFeatures property="Readonly" createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Method/signature"
          get="String staticString = isStatic ? &quot;static &quot; : &quot;&quot;;&#x9;&#x9;String params = &quot;&quot;;&#x9;&#x9;if (getParameters().size() > 0) {&#x9;&#x9;&#x9;for (Parameter param : parameters) {&#x9;&#x9;&#x9;&#x9;if (!param.getName().equals(&quot;ret&quot;)) {&#x9;&#x9;&#x9;&#x9;&#x9;params += param.getType() + &quot; &quot; + param.getName() + &quot;, &quot;;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;params = params.substring(0, params.length() - 2);&#x9;&#x9;}&#x9;&#x9;return visibility.toString().toLowerCase() + &quot; &quot; + staticString + returnType + &quot; &quot; + name + &quot;(&quot; + params + &quot;)&quot;;">
        <genAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="set" value="if (newSignature.contains(&quot;private &quot;)) { &#x9;&#x9;&#x9;setVisibility(Visibility.PRIVATE); &#x9;&#x9;} else if (newSignature.contains(&quot;protected &quot;)) { &#x9;&#x9;&#x9;setVisibility(Visibility.PROTECTED); &#x9;&#x9;} else { &#x9;&#x9;&#x9;setVisibility(Visibility.PUBLIC); &#x9;&#x9;} &#x9;&#x9;//remove visibility &#x9;&#x9;newSignature = newSignature.replaceFirst(getVisibility().getLiteral().toLowerCase() + &quot; &quot;, &quot;&quot;); "/>
        </genAnnotations>
      </genFeatures>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Method/isStatic"/>
    </genClasses>
    <genClasses ecoreClass="cbcclass.ecore#//Parameter">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Parameter/type"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute cbcclass.ecore#//Parameter/name"/>
    </genClasses>
  </genPackages>
</genmodel:GenModel>
