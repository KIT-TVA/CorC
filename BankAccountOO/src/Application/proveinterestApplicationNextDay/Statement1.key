\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Sep 26 12:59:47 CEST 2022
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/mko/Documents/ISF/0_corc2.0/runtime-EclipseApplication/BankAccountOO";\include "helper.key";\programVariables {int interest1_oldVal; Application self; Heap heapAtPre;}\problem {
     true
   &   Account::exactInstance(Account::select(heap,
                                              self,
                                              Application::$account))
     = TRUE
   &   boolean::select(heap,
                       Account::select(heap,
                                       self,
                                       Application::$account),
                       java.lang.Object::<created>)
     = TRUE
   & !  Account::select(heap,
                        self,
                        Application::$account)
      = null
   &   Account::exactInstance(Account::select(heap,
                                              self,
                                              Application::$account))
     = TRUE
   &   boolean::select(heap,
                       Account::select(heap,
                                       self,
                                       Application::$account),
                       java.lang.Object::<created>)
     = TRUE
   & !  Account::select(heap,
                        self,
                        Application::$account)
      = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & Application::exactInstance(self) = TRUE
   & !self = null
   & java.lang.Object::<inv>(heap, self)
   & wellFormed(heap)
-> {heapAtPre:=heap
    || interest1_oldVal:=int::select(heap,
                                     Account::select(heap,
                                                     self,
                                                     Application::$account),
                                     Account::$interest)}
     \<{
         self.nextDay();
       }\> (    interest1_oldVal
              = int::select(heap,
                            Account::select(heap,
                                            self,
                                            Application::$account),
                            Account::$interest)
            &   int::select(heap,
                            Account::select(heap,
                                            self,
                                            Application::$account),
                            Account::$withdraw)
              = Z(0(#)))

}

\proof {
(keyLog "0" (keyUser "mko" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "253")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "9") (term "0,0,1"))
(builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_nextDay,exc,heapAfter_nextDay,anon_heap_nextDay") (contract "Application[Application::nextDay()].JML normal_behavior operation contract.0"))
(branch "Post (nextDay)"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=Account_withdraw_0"))
   (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "elementOfSingleton" (formula "10") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
   (rule "ifEqualsInteger" (formula "10"))
   (rule "pullOutSelect" (formula "10") (term "1,0,1,0") (inst "selectSK=Application_account_0"))
   (rule "applyEq" (formula "11") (term "1,0,1,1") (ifseqformula "10"))
   (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,1") (ifseqformula "10"))
   (rule "applyEq" (formula "11") (term "0,0,0,0,1") (ifseqformula "10"))
   (rule "applyEq" (formula "11") (term "0,0,0,0") (ifseqformula "10"))
   (rule "applyEq" (formula "11") (term "1,0,0,1,1,0,0,1") (ifseqformula "10"))
   (rule "applyEq" (formula "11") (term "1,0,0,1,1,0,0") (ifseqformula "10"))
   (rule "applyEq" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "10"))
   (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "3")))
   (rule "eqSymm" (formula "11") (term "0,0,0,1"))
   (rule "eqSymm" (formula "11") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "10") (term "0,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "applyEqReverse" (formula "11") (term "1,0,0,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
   (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
   (rule "hideAuxiliaryEq" (formula "10"))
   (rule "emptyModality" (formula "15") (term "1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "0,1"))
   (rule "replaceKnownSelect_taclet0_1" (formula "15") (term "1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_2" (formula "15") (term "1,0,0"))
   (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=Account_interest_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")) (ifInst ""  (formula "3")))
   (rule "eqSymm" (formula "16"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
   (rule "closeFalse" (formula "1"))
)
(branch "Exceptional Post (nextDay)"
   (builtin "One Step Simplification" (formula "11"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "9"))
   (rule "close" (formula "12") (ifseqformula "11"))
)
(branch "Pre (nextDay)"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")))
   (rule "closeTrue" (formula "9"))
)
(branch "Null reference (self = null)"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
   (rule "closeTrue" (formula "9"))
)
)

}
